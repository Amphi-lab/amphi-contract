{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_passAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_utilsAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_serviceAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_otherAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_ercAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "ErrorValue",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "ParameterException",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "Permissions",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_fileIndex",
						"type": "uint256[]"
					}
				],
				"name": "acceptForTranslator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_fileIndex",
						"type": "uint256[]"
					}
				],
				"name": "acceptForVerifer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_amphiAddress",
						"type": "address"
					}
				],
				"name": "addAmphiAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					}
				],
				"name": "closeFileState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "closeTask",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "endTransAccept",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "endTransVf",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					}
				],
				"name": "getFileState",
				"outputs": [
					{
						"internalType": "enum LibProject.FileState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "getIsTransferState",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "getPay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					}
				],
				"name": "getReturnRecord",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "toAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "returnFile",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "illustrate",
								"type": "string"
							}
						],
						"internalType": "struct LibProject.ReturnRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getTaskInfo",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "address",
										"name": "buyer",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "introduce",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "need",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "deadline",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "sourceLanguage",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "goalLanguage",
										"type": "uint256"
									},
									{
										"internalType": "uint256[]",
										"name": "preferList",
										"type": "uint256[]"
									},
									{
										"internalType": "uint256",
										"name": "translationType",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "workLoad",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isNonDisclosure",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "isCustomize",
										"type": "bool"
									},
									{
										"internalType": "uint256",
										"name": "bounty",
										"type": "uint256"
									},
									{
										"components": [
											{
												"components": [
													{
														"internalType": "string",
														"name": "name",
														"type": "string"
													},
													{
														"internalType": "uint256",
														"name": "size",
														"type": "uint256"
													},
													{
														"internalType": "uint256",
														"name": "videoLength",
														"type": "uint256"
													},
													{
														"internalType": "uint256",
														"name": "Page",
														"type": "uint256"
													},
													{
														"internalType": "uint256",
														"name": "words",
														"type": "uint256"
													},
													{
														"internalType": "uint256",
														"name": "fileType",
														"type": "uint256"
													},
													{
														"internalType": "string",
														"name": "path",
														"type": "string"
													}
												],
												"internalType": "struct LibProject.FileInfo",
												"name": "file",
												"type": "tuple"
											},
											{
												"internalType": "uint256",
												"name": "bounty",
												"type": "uint256"
											},
											{
												"internalType": "string",
												"name": "info",
												"type": "string"
											},
											{
												"internalType": "enum LibProject.FileState",
												"name": "state",
												"type": "uint8"
											},
											{
												"internalType": "uint256",
												"name": "lastUpload",
												"type": "uint256"
											}
										],
										"internalType": "struct LibProject.TaskInfo[]",
										"name": "tasks",
										"type": "tuple[]"
									},
									{
										"internalType": "address[]",
										"name": "translators",
										"type": "address[]"
									},
									{
										"internalType": "address[]",
										"name": "verifiers",
										"type": "address[]"
									},
									{
										"internalType": "uint256",
										"name": "maxT",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "maxV",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "numberT",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "numberV",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isTransActive",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "isVerActive",
										"type": "bool"
									},
									{
										"internalType": "enum LibProject.ProjectState",
										"name": "state",
										"type": "uint8"
									}
								],
								"internalType": "struct LibProject.TranslationPro",
								"name": "pro",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "taskerAddress",
										"type": "address"
									},
									{
										"internalType": "uint256[]",
										"name": "taskIndex",
										"type": "uint256[]"
									},
									{
										"components": [
											{
												"internalType": "enum LibProject.TaskerState",
												"name": "state",
												"type": "uint8"
											},
											{
												"internalType": "string",
												"name": "file",
												"type": "string"
											},
											{
												"internalType": "bool",
												"name": "isUsed",
												"type": "bool"
											}
										],
										"internalType": "struct LibProject.FileIndexInfo[]",
										"name": "taskerinfo",
										"type": "tuple[]"
									}
								],
								"internalType": "struct LibProject.ReturnTasker[]",
								"name": "transInfo",
								"type": "tuple[]"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "taskerAddress",
										"type": "address"
									},
									{
										"internalType": "uint256[]",
										"name": "taskIndex",
										"type": "uint256[]"
									},
									{
										"components": [
											{
												"internalType": "enum LibProject.TaskerState",
												"name": "state",
												"type": "uint8"
											},
											{
												"internalType": "string",
												"name": "file",
												"type": "string"
											},
											{
												"internalType": "bool",
												"name": "isUsed",
												"type": "bool"
											}
										],
										"internalType": "struct LibProject.FileIndexInfo[]",
										"name": "taskerinfo",
										"type": "tuple[]"
									}
								],
								"internalType": "struct LibProject.ReturnTasker[]",
								"name": "vfInfo",
								"type": "tuple[]"
							}
						],
						"internalType": "struct LibProject.ReturnTask",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getTaskState",
				"outputs": [
					{
						"internalType": "enum LibProject.ProjectState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_info",
						"type": "uint256[]"
					}
				],
				"name": "isAccepted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "newAmphiFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "newAmphiPass",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "newAmphiTrans",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "newCalculateUtils",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_tasker",
						"type": "address"
					}
				],
				"name": "overTimeTrans",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_tasker",
						"type": "address"
					}
				],
				"name": "overTimeVf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "payFine",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "releaseTime",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "introduce",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "need",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceLanguage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "goalLanguage",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "preferList",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256",
								"name": "translationType",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "workLoad",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNonDisclosure",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isCustomize",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "bounty",
								"type": "uint256"
							},
							{
								"components": [
									{
										"components": [
											{
												"internalType": "string",
												"name": "name",
												"type": "string"
											},
											{
												"internalType": "uint256",
												"name": "size",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "videoLength",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "Page",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "words",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "fileType",
												"type": "uint256"
											},
											{
												"internalType": "string",
												"name": "path",
												"type": "string"
											}
										],
										"internalType": "struct LibProject.FileInfo",
										"name": "file",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "bounty",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "info",
										"type": "string"
									},
									{
										"internalType": "enum LibProject.FileState",
										"name": "state",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "lastUpload",
										"type": "uint256"
									}
								],
								"internalType": "struct LibProject.TaskInfo[]",
								"name": "tasks",
								"type": "tuple[]"
							}
						],
						"internalType": "struct LibProject.ProParm",
						"name": "_t",
						"type": "tuple"
					}
				],
				"name": "postTask",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_taskerIndex",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isPass",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "_file",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_illustrate",
						"type": "string"
					}
				],
				"name": "receiveTask",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_file",
						"type": "string"
					}
				],
				"name": "sumbitTaskTrans",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_file",
						"type": "string"
					}
				],
				"name": "sumbitVf",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "updateOther",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "releaseTime",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "introduce",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "need",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceLanguage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "goalLanguage",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "preferList",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256",
								"name": "translationType",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "workLoad",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNonDisclosure",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isCustomize",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "bounty",
								"type": "uint256"
							},
							{
								"components": [
									{
										"components": [
											{
												"internalType": "string",
												"name": "name",
												"type": "string"
											},
											{
												"internalType": "uint256",
												"name": "size",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "videoLength",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "Page",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "words",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "fileType",
												"type": "uint256"
											},
											{
												"internalType": "string",
												"name": "path",
												"type": "string"
											}
										],
										"internalType": "struct LibProject.FileInfo",
										"name": "file",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "bounty",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "info",
										"type": "string"
									},
									{
										"internalType": "enum LibProject.FileState",
										"name": "state",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "lastUpload",
										"type": "uint256"
									}
								],
								"internalType": "struct LibProject.TaskInfo[]",
								"name": "tasks",
								"type": "tuple[]"
							}
						],
						"internalType": "struct LibProject.ProParm",
						"name": "_t",
						"type": "tuple"
					}
				],
				"name": "updateTask",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_trans",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fileIndex",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isPass",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "_file",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_illustrate",
						"type": "string"
					}
				],
				"name": "validate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"AmphiWorkImpl.sol": "AmphiWorkImpl"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"AmphiTrans.sol": {
			"keccak256": "0xe1051095c0e194055d83e4b15dc39a74bfe7282f75a7f8d872d303e94dd6ca7d",
			"license": "MIT",
			"urls": [
				"bzz-raw://84b6dfa48654273f97fc430712faa089f74eb34a4812f45eb203ad6d8db11404",
				"dweb:/ipfs/QmVneUZsgoJ8FbnVtnR8HdsnSokugf6kPR1rkBC3a4GQjp"
			]
		},
		"AmphiWorkImpl.sol": {
			"keccak256": "0x3ecb6339be0e2490bf3137e8b0d1d2747774de7b9b4f31db91fc8c7a3b3be8a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://4e1560a14d28b913a6e2d8ac4bd2ab4e1732bdb9d72aa33d9165ef37fb5bc9a5",
				"dweb:/ipfs/QmTw4dNpFf9YVVKKTMsjhNBB1AkYbwfoHAGiGe8nmVkTdK"
			]
		},
		"CalculateUtils.sol": {
			"keccak256": "0x1ead62159c4109c3c188538ff4441abaf58c0418daff9d8a1e53f75718ba776c",
			"license": "MIT",
			"urls": [
				"bzz-raw://f20b1a3d7a4afeb53a75cf52f1e0fbf7d42be58f1ee8dc248abde7ce3c835313",
				"dweb:/ipfs/QmaQJGRcYhHjHsjpXJvTuXmevXGxtRYMxFVG2XMcVeEGip"
			]
		},
		"LibProject.sol": {
			"keccak256": "0xaf5f7859b136be4f05d958f151c8d49eb4fc53946e0fd6fe29b3dd1b1481a1f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://a421048da5bcafc25fbd6af99b73165c7527c6d738e206bf59cabe166d3e36cc",
				"dweb:/ipfs/QmXKKinmLhxKfGHGXcpxz3UJPntKwmq3LdSAAmTTXRgSpG"
			]
		},
		"TransferService.sol": {
			"keccak256": "0xcba8a6074343195524d7b1407511db31322f7c31329149e39b3f4fbc7844d686",
			"license": "MIT",
			"urls": [
				"bzz-raw://2df37d64a6523795656d9408e4d7c63255bab5671381545793c18e47a76c6631",
				"dweb:/ipfs/QmbMVnRA8EmA1EvuQcdKwkdrS5DEavyvevVBqmHo2c6VVg"
			]
		},
		"contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		}
	},
	"version": 1
}
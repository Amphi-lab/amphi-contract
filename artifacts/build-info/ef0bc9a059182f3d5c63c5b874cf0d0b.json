{
	"id": "ef0bc9a059182f3d5c63c5b874cf0d0b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"calculateUtils_flat.sol": {
				"content": "\n// File: contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: utils/calculateUtils.sol\n\n\npragma solidity ^0.8.0;\n\nerror ParameterException(string);\nlibrary CalculateUtils {\n    uint256 constant RATE = 273;\n    uint256 constant VF_N = 3;\n   // uint256 private TransRate ;\n    //获得罚金比率\n    function punishRatio(uint256 _bounts) public pure returns(uint256) {\n        uint256 ratio;\n        if (_bounts <RATE) {\n            ratio = 1;\n        }else if(_bounts>=RATE&&_bounts<RATE*1e1) {\n            ratio = 1e1;\n        }else if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){\n            ratio = 1e2;\n        }else if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {\n            ratio = 1e3;\n        }else if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {\n            ratio = 1e4;\n        }else if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {\n            ratio = 1e5;\n        }else{\n            revert ParameterException(\"Unable to calculate,Please submit a request\");\n        }\n        return ratio;\n    }\n    //修改汇率\n    // function setRate(uint256 _rate) internal onlyOwner{\n    //     rate = _rate;\n    // }\n    //校对工作量（人） 校对人数= 翻译人数/校对工作量\n    // function setvfN(uint256 _vfN) internal onlyOwner {\n    //     vfN =_vfN;\n    // }\n    function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){\n        uint256 _maxV;\n        if(_transNumber<=VF_N){\n                 _maxV = 1;\n        }else{\n                  _maxV = SafeMath.div(_transNumber, VF_N);\n        }\n        return _maxV;\n    }\n    //计算任务赏金-翻译者\n     function getTaskTrans(uint256 _bounty) internal pure returns(uint256 _money) {\n        _money = getPercentage(_bounty,54);\n    }\n    function getTaskTransEnd(uint256 _bounty) internal pure returns(uint256 _money) {\n        _money = getPercentage(_bounty,24);\n    }\n    function getTaskTransFirst(uint256 _bounty) internal pure returns(uint256 _money){\n        _money = getPercentage(_bounty,30);\n    }\n    //计算任务赏金-校验者\n    function getTaskVf(uint256 _bounty) internal pure returns(uint256 _money) {\n        _money = getPercentage(_bounty,36);\n    }\n    //计算任务赏金\n    function getPercentage(uint256 _number, uint256 _ratio) pure internal returns(uint256 returnNumber) {\n        returnNumber = SafeMath.mul(_number,_ratio)/100;\n    }\n    //计算罚金\n    function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {\n        return SafeMath.div(_bounty,_ratio);\n    }\n    //计算扣除的赏金\n    function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {\n        return getPercentage(_bounty,_deduct);\n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 2000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"calculateUtils_flat.sol": {
				"CalculateUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "ParameterException",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deduct",
									"type": "uint256"
								}
							],
							"name": "getDeductMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_transNumber",
									"type": "uint256"
								}
							],
							"name": "getMatNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getPunish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounts",
									"type": "uint256"
								}
							],
							"name": "punishRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"calculateUtils_flat.sol\":6893:9432  library CalculateUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"calculateUtils_flat.sol\":6893:9432  library CalculateUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ca3ce\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8f861ba7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ce5c4bf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2e60202\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"calculateUtils_flat.sol\":7045:7744  function punishRatio(uint256 _bounts) public pure returns(uint256) {... */\n    tag_2:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":1018:1043   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1006:1008   */\n      0x20\n        /* \"#utility.yul\":991:1009   */\n      add\n        /* \"calculateUtils_flat.sol\":7045:7744  function punishRatio(uint256 _bounts) public pure returns(uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"calculateUtils_flat.sol\":9285:9425  function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {... */\n    tag_3:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":9120:9252  function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {... */\n    tag_4:\n      tag_6\n      tag_18\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":8024:8295  function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){... */\n    tag_5:\n      tag_6\n      tag_22\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":7045:7744  function punishRatio(uint256 _bounts) public pure returns(uint256) {... */\n    tag_9:\n        /* \"calculateUtils_flat.sol\":7103:7110  uint256 */\n      0x00\n        /* \"calculateUtils_flat.sol\":7122:7135  uint256 ratio */\n      dup1\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7149:7156  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7149:7162  _bounts <RATE */\n      lt\n        /* \"calculateUtils_flat.sol\":7145:7716  if (_bounts <RATE) {... */\n      iszero\n      tag_26\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7186:7187  1 */\n      0x01\n        /* \"calculateUtils_flat.sol\":7145:7716  if (_bounts <RATE) {... */\n      jump(tag_52)\n    tag_26:\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7206:7213  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7206:7219  _bounts>=RATE */\n      lt\n      iszero\n        /* \"calculateUtils_flat.sol\":7206:7237  _bounts>=RATE&&_bounts<RATE*1e1 */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7229:7237  RATE*1e1 */\n      tag_29\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7234:7237  1e1 */\n      0x0a\n        /* \"calculateUtils_flat.sol\":7229:7237  RATE*1e1 */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"calculateUtils_flat.sol\":7221:7228  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7221:7237  _bounts<RATE*1e1 */\n      lt\n        /* \"calculateUtils_flat.sol\":7206:7237  _bounts>=RATE&&_bounts<RATE*1e1 */\n    tag_28:\n        /* \"calculateUtils_flat.sol\":7203:7716  if(_bounts>=RATE&&_bounts<RATE*1e1) {... */\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7261:7264  1e1 */\n      0x0a\n        /* \"calculateUtils_flat.sol\":7203:7716  if(_bounts>=RATE&&_bounts<RATE*1e1) {... */\n      jump(tag_52)\n    tag_31:\n        /* \"calculateUtils_flat.sol\":7293:7301  RATE*1e1 */\n      tag_33\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7298:7301  1e1 */\n      0x0a\n        /* \"calculateUtils_flat.sol\":7293:7301  RATE*1e1 */\n      tag_30\n      jump\t// in\n    tag_33:\n        /* \"calculateUtils_flat.sol\":7283:7290  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7283:7301  _bounts >=RATE*1e1 */\n      lt\n      iszero\n        /* \"calculateUtils_flat.sol\":7283:7322  _bounts >=RATE*1e1 && _bounts <RATE*1e2 */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7314:7322  RATE*1e2 */\n      tag_35\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7319:7322  1e2 */\n      0x64\n        /* \"calculateUtils_flat.sol\":7314:7322  RATE*1e2 */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"calculateUtils_flat.sol\":7305:7312  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7305:7322  _bounts <RATE*1e2 */\n      lt\n        /* \"calculateUtils_flat.sol\":7283:7322  _bounts >=RATE*1e1 && _bounts <RATE*1e2 */\n    tag_34:\n        /* \"calculateUtils_flat.sol\":7280:7716  if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){... */\n      iszero\n      tag_36\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7345:7348  1e2 */\n      0x64\n        /* \"calculateUtils_flat.sol\":7280:7716  if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){... */\n      jump(tag_52)\n    tag_36:\n        /* \"calculateUtils_flat.sol\":7377:7385  RATE*1e2 */\n      tag_38\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7382:7385  1e2 */\n      0x64\n        /* \"calculateUtils_flat.sol\":7377:7385  RATE*1e2 */\n      tag_30\n      jump\t// in\n    tag_38:\n        /* \"calculateUtils_flat.sol\":7367:7374  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7367:7385  _bounts >=RATE*1e2 */\n      lt\n      iszero\n        /* \"calculateUtils_flat.sol\":7367:7407  _bounts >=RATE*1e2 && _bounts < RATE*1e3 */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7399:7407  RATE*1e3 */\n      tag_40\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7404:7407  1e3 */\n      0x03e8\n        /* \"calculateUtils_flat.sol\":7399:7407  RATE*1e3 */\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"calculateUtils_flat.sol\":7389:7396  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7389:7407  _bounts < RATE*1e3 */\n      lt\n        /* \"calculateUtils_flat.sol\":7367:7407  _bounts >=RATE*1e2 && _bounts < RATE*1e3 */\n    tag_39:\n        /* \"calculateUtils_flat.sol\":7364:7716  if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {... */\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7431:7434  1e3 */\n      0x03e8\n        /* \"calculateUtils_flat.sol\":7364:7716  if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {... */\n      jump(tag_52)\n    tag_41:\n        /* \"calculateUtils_flat.sol\":7462:7470  RATE*1e3 */\n      tag_43\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7467:7470  1e3 */\n      0x03e8\n        /* \"calculateUtils_flat.sol\":7462:7470  RATE*1e3 */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"calculateUtils_flat.sol\":7453:7460  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7453:7470  _bounts>=RATE*1e3 */\n      lt\n      iszero\n        /* \"calculateUtils_flat.sol\":7453:7492  _bounts>=RATE*1e3 && _bounts <=RATE*1e4 */\n      dup1\n      iszero\n      tag_44\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7484:7492  RATE*1e4 */\n      tag_45\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7489:7492  1e4 */\n      0x2710\n        /* \"calculateUtils_flat.sol\":7484:7492  RATE*1e4 */\n      tag_30\n      jump\t// in\n    tag_45:\n        /* \"calculateUtils_flat.sol\":7474:7481  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7474:7492  _bounts <=RATE*1e4 */\n      gt\n      iszero\n        /* \"calculateUtils_flat.sol\":7453:7492  _bounts>=RATE*1e3 && _bounts <=RATE*1e4 */\n    tag_44:\n        /* \"calculateUtils_flat.sol\":7450:7716  if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {... */\n      iszero\n      tag_46\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7516:7519  1e4 */\n      0x2710\n        /* \"calculateUtils_flat.sol\":7450:7716  if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {... */\n      jump(tag_52)\n    tag_46:\n        /* \"calculateUtils_flat.sol\":7547:7555  RATE*1e4 */\n      tag_48\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7552:7555  1e4 */\n      0x2710\n        /* \"calculateUtils_flat.sol\":7547:7555  RATE*1e4 */\n      tag_30\n      jump\t// in\n    tag_48:\n        /* \"calculateUtils_flat.sol\":7538:7545  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7538:7555  _bounts>=RATE*1e4 */\n      lt\n      iszero\n        /* \"calculateUtils_flat.sol\":7538:7577  _bounts>=RATE*1e4 && _bounts <=RATE*1e5 */\n      dup1\n      iszero\n      tag_49\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7569:7577  RATE*1e5 */\n      tag_50\n        /* \"calculateUtils_flat.sol\":6946:6949  273 */\n      0x0111\n        /* \"calculateUtils_flat.sol\":7574:7577  1e5 */\n      0x0186a0\n        /* \"calculateUtils_flat.sol\":7569:7577  RATE*1e5 */\n      tag_30\n      jump\t// in\n    tag_50:\n        /* \"calculateUtils_flat.sol\":7559:7566  _bounts */\n      dup4\n        /* \"calculateUtils_flat.sol\":7559:7577  _bounts <=RATE*1e5 */\n      gt\n      iszero\n        /* \"calculateUtils_flat.sol\":7538:7577  _bounts>=RATE*1e4 && _bounts <=RATE*1e5 */\n    tag_49:\n        /* \"calculateUtils_flat.sol\":7535:7716  if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {... */\n      iszero\n      tag_51\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":7601:7604  1e5 */\n      0x0186a0\n        /* \"calculateUtils_flat.sol\":7535:7716  if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {... */\n      jump(tag_52)\n    tag_51:\n        /* \"calculateUtils_flat.sol\":7640:7705  ParameterException(\"Unable to calculate,Please submit a request\") */\n      mload(0x40)\n      0xd1d89b7400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":654:656   */\n      0x20\n        /* \"calculateUtils_flat.sol\":7640:7705  ParameterException(\"Unable to calculate,Please submit a request\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":636:657   */\n      mstore\n        /* \"#utility.yul\":693:695   */\n      0x2b\n        /* \"#utility.yul\":673:691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":666:696   */\n      mstore\n        /* \"#utility.yul\":732:766   */\n      0x556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69\n        /* \"#utility.yul\":712:730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":705:767   */\n      mstore\n        /* \"#utility.yul\":803:816   */\n      0x7420612072657175657374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":783:801   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":776:817   */\n      mstore\n        /* \"#utility.yul\":834:853   */\n      0x84\n      add\n        /* \"calculateUtils_flat.sol\":7640:7705  ParameterException(\"Unable to calculate,Please submit a request\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"calculateUtils_flat.sol\":7535:7716  if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {... */\n    tag_52:\n        /* \"calculateUtils_flat.sol\":7732:7737  ratio */\n      swap3\n        /* \"calculateUtils_flat.sol\":7045:7744  function punishRatio(uint256 _bounts) public pure returns(uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"calculateUtils_flat.sol\":9285:9425  function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {... */\n    tag_15:\n        /* \"calculateUtils_flat.sol\":9362:9369  uint256 */\n      0x00\n        /* \"calculateUtils_flat.sol\":9388:9418  getPercentage(_bounty,_deduct) */\n      tag_56\n        /* \"calculateUtils_flat.sol\":9402:9409  _bounty */\n      dup4\n        /* \"calculateUtils_flat.sol\":9410:9417  _deduct */\n      dup4\n        /* \"calculateUtils_flat.sol\":9388:9401  getPercentage */\n      tag_57\n        /* \"calculateUtils_flat.sol\":9388:9418  getPercentage(_bounty,_deduct) */\n      jump\t// in\n    tag_56:\n        /* \"calculateUtils_flat.sol\":9381:9418  return getPercentage(_bounty,_deduct) */\n      swap4\n        /* \"calculateUtils_flat.sol\":9285:9425  function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"calculateUtils_flat.sol\":9120:9252  function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {... */\n    tag_19:\n        /* \"calculateUtils_flat.sol\":9191:9198  uint256 */\n      0x00\n        /* \"calculateUtils_flat.sol\":9217:9245  SafeMath.div(_bounty,_ratio) */\n      tag_56\n        /* \"calculateUtils_flat.sol\":9230:9237  _bounty */\n      dup3\n        /* \"calculateUtils_flat.sol\":9238:9244  _ratio */\n      dup5\n        /* \"calculateUtils_flat.sol\":9217:9229  SafeMath.div */\n      tag_60\n        /* \"calculateUtils_flat.sol\":9217:9245  SafeMath.div(_bounty,_ratio) */\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":8024:8295  function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){... */\n    tag_23:\n        /* \"calculateUtils_flat.sol\":8089:8096  uint256 */\n      0x00\n        /* \"calculateUtils_flat.sol\":8108:8121  uint256 _maxV */\n      dup1\n        /* \"calculateUtils_flat.sol\":6979:6980  3 */\n      0x03\n        /* \"calculateUtils_flat.sol\":8134:8146  _transNumber */\n      dup4\n        /* \"calculateUtils_flat.sol\":8134:8152  _transNumber<=VF_N */\n      gt\n        /* \"calculateUtils_flat.sol\":8131:8267  if(_transNumber<=VF_N){... */\n      tag_62\n      jumpi\n      pop\n        /* \"calculateUtils_flat.sol\":8180:8181  1 */\n      0x01\n        /* \"calculateUtils_flat.sol\":8131:8267  if(_transNumber<=VF_N){... */\n      jump(tag_52)\n    tag_62:\n        /* \"calculateUtils_flat.sol\":8224:8256  SafeMath.div(_transNumber, VF_N) */\n      tag_56\n        /* \"calculateUtils_flat.sol\":8237:8249  _transNumber */\n      dup4\n        /* \"calculateUtils_flat.sol\":6979:6980  3 */\n      0x03\n        /* \"calculateUtils_flat.sol\":8224:8236  SafeMath.div */\n      tag_60\n        /* \"calculateUtils_flat.sol\":8224:8256  SafeMath.div(_transNumber, VF_N) */\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":8932:9096  function getPercentage(uint256 _number, uint256 _ratio) pure internal returns(uint256 returnNumber) {... */\n    tag_57:\n        /* \"calculateUtils_flat.sol\":9010:9030  uint256 returnNumber */\n      0x00\n        /* \"calculateUtils_flat.sol\":9086:9089  100 */\n      0x64\n        /* \"calculateUtils_flat.sol\":9057:9085  SafeMath.mul(_number,_ratio) */\n      tag_66\n        /* \"calculateUtils_flat.sol\":9070:9077  _number */\n      dup5\n        /* \"calculateUtils_flat.sol\":9078:9084  _ratio */\n      dup5\n        /* \"calculateUtils_flat.sol\":9057:9069  SafeMath.mul */\n      tag_67\n        /* \"calculateUtils_flat.sol\":9057:9085  SafeMath.mul(_number,_ratio) */\n      jump\t// in\n    tag_66:\n        /* \"calculateUtils_flat.sol\":9057:9089  SafeMath.mul(_number,_ratio)/100 */\n      tag_56\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":3864:3960  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_60:\n        /* \"calculateUtils_flat.sol\":3922:3929  uint256 */\n      0x00\n        /* \"calculateUtils_flat.sol\":3948:3953  a / b */\n      tag_56\n        /* \"calculateUtils_flat.sol\":3952:3953  b */\n      dup3\n        /* \"calculateUtils_flat.sol\":3948:3949  a */\n      dup5\n        /* \"calculateUtils_flat.sol\":3948:3953  a / b */\n      tag_69\n      jump\t// in\n        /* \"calculateUtils_flat.sol\":3479:3575  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_67:\n        /* \"calculateUtils_flat.sol\":3537:3544  uint256 */\n      0x00\n        /* \"calculateUtils_flat.sol\":3563:3568  a * b */\n      tag_56\n        /* \"calculateUtils_flat.sol\":3567:3568  b */\n      dup3\n        /* \"calculateUtils_flat.sol\":3563:3564  a */\n      dup5\n        /* \"calculateUtils_flat.sol\":3563:3568  a * b */\n      tag_30\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_76:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:447   */\n    tag_14:\n        /* \"#utility.yul\":267:273   */\n      0x00\n        /* \"#utility.yul\":275:281   */\n      dup1\n        /* \"#utility.yul\":328:330   */\n      0x40\n        /* \"#utility.yul\":316:325   */\n      dup4\n        /* \"#utility.yul\":307:314   */\n      dup6\n        /* \"#utility.yul\":303:326   */\n      sub\n        /* \"#utility.yul\":299:331   */\n      slt\n        /* \"#utility.yul\":296:348   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":344:345   */\n      0x00\n        /* \"#utility.yul\":341:342   */\n      dup1\n        /* \"#utility.yul\":334:346   */\n      revert\n        /* \"#utility.yul\":296:348   */\n    tag_78:\n      pop\n      pop\n        /* \"#utility.yul\":367:390   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":437:439   */\n      0x20\n        /* \"#utility.yul\":422:440   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":409:441   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":199:447   */\n      jump\t// out\n        /* \"#utility.yul\":1054:1328   */\n    tag_69:\n        /* \"#utility.yul\":1094:1095   */\n      0x00\n        /* \"#utility.yul\":1120:1121   */\n      dup3\n        /* \"#utility.yul\":1110:1299   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1155:1232   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1152:1153   */\n      0x00\n        /* \"#utility.yul\":1145:1233   */\n      mstore\n        /* \"#utility.yul\":1256:1260   */\n      0x12\n        /* \"#utility.yul\":1253:1254   */\n      0x04\n        /* \"#utility.yul\":1246:1261   */\n      mstore\n        /* \"#utility.yul\":1284:1288   */\n      0x24\n        /* \"#utility.yul\":1281:1282   */\n      0x00\n        /* \"#utility.yul\":1274:1289   */\n      revert\n        /* \"#utility.yul\":1110:1299   */\n    tag_82:\n      pop\n        /* \"#utility.yul\":1313:1322   */\n      div\n      swap1\n        /* \"#utility.yul\":1054:1328   */\n      jump\t// out\n        /* \"#utility.yul\":1333:1715   */\n    tag_30:\n        /* \"#utility.yul\":1373:1380   */\n      0x00\n        /* \"#utility.yul\":1499:1500   */\n      dup2\n        /* \"#utility.yul\":1431:1497   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1427:1501   */\n      div\n        /* \"#utility.yul\":1424:1425   */\n      dup4\n        /* \"#utility.yul\":1421:1502   */\n      gt\n        /* \"#utility.yul\":1416:1417   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      iszero\n        /* \"#utility.yul\":1402:1419   */\n      iszero\n        /* \"#utility.yul\":1398:1503   */\n      and\n        /* \"#utility.yul\":1395:1680   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1536:1613   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1533:1534   */\n      0x00\n        /* \"#utility.yul\":1526:1614   */\n      mstore\n        /* \"#utility.yul\":1637:1641   */\n      0x11\n        /* \"#utility.yul\":1634:1635   */\n      0x04\n        /* \"#utility.yul\":1627:1642   */\n      mstore\n        /* \"#utility.yul\":1665:1669   */\n      0x24\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1655:1670   */\n      revert\n        /* \"#utility.yul\":1395:1680   */\n    tag_84:\n      pop\n        /* \"#utility.yul\":1700:1709   */\n      mul\n      swap1\n        /* \"#utility.yul\":1333:1715   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f56fed1f4458ad6aeb421dbadc374ae6c4cd5107419ad9b852b3329fd05f8cc164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6103e361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6ca3ce1461005b5780638f861ba7146100805780639ce5c4bf14610093578063f2e60202146100a6575b600080fd5b61006e6100693660046102d3565b6100b9565b60405190815260200160405180910390f35b61006e61008e3660046102ec565b610266565b61006e6100a13660046102ec565b610279565b61006e6100b43660046102d3565b610285565b6000806101118310156100ce57506001610260565b61011183101580156100eb57506100e8610111600a610349565b83105b156100f85750600a610260565b610105610111600a610349565b831015801561011f575061011c6101116064610349565b83105b1561012c57506064610260565b6101396101116064610349565b831015801561015457506101516101116103e8610349565b83105b1561016257506103e8610260565b6101706101116103e8610349565b831015801561018c5750610188610111612710610349565b8311155b1561019a5750612710610260565b6101a8610111612710610349565b83101580156101c557506101c1610111620186a0610349565b8311155b156101d45750620186a0610260565b6040517fd1d89b7400000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960448201527f7420612072657175657374000000000000000000000000000000000000000000606482015260840160405180910390fd5b92915050565b600061027283836102a3565b9392505050565b600061027282846102bb565b6000806003831161029857506001610260565b6102728360036102bb565b600060646102b184846102c7565b610272919061030e565b6000610272828461030e565b60006102728284610349565b6000602082840312156102e557600080fd5b5035919050565b600080604083850312156102ff57600080fd5b50508035926020909101359150565b600082610344577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50029056fea2646970667358221220f56fed1f4458ad6aeb421dbadc374ae6c4cd5107419ad9b852b3329fd05f8cc164736f6c63430008070033",
							"opcodes": "PUSH2 0x3E3 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x8E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0x6E PUSH2 0xA1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH2 0x6E PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0xCE JUMPI POP PUSH1 0x1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xEB JUMPI POP PUSH2 0xE8 PUSH2 0x111 PUSH1 0xA PUSH2 0x349 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0xF8 JUMPI POP PUSH1 0xA PUSH2 0x260 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x111 PUSH1 0xA PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x11F JUMPI POP PUSH2 0x11C PUSH2 0x111 PUSH1 0x64 PUSH2 0x349 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x12C JUMPI POP PUSH1 0x64 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x111 PUSH1 0x64 PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x154 JUMPI POP PUSH2 0x151 PUSH2 0x111 PUSH2 0x3E8 PUSH2 0x349 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x162 JUMPI POP PUSH2 0x3E8 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x111 PUSH2 0x3E8 PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI POP PUSH2 0x188 PUSH2 0x111 PUSH2 0x2710 PUSH2 0x349 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x19A JUMPI POP PUSH2 0x2710 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x111 PUSH2 0x2710 PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI POP PUSH2 0x1C1 PUSH2 0x111 PUSH3 0x186A0 PUSH2 0x349 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x1D4 JUMPI POP PUSH3 0x186A0 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP4 DUP4 PUSH2 0x2A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP3 DUP5 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x298 JUMPI POP PUSH1 0x1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x272 DUP4 PUSH1 0x3 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2B1 DUP5 DUP5 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP3 DUP5 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP3 DUP5 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x344 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH16 0xED1F4458AD6AEB421DBADC374AE6C4CD MLOAD SMOD COINBASE SWAP11 0xD9 0xB8 MSTORE 0xB3 ORIGIN SWAP16 0xD0 0x5F DUP13 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "6893:2539:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6893:2539:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_220": {
									"entryPoint": 699,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDeductMoney_574": {
									"entryPoint": 614,
									"id": 574,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMatNumber_463": {
									"entryPoint": 645,
									"id": 463,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPercentage_543": {
									"entryPoint": 675,
									"id": 543,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPunish_559": {
									"entryPoint": 633,
									"id": 559,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 711,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@punishRatio_432": {
									"entryPoint": 185,
									"id": 432,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1717:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "286:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "332:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "341:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "344:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "334:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "334:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "334:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "307:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "316:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "299:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:32:1"
															},
															"nodeType": "YulIf",
															"src": "296:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "357:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "380:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "367:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "399:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "426:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "437:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "422:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "409:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "399:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "244:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "255:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "267:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													}
												],
												"src": "199:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "626:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "636:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "688:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "693:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "666:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "727:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:1"
																	},
																	{
																		"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "732:34:1",
																		"type": "",
																		"value": "Unable to calculate,Please submi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "705:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "787:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "798:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:18:1"
																	},
																	{
																		"hexValue": "7420612072657175657374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "803:13:1",
																		"type": "",
																		"value": "t a request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "603:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "617:4:1",
														"type": ""
													}
												],
												"src": "452:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "973:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "983:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "995:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "991:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "983:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1025:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1036:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1018:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "942:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "953:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "964:4:1",
														"type": ""
													}
												],
												"src": "864:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1131:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1152:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1155:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1145:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1145:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1145:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1253:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1256:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1246:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1246:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1281:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1284:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1274:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1274:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1274:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1120:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:9:1"
															},
															"nodeType": "YulIf",
															"src": "1110:189:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1308:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1317:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1320:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1308:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1085:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1088:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1094:1:1",
														"type": ""
													}
												],
												"src": "1054:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:330:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1512:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1536:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1526:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1526:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1627:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1662:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1665:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1655:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1655:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1655:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1416:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1409:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1409:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1402:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1424:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1431:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1499:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1427:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1427:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1421:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:105:1"
															},
															"nodeType": "YulIf",
															"src": "1395:285:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1689:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1704:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1707:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1689:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1364:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1367:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1373:7:1",
														"type": ""
													}
												],
												"src": "1333:382:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Unable to calculate,Please submi\")\n        mstore(add(headStart, 96), \"t a request\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x)))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6ca3ce1461005b5780638f861ba7146100805780639ce5c4bf14610093578063f2e60202146100a6575b600080fd5b61006e6100693660046102d3565b6100b9565b60405190815260200160405180910390f35b61006e61008e3660046102ec565b610266565b61006e6100a13660046102ec565b610279565b61006e6100b43660046102d3565b610285565b6000806101118310156100ce57506001610260565b61011183101580156100eb57506100e8610111600a610349565b83105b156100f85750600a610260565b610105610111600a610349565b831015801561011f575061011c6101116064610349565b83105b1561012c57506064610260565b6101396101116064610349565b831015801561015457506101516101116103e8610349565b83105b1561016257506103e8610260565b6101706101116103e8610349565b831015801561018c5750610188610111612710610349565b8311155b1561019a5750612710610260565b6101a8610111612710610349565b83101580156101c557506101c1610111620186a0610349565b8311155b156101d45750620186a0610260565b6040517fd1d89b7400000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960448201527f7420612072657175657374000000000000000000000000000000000000000000606482015260840160405180910390fd5b92915050565b600061027283836102a3565b9392505050565b600061027282846102bb565b6000806003831161029857506001610260565b6102728360036102bb565b600060646102b184846102c7565b610272919061030e565b6000610272828461030e565b60006102728284610349565b6000602082840312156102e557600080fd5b5035919050565b600080604083850312156102ff57600080fd5b50508035926020909101359150565b600082610344577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50029056fea2646970667358221220f56fed1f4458ad6aeb421dbadc374ae6c4cd5107419ad9b852b3329fd05f8cc164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x8E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0x6E PUSH2 0xA1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH2 0x6E PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0xCE JUMPI POP PUSH1 0x1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xEB JUMPI POP PUSH2 0xE8 PUSH2 0x111 PUSH1 0xA PUSH2 0x349 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0xF8 JUMPI POP PUSH1 0xA PUSH2 0x260 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x111 PUSH1 0xA PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x11F JUMPI POP PUSH2 0x11C PUSH2 0x111 PUSH1 0x64 PUSH2 0x349 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x12C JUMPI POP PUSH1 0x64 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x111 PUSH1 0x64 PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x154 JUMPI POP PUSH2 0x151 PUSH2 0x111 PUSH2 0x3E8 PUSH2 0x349 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x162 JUMPI POP PUSH2 0x3E8 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x111 PUSH2 0x3E8 PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI POP PUSH2 0x188 PUSH2 0x111 PUSH2 0x2710 PUSH2 0x349 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x19A JUMPI POP PUSH2 0x2710 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x111 PUSH2 0x2710 PUSH2 0x349 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI POP PUSH2 0x1C1 PUSH2 0x111 PUSH3 0x186A0 PUSH2 0x349 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x1D4 JUMPI POP PUSH3 0x186A0 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP4 DUP4 PUSH2 0x2A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP3 DUP5 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x298 JUMPI POP PUSH1 0x1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x272 DUP4 PUSH1 0x3 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2B1 DUP5 DUP5 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP3 DUP5 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP3 DUP5 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x344 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH16 0xED1F4458AD6AEB421DBADC374AE6C4CD MLOAD SMOD COINBASE SWAP11 0xD9 0xB8 MSTORE 0xB3 ORIGIN SWAP16 0xD0 0x5F DUP13 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "6893:2539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:699;;;;;;:::i;:::-;;:::i;:::-;;;1018:25:1;;;1006:2;991:18;7045:699:0;;;;;;;9285:140;;;;;;:::i;:::-;;:::i;9120:132::-;;;;;;:::i;:::-;;:::i;8024:271::-;;;;;;:::i;:::-;;:::i;7045:699::-;7103:7;7122:13;6946:3;7149:7;:13;7145:571;;;-1:-1:-1;7186:1:0;7145:571;;;6946:3;7206:7;:13;;:31;;;;-1:-1:-1;7229:8:0;6946:3;7234;7229:8;:::i;:::-;7221:7;:16;7206:31;7203:513;;;-1:-1:-1;7261:3:0;7203:513;;;7293:8;6946:3;7298;7293:8;:::i;:::-;7283:7;:18;;:39;;;;-1:-1:-1;7314:8:0;6946:3;7319;7314:8;:::i;:::-;7305:7;:17;7283:39;7280:436;;;-1:-1:-1;7345:3:0;7280:436;;;7377:8;6946:3;7382;7377:8;:::i;:::-;7367:7;:18;;:40;;;;-1:-1:-1;7399:8:0;6946:3;7404;7399:8;:::i;:::-;7389:7;:18;7367:40;7364:352;;;-1:-1:-1;7431:3:0;7364:352;;;7462:8;6946:3;7467;7462:8;:::i;:::-;7453:7;:17;;:39;;;;-1:-1:-1;7484:8:0;6946:3;7489;7484:8;:::i;:::-;7474:7;:18;;7453:39;7450:266;;;-1:-1:-1;7516:3:0;7450:266;;;7547:8;6946:3;7552;7547:8;:::i;:::-;7538:7;:17;;:39;;;;-1:-1:-1;7569:8:0;6946:3;7574;7569:8;:::i;:::-;7559:7;:18;;7538:39;7535:181;;;-1:-1:-1;7601:3:0;7535:181;;;7640:65;;;;;654:2:1;7640:65:0;;;636:21:1;693:2;673:18;;;666:30;732:34;712:18;;;705:62;803:13;783:18;;;776:41;834:19;;7640:65:0;;;;;;;7535:181;7732:5;7045:699;-1:-1:-1;;7045:699:0:o;9285:140::-;9362:7;9388:30;9402:7;9410;9388:13;:30::i;:::-;9381:37;9285:140;-1:-1:-1;;;9285:140:0:o;9120:132::-;9191:7;9217:28;9230:7;9238:6;9217:12;:28::i;8024:271::-;8089:7;8108:13;6979:1;8134:12;:18;8131:136;;-1:-1:-1;8180:1:0;8131:136;;;8224:32;8237:12;6979:1;8224:12;:32::i;8932:164::-;9010:20;9086:3;9057:28;9070:7;9078:6;9057:12;:28::i;:::-;:32;;;;:::i;3864:96::-;3922:7;3948:5;3952:1;3948;:5;:::i;3479:96::-;3537:7;3563:5;3567:1;3563;:5;:::i;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:248::-;267:6;275;328:2;316:9;307:7;303:23;299:32;296:52;;;344:1;341;334:12;296:52;-1:-1:-1;;367:23:1;;;437:2;422:18;;;409:32;;-1:-1:-1;199:248:1:o;1054:274::-;1094:1;1120;1110:189;;1155:77;1152:1;1145:88;1256:4;1253:1;1246:15;1284:4;1281:1;1274:15;1110:189;-1:-1:-1;1313:9:1;;1054:274::o;1333:382::-;1373:7;1499:1;1431:66;1427:74;1424:1;1421:81;1416:1;1409:9;1402:17;1398:105;1395:285;;;1536:77;1533:1;1526:88;1637:4;1634:1;1627:15;1665:4;1662:1;1655:15;1395:285;-1:-1:-1;1700:9:1;;1333:382::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199000",
								"executionCost": "276",
								"totalCost": "199276"
							},
							"external": {
								"getDeductMoney(uint256,uint256)": "infinite",
								"getMatNumber(uint256)": "infinite",
								"getPunish(uint256,uint256)": "infinite",
								"punishRatio(uint256)": "infinite"
							},
							"internal": {
								"getPercentage(uint256,uint256)": "infinite",
								"getTaskTrans(uint256)": "infinite",
								"getTaskTransEnd(uint256)": "infinite",
								"getTaskTransFirst(uint256)": "infinite",
								"getTaskVf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6893,
									"end": 9432,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56fed1f4458ad6aeb421dbadc374ae6c4cd5107419ad9b852b3329fd05f8cc164736f6c63430008070033",
									".code": [
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CA3CE"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "8F861BA7"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "9CE5C4BF"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "F2E60202"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 9432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7149,
											"end": 7156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7145,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7219,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7206,
											"end": 7237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7229,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7234,
											"end": 7237,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7229,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7229,
											"end": 7237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7229,
											"end": 7237,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7229,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7237,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7237,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7206,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7261,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7203,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7293,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7298,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7293,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7293,
											"end": 7301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7293,
											"end": 7301,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7293,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7283,
											"end": 7322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7319,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7322,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7322,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7283,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7345,
											"end": 7348,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7280,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7377,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7382,
											"end": 7385,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7377,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7377,
											"end": 7385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7377,
											"end": 7385,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7377,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7367,
											"end": 7407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7399,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7404,
											"end": 7407,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 7399,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7399,
											"end": 7407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7399,
											"end": 7407,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7407,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7367,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7364,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7462,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7467,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 7462,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7462,
											"end": 7470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7462,
											"end": 7470,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7462,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7470,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7453,
											"end": 7492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7489,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7492,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7492,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7453,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7450,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7552,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 7547,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7547,
											"end": 7555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7547,
											"end": 7555,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7547,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7538,
											"end": 7577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7574,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 7569,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7569,
											"end": 7577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7569,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7569,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7538,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7604,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "D1D89B7400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 693,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 673,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 673,
											"end": 691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 673,
											"end": 691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 705,
											"end": 767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 803,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "7420612072657175657374000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 783,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 834,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 834,
											"end": 853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7535,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7045,
											"end": 7744,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9402,
											"end": 9409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9410,
											"end": 9417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9388,
											"end": 9418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9388,
											"end": 9418,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9388,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9418,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9285,
											"end": 9425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9120,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9191,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9230,
											"end": 9237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9238,
											"end": 9244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9217,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9217,
											"end": 9245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8024,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6980,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8134,
											"end": 8146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8134,
											"end": 8152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8131,
											"end": 8267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8131,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8131,
											"end": 8267,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8267,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8131,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8224,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8237,
											"end": 8249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6980,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8224,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8224,
											"end": 8256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 9096,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8932,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9010,
											"end": 9030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9089,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9057,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9070,
											"end": 9077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 9084,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9057,
											"end": 9085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9057,
											"end": 9085,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9057,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3479,
											"end": 3575,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3479,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 447,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 299,
											"end": 331,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 296,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 344,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 296,
											"end": 348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 437,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 447,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1054,
											"end": 1328,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1054,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1110,
											"end": 1299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1232,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1260,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1299,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1110,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1328,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1333,
											"end": 1715,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1333,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1501,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1502,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1419,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1395,
											"end": 1680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1395,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1709,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1715,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getDeductMoney(uint256,uint256)": "8f861ba7",
							"getMatNumber(uint256)": "f2e60202",
							"getPunish(uint256,uint256)": "9ce5c4bf",
							"punishRatio(uint256)": "4f6ca3ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ParameterException\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deduct\",\"type\":\"uint256\"}],\"name\":\"getDeductMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transNumber\",\"type\":\"uint256\"}],\"name\":\"getMatNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getPunish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounts\",\"type\":\"uint256\"}],\"name\":\"punishRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"calculateUtils_flat.sol\":\"CalculateUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"calculateUtils_flat.sol\":{\"keccak256\":\"0x8c7c45c1ede3f60ad2e0c57cf75bc9d35a17538e0e5a7e4980813e2b1fe791a7\",\"urls\":[\"bzz-raw://66ebc5ca24a8af811b9f36a676bd592032c0f6abbd3ad8ab4dddc67f94b79718\",\"dweb:/ipfs/QmdShgYZptjETuNrzkrw7saiQMEexEf6ges1VL28ZtDzRc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"calculateUtils_flat.sol\":496:6796  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"calculateUtils_flat.sol\":496:6796  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122030bc70a51e088688c5585dc7279f919999afa284e694017b217491d77ae09cfb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122030bc70a51e088688c5585dc7279f919999afa284e694017b217491d77ae09cfb64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xBC PUSH17 0xA51E088688C5585DC7279F919999AFA284 0xE6 SWAP5 ADD PUSH28 0x217491D77AE09CFB64736F6C63430008070033000000000000000000 ",
							"sourceMap": "496:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122030bc70a51e088688c5585dc7279f919999afa284e694017b217491d77ae09cfb64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xBC PUSH17 0xA51E088688C5585DC7279F919999AFA284 0xE6 SWAP5 ADD PUSH28 0x217491D77AE09CFB64736F6C63430008070033000000000000000000 ",
							"sourceMap": "496:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 496,
									"end": 6796,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030bc70a51e088688c5585dc7279f919999afa284e694017b217491d77ae09cfb64736f6c63430008070033",
									".code": [
										{
											"begin": 496,
											"end": 6796,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 6796,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"calculateUtils_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"calculateUtils_flat.sol\":{\"keccak256\":\"0x8c7c45c1ede3f60ad2e0c57cf75bc9d35a17538e0e5a7e4980813e2b1fe791a7\",\"urls\":[\"bzz-raw://66ebc5ca24a8af811b9f36a676bd592032c0f6abbd3ad8ab4dddc67f94b79718\",\"dweb:/ipfs/QmdShgYZptjETuNrzkrw7saiQMEexEf6ges1VL28ZtDzRc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> calculateUtils_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "calculateUtils_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"calculateUtils_flat.sol": {
				"ast": {
					"absolutePath": "calculateUtils_flat.sol",
					"exportedSymbols": {
						"CalculateUtils": [
							575
						],
						"ParameterException": [
							316
						],
						"SafeMath": [
							311
						]
					},
					"id": 576,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "299:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "504:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "731:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "741:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "773:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "765:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "765:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "777:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "765:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "800:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "804:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "800:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "796:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "815:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "822:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "807:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "846:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "845:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "838:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "519:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "664:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "679:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "671:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "716:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "716:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "722:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:0"
									},
									"scope": 311,
									"src": "655:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1092:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1102:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1130:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1134:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1126:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1145:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1137:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1176:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1186:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1182:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1175:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1168:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "877:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1025:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1051:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1043:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1083:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:15:0"
									},
									"scope": 311,
									"src": "1016:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1429:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1439:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1693:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1713:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1705:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1743:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1735:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1735:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1735:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1770:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1770:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1766:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1790:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1789:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1782:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1821:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1827:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1820:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1813:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1211:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1362:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:15:0"
									},
									"scope": 311,
									"src": "1353:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2071:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2081:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2109:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2105:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2125:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2132:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2124:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2117:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2156:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2162:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2166:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2162:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2155:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2148:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1852:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2004:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2019:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2011:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2030:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2022:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2056:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:15:0"
									},
									"scope": 311,
									"src": "1995:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2420:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2430:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2463:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2458:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2454:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2474:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2481:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2473:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2466:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2505:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2511:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2515:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2511:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2504:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2497:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2191:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2353:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2368:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2360:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2405:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2411:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:15:0"
									},
									"scope": 311,
									"src": "2344:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2836:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2853:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2857:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2853:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2846:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2540:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2778:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2790:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2801:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2793:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:9:0"
									},
									"scope": 311,
									"src": "2769:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3203:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3213:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3145:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3157:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3168:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 311,
									"src": "3136:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3546:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3567:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3563:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3556:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3238:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3488:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3492:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:9:0"
									},
									"scope": 311,
									"src": "3479:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3931:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3941:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3581:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3873:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3885:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3877:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3922:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3921:9:0"
									},
									"scope": 311,
									"src": "3864:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4480:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4490:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3966:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:9:0"
									},
									"scope": 311,
									"src": "4413:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5098:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5108:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5145:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5140:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5148:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5132:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5132:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5182:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5175:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4515:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4982:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5003:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4995:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5022:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5014:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5047:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5033:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4985:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5089:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:9:0"
									},
									"scope": 311,
									"src": "4973:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5813:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5823:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5855:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5859:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5855:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5862:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5847:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5847:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5896:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5900:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5889:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5210:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5697:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5718:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5710:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5737:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5762:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5748:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5748:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5700:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5803:9:0"
									},
									"scope": 311,
									"src": "5688:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6689:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6699:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6731:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6735:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6731:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6738:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6723:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6723:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6765:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5924:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6573:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6594:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6586:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6613:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6605:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6638:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6624:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6576:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6679:9:0"
									},
									"scope": 311,
									"src": "6564:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 576,
							"src": "496:6300:0",
							"usedErrors": []
						},
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6834:23:0"
						},
						{
							"id": 316,
							"name": "ParameterException",
							"nameLocation": "6865:18:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 315,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 314,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 316,
										"src": "6884:6:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 313,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "6884:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6883:8:0"
							},
							"src": "6859:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575
							],
							"name": "CalculateUtils",
							"nameLocation": "6901:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 319,
									"mutability": "constant",
									"name": "RATE",
									"nameLocation": "6939:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 575,
									"src": "6922:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 317,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6922:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323733",
										"id": 318,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6946:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_273_by_1",
											"typeString": "int_const 273"
										},
										"value": "273"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 322,
									"mutability": "constant",
									"name": "VF_N",
									"nameLocation": "6972:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 575,
									"src": "6955:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 320,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6955:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6979:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "7112:632:0",
										"statements": [
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "7130:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "7122:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"nodeType": "VariableDeclarationStatement",
												"src": "7122:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 332,
														"name": "_bounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "7149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 333,
														"name": "RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7158:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7149:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "7206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 341,
																"name": "RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "7215:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7206:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "7221:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 344,
																	"name": "RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "7229:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316531",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "1e1"
																},
																"src": "7229:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7221:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7206:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 354,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "7283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "7293:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316531",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7298:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "7293:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7283:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 359,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "7305:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 360,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "7314:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316532",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7319:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "1e2"
																	},
																	"src": "7314:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7305:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7283:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 370,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "7367:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 371,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "7377:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316532",
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7382:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "7377:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7367:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 375,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "7389:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 376,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "7399:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316533",
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7404:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1e3"
																		},
																		"src": "7399:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7389:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7367:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 386,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "7453:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 387,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "7462:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316533",
																				"id": 388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7467:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "7462:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7453:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 391,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "7474:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316534",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7489:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "1e4"
																			},
																			"src": "7484:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7474:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7453:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 402,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 324,
																				"src": "7538:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 403,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "7547:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316534",
																					"id": 404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7552:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "7547:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7538:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 407,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 324,
																				"src": "7559:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 408,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "7569:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316535",
																					"id": 409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7574:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"src": "7569:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7559:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "7538:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 422,
																		"nodeType": "Block",
																		"src": "7619:97:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d697420612072657175657374",
																							"id": 419,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7659:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							},
																							"value": "Unable to calculate,Please submit a request"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							}
																						],
																						"id": 418,
																						"name": "ParameterException",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 316,
																						"src": "7640:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 420,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7640:65:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 421,
																				"nodeType": "RevertStatement",
																				"src": "7633:72:0"
																			}
																		]
																	},
																	"id": 423,
																	"nodeType": "IfStatement",
																	"src": "7535:181:0",
																	"trueBody": {
																		"id": 417,
																		"nodeType": "Block",
																		"src": "7579:36:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 413,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 330,
																						"src": "7593:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "316535",
																						"id": 414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7601:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000_by_1",
																							"typeString": "int_const 100000"
																						},
																						"value": "1e5"
																					},
																					"src": "7593:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 416,
																				"nodeType": "ExpressionStatement",
																				"src": "7593:11:0"
																			}
																		]
																	}
																},
																"id": 424,
																"nodeType": "IfStatement",
																"src": "7450:266:0",
																"trueBody": {
																	"id": 401,
																	"nodeType": "Block",
																	"src": "7494:36:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 397,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 330,
																					"src": "7508:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "316534",
																					"id": 398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7516:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "7508:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 400,
																			"nodeType": "ExpressionStatement",
																			"src": "7508:11:0"
																		}
																	]
																}
															},
															"id": 425,
															"nodeType": "IfStatement",
															"src": "7364:352:0",
															"trueBody": {
																"id": 385,
																"nodeType": "Block",
																"src": "7409:36:0",
																"statements": [
																	{
																		"expression": {
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 381,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "7423:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "316533",
																				"id": 382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7431:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "7423:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 384,
																		"nodeType": "ExpressionStatement",
																		"src": "7423:11:0"
																	}
																]
															}
														},
														"id": 426,
														"nodeType": "IfStatement",
														"src": "7280:436:0",
														"trueBody": {
															"id": 369,
															"nodeType": "Block",
															"src": "7323:36:0",
															"statements": [
																{
																	"expression": {
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 365,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 330,
																			"src": "7337:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "316532",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7345:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "7337:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 368,
																	"nodeType": "ExpressionStatement",
																	"src": "7337:11:0"
																}
															]
														}
													},
													"id": 427,
													"nodeType": "IfStatement",
													"src": "7203:513:0",
													"trueBody": {
														"id": 353,
														"nodeType": "Block",
														"src": "7239:36:0",
														"statements": [
															{
																"expression": {
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 349,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "7253:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "316531",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7261:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "7253:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 352,
																"nodeType": "ExpressionStatement",
																"src": "7253:11:0"
															}
														]
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "7145:571:0",
												"trueBody": {
													"id": 339,
													"nodeType": "Block",
													"src": "7164:34:0",
													"statements": [
														{
															"expression": {
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 335,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "7178:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7186:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7178:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 338,
															"nodeType": "ExpressionStatement",
															"src": "7178:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 429,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "7732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 430,
												"nodeType": "Return",
												"src": "7725:12:0"
											}
										]
									},
									"functionSelector": "4f6ca3ce",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "punishRatio",
									"nameLocation": "7054:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "_bounts",
												"nameLocation": "7074:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "7066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7065:17:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "7103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7102:9:0"
									},
									"scope": 575,
									"src": "7045:699:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "8098:197:0",
										"statements": [
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "_maxV",
														"nameLocation": "8116:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 462,
														"src": "8108:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"nodeType": "VariableDeclarationStatement",
												"src": "8108:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 442,
														"name": "_transNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "8134:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 443,
														"name": "VF_N",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "8148:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8134:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "8196:71:0",
													"statements": [
														{
															"expression": {
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 450,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8216:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 453,
																			"name": "_transNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "8237:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 454,
																			"name": "VF_N",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "8251:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 451,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "8224:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "8224:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8224:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8216:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 457,
															"nodeType": "ExpressionStatement",
															"src": "8216:40:0"
														}
													]
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "8131:136:0",
												"trueBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "8153:39:0",
													"statements": [
														{
															"expression": {
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 445,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8172:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8172:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 448,
															"nodeType": "ExpressionStatement",
															"src": "8172:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 460,
													"name": "_maxV",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "8283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 461,
												"nodeType": "Return",
												"src": "8276:12:0"
											}
										]
									},
									"functionSelector": "f2e60202",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMatNumber",
									"nameLocation": "8033:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "_transNumber",
												"nameLocation": "8054:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "8046:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:22:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "8089:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:10:0"
									},
									"scope": 575,
									"src": "8024:271:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "8413:51:0",
										"statements": [
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 470,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "8423:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 472,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "8446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3534",
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8454:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																},
																"value": "54"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																}
															],
															"id": 471,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8432:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8432:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8423:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8423:34:0"
											}
										]
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTrans",
									"nameLocation": "8345:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "8366:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "8358:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:17:0"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "8405:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "8397:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:16:0"
									},
									"scope": 575,
									"src": "8336:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8549:51:0",
										"statements": [
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8559:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 487,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8582:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3234",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8590:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																}
															],
															"id": 486,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8568:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8568:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8559:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "8559:34:0"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransEnd",
									"nameLocation": "8478:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "8502:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8494:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8493:17:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "8541:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8532:16:0"
									},
									"scope": 575,
									"src": "8469:131:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "8686:51:0",
										"statements": [
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "8696:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 502,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "8719:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3330",
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8727:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																}
															],
															"id": 501,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8705:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8705:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8696:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "8696:34:0"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransFirst",
									"nameLocation": "8614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "8640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "8632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8631:17:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "8679:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "8671:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8670:16:0"
									},
									"scope": 575,
									"src": "8605:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "8851:51:0",
										"statements": [
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8861:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 517,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "8884:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3336",
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8892:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																},
																"value": "36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																}
															],
															"id": 516,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8870:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8870:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8861:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8861:34:0"
											}
										]
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskVf",
									"nameLocation": "8786:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "8804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8796:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8795:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "8843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8834:16:0"
									},
									"scope": 575,
									"src": "8777:125:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "9032:64:0",
										"statements": [
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 532,
														"name": "returnNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "9042:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "_number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "9070:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 536,
																	"name": "_ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "9078:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 533,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "9057:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "9057:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9057:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9086:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "9057:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9042:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "9042:47:0"
											}
										]
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentage",
									"nameLocation": "8941:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "8963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "8955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "8980:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "8972:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8954:33:0"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "returnNumber",
												"nameLocation": "9018:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "9010:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9009:22:0"
									},
									"scope": 575,
									"src": "8932:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "9200:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 555,
															"name": "_ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "9238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 552,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "9217:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "9217:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9217:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "9210:35:0"
											}
										]
									},
									"functionSelector": "9ce5c4bf",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPunish",
									"nameLocation": "9129:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "9147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "9139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "9162:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "9154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "9191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9190:9:0"
									},
									"scope": 575,
									"src": "9120:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "9371:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "9402:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 570,
															"name": "_deduct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "9410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "9388:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9388:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 567,
												"id": 572,
												"nodeType": "Return",
												"src": "9381:37:0"
											}
										]
									},
									"functionSelector": "8f861ba7",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeductMoney",
									"nameLocation": "9294:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "9317:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "9309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "_deduct",
												"nameLocation": "9333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "9325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9308:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "9362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9361:9:0"
									},
									"scope": 575,
									"src": "9285:140:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 576,
							"src": "6893:2539:0",
							"usedErrors": [
								316
							]
						}
					],
					"src": "121:9311:0"
				},
				"id": 0
			}
		}
	}
}
{
	"id": "2841f9c09ec9b287648033ba3b934d96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"CalculateUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./../contracts/utils/math/SafeMath.sol\";\r\nerror ParameterException(string);\r\n\r\ncontract CalculateUtils {\r\n    uint256 constant RATE = 273;\r\n    uint256 constant VF_N = 3;\r\n\r\n    // uint256 private TransRate ;\r\n    //获得罚金比率\r\n    function punishRatio(uint256 _bounts) public pure returns (uint256) {\r\n        uint256 ratio;\r\n        if (_bounts < RATE) {\r\n            ratio = 1;\r\n        } else if (_bounts >= RATE && _bounts < RATE * 1e1) {\r\n            ratio = 1e1;\r\n        } else if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r\n            ratio = 1e2;\r\n        } else if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r\n            ratio = 1e3;\r\n        } else if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r\n            ratio = 1e4;\r\n        } else if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r\n            ratio = 1e5;\r\n        } else {\r\n            revert ParameterException(\r\n                \"Unable to calculate,Please submit a request\"\r\n            );\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    //修改汇率\r\n    // function setRate(uint256 _rate) internal onlyOwner{\r\n    //     rate = _rate;\r\n    // }\r\n    //校对工作量（人） 校对人数= 翻译人数/校对工作量\r\n    // function setvfN(uint256 _vfN) internal onlyOwner {\r\n    //     vfN =_vfN;\r\n    // }\r\n    function getMatNumber(uint256 _transNumber)\r\n        external\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        uint256 _maxV;\r\n        if (_transNumber <= VF_N) {\r\n            _maxV = 1;\r\n        } else {\r\n            _maxV = SafeMath.div(_transNumber, VF_N);\r\n        }\r\n        return _maxV;\r\n    }\r\n\r\n    //计算任务赏金-翻译者\r\n    function getTaskTrans(uint256 _bounty)\r\n        internal\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 54);\r\n    }\r\n\r\n    function getTaskTransEnd(uint256 _bounty)\r\n        internal\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 24);\r\n    }\r\n\r\n    function getTaskTransFirst(uint256 _bounty)\r\n        internal\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 30);\r\n    }\r\n\r\n    //计算任务赏金-校验者\r\n    function getTaskVf(uint256 _bounty) internal pure returns (uint256 _money) {\r\n        _money = getPercentage(_bounty, 36);\r\n    }\r\n\r\n    //计算任务赏金\r\n    function getPercentage(uint256 _number, uint256 _ratio)\r\n        internal\r\n        pure\r\n        returns (uint256 returnNumber)\r\n    {\r\n        returnNumber = SafeMath.mul(_number, _ratio) / 100;\r\n    }\r\n\r\n    //计算罚金\r\n    function getPunish(uint256 _ratio, uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return SafeMath.div(_bounty, _ratio);\r\n    }\r\n\r\n    //计算扣除的赏金\r\n    function getDeductMoney(uint256 _bounty, uint256 _deduct)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return getPercentage(_bounty, _deduct);\r\n    }\r\n}\r\n"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CalculateUtils.sol": {
				"CalculateUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "ParameterException",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deduct",
									"type": "uint256"
								}
							],
							"name": "getDeductMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_transNumber",
									"type": "uint256"
								}
							],
							"name": "getMatNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getPunish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounts",
									"type": "uint256"
								}
							],
							"name": "punishRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CalculateUtils.sol\":145:3085  contract CalculateUtils {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CalculateUtils.sol\":145:3085  contract CalculateUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ca3ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f861ba7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9ce5c4bf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2e60202\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CalculateUtils.sol\":306:1103  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":2905:3082  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":2699:2868  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":1394:1702  function getMatNumber(uint256 _transNumber)\r... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":306:1103  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n    tag_10:\n        /* \"CalculateUtils.sol\":365:372  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":385:398  uint256 ratio */\n      dup1\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":413:420  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":413:427  _bounts < RATE */\n      lt\n        /* \"CalculateUtils.sol\":409:1073  if (_bounts < RATE) {\r... */\n      iszero\n      tag_27\n      jumpi\n        /* \"CalculateUtils.sol\":452:453  1 */\n      0x01\n        /* \"CalculateUtils.sol\":444:453  ratio = 1 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":409:1073  if (_bounts < RATE) {\r... */\n      jump(tag_28)\n    tag_27:\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":475:482  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":475:490  _bounts >= RATE */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":475:514  _bounts >= RATE && _bounts < RATE * 1e1 */\n      dup1\n      iszero\n      tag_29\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":511:514  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":504:514  RATE * 1e1 */\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"CalculateUtils.sol\":494:501  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":494:514  _bounts < RATE * 1e1 */\n      lt\n        /* \"CalculateUtils.sol\":475:514  _bounts >= RATE && _bounts < RATE * 1e1 */\n    tag_29:\n        /* \"CalculateUtils.sol\":471:1073  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n      iszero\n      tag_32\n      jumpi\n        /* \"CalculateUtils.sol\":539:542  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":531:542  ratio = 1e1 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":471:1073  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n      jump(tag_33)\n    tag_32:\n        /* \"CalculateUtils.sol\":582:585  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":575:585  RATE * 1e1 */\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n        /* \"CalculateUtils.sol\":564:571  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":564:585  _bounts >= RATE * 1e1 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":564:609  _bounts >= RATE * 1e1 && _bounts < RATE * 1e2 */\n      dup1\n      iszero\n      tag_35\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":606:609  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":599:609  RATE * 1e2 */\n      tag_36\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n        /* \"CalculateUtils.sol\":589:596  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":589:609  _bounts < RATE * 1e2 */\n      lt\n        /* \"CalculateUtils.sol\":564:609  _bounts >= RATE * 1e1 && _bounts < RATE * 1e2 */\n    tag_35:\n        /* \"CalculateUtils.sol\":560:1073  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n      iszero\n      tag_37\n      jumpi\n        /* \"CalculateUtils.sol\":634:637  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":626:637  ratio = 1e2 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":560:1073  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n      jump(tag_38)\n    tag_37:\n        /* \"CalculateUtils.sol\":677:680  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":670:680  RATE * 1e2 */\n      tag_39\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_39:\n        /* \"CalculateUtils.sol\":659:666  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":659:680  _bounts >= RATE * 1e2 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":659:704  _bounts >= RATE * 1e2 && _bounts < RATE * 1e3 */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":701:704  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":694:704  RATE * 1e3 */\n      tag_41\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_41:\n        /* \"CalculateUtils.sol\":684:691  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":684:704  _bounts < RATE * 1e3 */\n      lt\n        /* \"CalculateUtils.sol\":659:704  _bounts >= RATE * 1e2 && _bounts < RATE * 1e3 */\n    tag_40:\n        /* \"CalculateUtils.sol\":655:1073  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n      iszero\n      tag_42\n      jumpi\n        /* \"CalculateUtils.sol\":729:732  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":721:732  ratio = 1e3 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":655:1073  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n      jump(tag_43)\n    tag_42:\n        /* \"CalculateUtils.sol\":772:775  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":765:775  RATE * 1e3 */\n      tag_44\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_44:\n        /* \"CalculateUtils.sol\":754:761  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":754:775  _bounts >= RATE * 1e3 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":754:800  _bounts >= RATE * 1e3 && _bounts <= RATE * 1e4 */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":797:800  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":790:800  RATE * 1e4 */\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n        /* \"CalculateUtils.sol\":779:786  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":779:800  _bounts <= RATE * 1e4 */\n      gt\n      iszero\n        /* \"CalculateUtils.sol\":754:800  _bounts >= RATE * 1e3 && _bounts <= RATE * 1e4 */\n    tag_45:\n        /* \"CalculateUtils.sol\":750:1073  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n      iszero\n      tag_47\n      jumpi\n        /* \"CalculateUtils.sol\":825:828  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":817:828  ratio = 1e4 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":750:1073  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n      jump(tag_48)\n    tag_47:\n        /* \"CalculateUtils.sol\":868:871  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":861:871  RATE * 1e4 */\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"CalculateUtils.sol\":850:857  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":850:871  _bounts >= RATE * 1e4 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":850:896  _bounts >= RATE * 1e4 && _bounts <= RATE * 1e5 */\n      dup1\n      iszero\n      tag_50\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":893:896  1e5 */\n      0x0186a0\n        /* \"CalculateUtils.sol\":200:203  273 */\n      0x0111\n        /* \"CalculateUtils.sol\":886:896  RATE * 1e5 */\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n        /* \"CalculateUtils.sol\":875:882  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":875:896  _bounts <= RATE * 1e5 */\n      gt\n      iszero\n        /* \"CalculateUtils.sol\":850:896  _bounts >= RATE * 1e4 && _bounts <= RATE * 1e5 */\n    tag_50:\n        /* \"CalculateUtils.sol\":846:1073  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n      iszero\n      tag_52\n      jumpi\n        /* \"CalculateUtils.sol\":921:924  1e5 */\n      0x0186a0\n        /* \"CalculateUtils.sol\":913:924  ratio = 1e5 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":846:1073  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n      jump(tag_53)\n    tag_52:\n        /* \"CalculateUtils.sol\":964:1061  ParameterException(\r... */\n      mload(0x40)\n      0xd1d89b7400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CalculateUtils.sol\":846:1073  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n    tag_53:\n        /* \"CalculateUtils.sol\":750:1073  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n    tag_48:\n        /* \"CalculateUtils.sol\":655:1073  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n    tag_43:\n        /* \"CalculateUtils.sol\":560:1073  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n    tag_38:\n        /* \"CalculateUtils.sol\":471:1073  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n    tag_33:\n        /* \"CalculateUtils.sol\":409:1073  if (_bounts < RATE) {\r... */\n    tag_28:\n        /* \"CalculateUtils.sol\":1090:1095  ratio */\n      dup1\n        /* \"CalculateUtils.sol\":1083:1095  return ratio */\n      swap2\n      pop\n      pop\n        /* \"CalculateUtils.sol\":306:1103  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2905:3082  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_16:\n        /* \"CalculateUtils.sol\":3011:3018  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":3043:3074  getPercentage(_bounty, _deduct) */\n      tag_57\n        /* \"CalculateUtils.sol\":3057:3064  _bounty */\n      dup4\n        /* \"CalculateUtils.sol\":3066:3073  _deduct */\n      dup4\n        /* \"CalculateUtils.sol\":3043:3056  getPercentage */\n      tag_58\n        /* \"CalculateUtils.sol\":3043:3074  getPercentage(_bounty, _deduct) */\n      jump\t// in\n    tag_57:\n        /* \"CalculateUtils.sol\":3036:3074  return getPercentage(_bounty, _deduct) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2905:3082  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2699:2868  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_20:\n        /* \"CalculateUtils.sol\":2799:2806  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":2831:2860  SafeMath.div(_bounty, _ratio) */\n      tag_60\n        /* \"CalculateUtils.sol\":2844:2851  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2853:2859  _ratio */\n      dup5\n        /* \"CalculateUtils.sol\":2831:2843  SafeMath.div */\n      tag_61\n        /* \"CalculateUtils.sol\":2831:2860  SafeMath.div(_bounty, _ratio) */\n      jump\t// in\n    tag_60:\n        /* \"CalculateUtils.sol\":2824:2860  return SafeMath.div(_bounty, _ratio) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2699:2868  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":1394:1702  function getMatNumber(uint256 _transNumber)\r... */\n    tag_24:\n        /* \"CalculateUtils.sol\":1488:1495  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":1513:1526  uint256 _maxV */\n      dup1\n        /* \"CalculateUtils.sol\":234:235  3 */\n      0x03\n        /* \"CalculateUtils.sol\":1541:1553  _transNumber */\n      dup4\n        /* \"CalculateUtils.sol\":1541:1561  _transNumber <= VF_N */\n      gt\n        /* \"CalculateUtils.sol\":1537:1672  if (_transNumber <= VF_N) {\r... */\n      tag_63\n      jumpi\n        /* \"CalculateUtils.sol\":1586:1587  1 */\n      0x01\n        /* \"CalculateUtils.sol\":1578:1587  _maxV = 1 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":1537:1672  if (_transNumber <= VF_N) {\r... */\n      jump(tag_64)\n    tag_63:\n        /* \"CalculateUtils.sol\":1628:1660  SafeMath.div(_transNumber, VF_N) */\n      tag_65\n        /* \"CalculateUtils.sol\":1641:1653  _transNumber */\n      dup4\n        /* \"CalculateUtils.sol\":234:235  3 */\n      0x03\n        /* \"CalculateUtils.sol\":1628:1640  SafeMath.div */\n      tag_61\n        /* \"CalculateUtils.sol\":1628:1660  SafeMath.div(_transNumber, VF_N) */\n      jump\t// in\n    tag_65:\n        /* \"CalculateUtils.sol\":1620:1660  _maxV = SafeMath.div(_transNumber, VF_N) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":1537:1672  if (_transNumber <= VF_N) {\r... */\n    tag_64:\n        /* \"CalculateUtils.sol\":1689:1694  _maxV */\n      dup1\n        /* \"CalculateUtils.sol\":1682:1694  return _maxV */\n      swap2\n      pop\n      pop\n        /* \"CalculateUtils.sol\":1394:1702  function getMatNumber(uint256 _transNumber)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2469:2671  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n    tag_58:\n        /* \"CalculateUtils.sol\":2575:2595  uint256 returnNumber */\n      0x00\n        /* \"CalculateUtils.sol\":2660:2663  100 */\n      0x64\n        /* \"CalculateUtils.sol\":2628:2657  SafeMath.mul(_number, _ratio) */\n      tag_67\n        /* \"CalculateUtils.sol\":2641:2648  _number */\n      dup5\n        /* \"CalculateUtils.sol\":2650:2656  _ratio */\n      dup5\n        /* \"CalculateUtils.sol\":2628:2640  SafeMath.mul */\n      tag_68\n        /* \"CalculateUtils.sol\":2628:2657  SafeMath.mul(_number, _ratio) */\n      jump\t// in\n    tag_67:\n        /* \"CalculateUtils.sol\":2628:2663  SafeMath.mul(_number, _ratio) / 100 */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"CalculateUtils.sol\":2613:2663  returnNumber = SafeMath.mul(_number, _ratio) / 100 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2469:2671  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_61:\n        /* \"contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_72\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_72:\n        /* \"contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n        /* \"contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_76:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_78\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_9:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":228:347   */\n    tag_81:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_84\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_76\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:961   */\n    tag_15:\n        /* \"#utility.yul\":555:561   */\n      0x00\n        /* \"#utility.yul\":563:569   */\n      dup1\n        /* \"#utility.yul\":612:614   */\n      0x40\n        /* \"#utility.yul\":600:609   */\n      dup4\n        /* \"#utility.yul\":591:598   */\n      dup6\n        /* \"#utility.yul\":587:610   */\n      sub\n        /* \"#utility.yul\":583:615   */\n      slt\n        /* \"#utility.yul\":580:699   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":618:697   */\n      tag_87\n      tag_83\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":580:699   */\n    tag_86:\n        /* \"#utility.yul\":738:739   */\n      0x00\n        /* \"#utility.yul\":763:816   */\n      tag_88\n        /* \"#utility.yul\":808:815   */\n      dup6\n        /* \"#utility.yul\":799:805   */\n      dup3\n        /* \"#utility.yul\":788:797   */\n      dup7\n        /* \"#utility.yul\":784:806   */\n      add\n        /* \"#utility.yul\":763:816   */\n      tag_76\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":753:816   */\n      swap3\n      pop\n        /* \"#utility.yul\":709:826   */\n      pop\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":891:944   */\n      tag_89\n        /* \"#utility.yul\":936:943   */\n      dup6\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup7\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_76\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":836:954   */\n      pop\n        /* \"#utility.yul\":487:961   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1333   */\n    tag_90:\n        /* \"#utility.yul\":1109:1112   */\n      0x00\n        /* \"#utility.yul\":1130:1197   */\n      tag_92\n        /* \"#utility.yul\":1194:1196   */\n      0x2b\n        /* \"#utility.yul\":1189:1192   */\n      dup4\n        /* \"#utility.yul\":1130:1197   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1123:1197   */\n      swap2\n      pop\n        /* \"#utility.yul\":1206:1299   */\n      tag_94\n        /* \"#utility.yul\":1295:1298   */\n      dup3\n        /* \"#utility.yul\":1206:1299   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1324:1326   */\n      0x40\n        /* \"#utility.yul\":1319:1322   */\n      dup3\n        /* \"#utility.yul\":1315:1327   */\n      add\n        /* \"#utility.yul\":1308:1327   */\n      swap1\n      pop\n        /* \"#utility.yul\":967:1333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1339:1457   */\n    tag_96:\n        /* \"#utility.yul\":1426:1450   */\n      tag_98\n        /* \"#utility.yul\":1444:1449   */\n      dup2\n        /* \"#utility.yul\":1426:1450   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1421:1424   */\n      dup3\n        /* \"#utility.yul\":1414:1451   */\n      mstore\n        /* \"#utility.yul\":1339:1457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1463:1882   */\n    tag_55:\n        /* \"#utility.yul\":1629:1633   */\n      0x00\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1656:1665   */\n      dup3\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"#utility.yul\":1644:1670   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:1725   */\n      dup2\n        /* \"#utility.yul\":1710:1714   */\n      dup2\n        /* \"#utility.yul\":1706:1726   */\n      sub\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1691:1700   */\n      dup4\n        /* \"#utility.yul\":1687:1704   */\n      add\n        /* \"#utility.yul\":1680:1727   */\n      mstore\n        /* \"#utility.yul\":1744:1875   */\n      tag_101\n        /* \"#utility.yul\":1870:1874   */\n      dup2\n        /* \"#utility.yul\":1744:1875   */\n      tag_90\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1736:1875   */\n      swap1\n      pop\n        /* \"#utility.yul\":1463:1882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2110   */\n    tag_12:\n        /* \"#utility.yul\":1981:1985   */\n      0x00\n        /* \"#utility.yul\":2019:2021   */\n      0x20\n        /* \"#utility.yul\":2008:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2022   */\n      add\n        /* \"#utility.yul\":1996:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2032:2103   */\n      tag_103\n        /* \"#utility.yul\":2100:2101   */\n      0x00\n        /* \"#utility.yul\":2089:2098   */\n      dup4\n        /* \"#utility.yul\":2085:2102   */\n      add\n        /* \"#utility.yul\":2076:2082   */\n      dup5\n        /* \"#utility.yul\":2032:2103   */\n      tag_96\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1888:2110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2197:2366   */\n    tag_93:\n        /* \"#utility.yul\":2281:2292   */\n      0x00\n        /* \"#utility.yul\":2315:2321   */\n      dup3\n        /* \"#utility.yul\":2310:2313   */\n      dup3\n        /* \"#utility.yul\":2303:2322   */\n      mstore\n        /* \"#utility.yul\":2355:2359   */\n      0x20\n        /* \"#utility.yul\":2350:2353   */\n      dup3\n        /* \"#utility.yul\":2346:2360   */\n      add\n        /* \"#utility.yul\":2331:2360   */\n      swap1\n      pop\n        /* \"#utility.yul\":2197:2366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2372:2557   */\n    tag_70:\n        /* \"#utility.yul\":2412:2413   */\n      0x00\n        /* \"#utility.yul\":2429:2449   */\n      tag_108\n        /* \"#utility.yul\":2447:2448   */\n      dup3\n        /* \"#utility.yul\":2429:2449   */\n      tag_99\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2424:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2463:2483   */\n      tag_109\n        /* \"#utility.yul\":2481:2482   */\n      dup4\n        /* \"#utility.yul\":2463:2483   */\n      tag_99\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2458:2483   */\n      swap3\n      pop\n        /* \"#utility.yul\":2502:2503   */\n      dup3\n        /* \"#utility.yul\":2492:2527   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2507:2525   */\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2492:2527   */\n    tag_110:\n        /* \"#utility.yul\":2549:2550   */\n      dup3\n        /* \"#utility.yul\":2546:2547   */\n      dup3\n        /* \"#utility.yul\":2542:2551   */\n      div\n        /* \"#utility.yul\":2537:2551   */\n      swap1\n      pop\n        /* \"#utility.yul\":2372:2557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2563:2911   */\n    tag_31:\n        /* \"#utility.yul\":2603:2610   */\n      0x00\n        /* \"#utility.yul\":2626:2646   */\n      tag_114\n        /* \"#utility.yul\":2644:2645   */\n      dup3\n        /* \"#utility.yul\":2626:2646   */\n      tag_99\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2621:2646   */\n      swap2\n      pop\n        /* \"#utility.yul\":2660:2680   */\n      tag_115\n        /* \"#utility.yul\":2678:2679   */\n      dup4\n        /* \"#utility.yul\":2660:2680   */\n      tag_99\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2655:2680   */\n      swap3\n      pop\n        /* \"#utility.yul\":2848:2849   */\n      dup2\n        /* \"#utility.yul\":2780:2846   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2776:2850   */\n      div\n        /* \"#utility.yul\":2773:2774   */\n      dup4\n        /* \"#utility.yul\":2770:2851   */\n      gt\n        /* \"#utility.yul\":2765:2766   */\n      dup3\n        /* \"#utility.yul\":2758:2767   */\n      iszero\n        /* \"#utility.yul\":2751:2768   */\n      iszero\n        /* \"#utility.yul\":2747:2852   */\n      and\n        /* \"#utility.yul\":2744:2875   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":2855:2873   */\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2744:2875   */\n    tag_116:\n        /* \"#utility.yul\":2903:2904   */\n      dup3\n        /* \"#utility.yul\":2900:2901   */\n      dup3\n        /* \"#utility.yul\":2896:2905   */\n      mul\n        /* \"#utility.yul\":2885:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2563:2911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:2994   */\n    tag_99:\n        /* \"#utility.yul\":2954:2961   */\n      0x00\n        /* \"#utility.yul\":2983:2988   */\n      dup2\n        /* \"#utility.yul\":2972:2988   */\n      swap1\n      pop\n        /* \"#utility.yul\":2917:2994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3000:3180   */\n    tag_118:\n        /* \"#utility.yul\":3048:3125   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3038:3126   */\n      mstore\n        /* \"#utility.yul\":3145:3149   */\n      0x11\n        /* \"#utility.yul\":3142:3143   */\n      0x04\n        /* \"#utility.yul\":3135:3150   */\n      mstore\n        /* \"#utility.yul\":3169:3173   */\n      0x24\n        /* \"#utility.yul\":3166:3167   */\n      0x00\n        /* \"#utility.yul\":3159:3174   */\n      revert\n        /* \"#utility.yul\":3186:3366   */\n    tag_112:\n        /* \"#utility.yul\":3234:3311   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3231:3232   */\n      0x00\n        /* \"#utility.yul\":3224:3312   */\n      mstore\n        /* \"#utility.yul\":3331:3335   */\n      0x12\n        /* \"#utility.yul\":3328:3329   */\n      0x04\n        /* \"#utility.yul\":3321:3336   */\n      mstore\n        /* \"#utility.yul\":3355:3359   */\n      0x24\n        /* \"#utility.yul\":3352:3353   */\n      0x00\n        /* \"#utility.yul\":3345:3360   */\n      revert\n        /* \"#utility.yul\":3495:3612   */\n    tag_83:\n        /* \"#utility.yul\":3604:3605   */\n      0x00\n        /* \"#utility.yul\":3601:3602   */\n      dup1\n        /* \"#utility.yul\":3594:3606   */\n      revert\n        /* \"#utility.yul\":3618:3848   */\n    tag_95:\n        /* \"#utility.yul\":3758:3792   */\n      0x556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69\n        /* \"#utility.yul\":3754:3755   */\n      0x00\n        /* \"#utility.yul\":3746:3752   */\n      dup3\n        /* \"#utility.yul\":3742:3756   */\n      add\n        /* \"#utility.yul\":3735:3793   */\n      mstore\n        /* \"#utility.yul\":3827:3840   */\n      0x7420612072657175657374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3822:3824   */\n      0x20\n        /* \"#utility.yul\":3814:3820   */\n      dup3\n        /* \"#utility.yul\":3810:3825   */\n      add\n        /* \"#utility.yul\":3803:3841   */\n      mstore\n        /* \"#utility.yul\":3618:3848   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3854:3976   */\n    tag_79:\n        /* \"#utility.yul\":3927:3951   */\n      tag_127\n        /* \"#utility.yul\":3945:3950   */\n      dup2\n        /* \"#utility.yul\":3927:3951   */\n      tag_99\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3920:3925   */\n      dup2\n        /* \"#utility.yul\":3917:3952   */\n      eq\n        /* \"#utility.yul\":3907:3970   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3966:3967   */\n      0x00\n        /* \"#utility.yul\":3963:3964   */\n      dup1\n        /* \"#utility.yul\":3956:3968   */\n      revert\n        /* \"#utility.yul\":3907:3970   */\n    tag_128:\n        /* \"#utility.yul\":3854:3976   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a6a214732688930159a50d4735aec57d360c86a817c230ab8c1f6dc420411d9b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105c0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634f6ca3ce146100515780638f861ba7146100815780639ce5c4bf146100b1578063f2e60202146100e1575b600080fd5b61006b60048036038101906100669190610341565b610111565b6040516100789190610400565b60405180910390f35b61009b6004803603810190610096919061036e565b61028d565b6040516100a89190610400565b60405180910390f35b6100cb60048036038101906100c6919061036e565b6102a1565b6040516100d89190610400565b60405180910390f35b6100fb60048036038101906100f69190610341565b6102b5565b6040516101089190610400565b60405180910390f35b6000806101118310156101275760019050610284565b61011183101580156101465750600a610111610143919061045d565b83105b1561015457600a9050610283565b600a610111610163919061045d565b831015801561017f5750606461011161017c919061045d565b83105b1561018d5760649050610282565b606461011161019c919061045d565b83101580156101b957506103e86101116101b6919061045d565b83105b156101c8576103e89050610281565b6103e86101116101d8919061045d565b83101580156101f657506127106101116101f2919061045d565b8311155b15610205576127109050610280565b612710610111610215919061045d565b83101580156102345750620186a0610111610230919061045d565b8311155b1561024457620186a0905061027f565b6040517fd1d89b74000000000000000000000000000000000000000000000000000000008152600401610276906103e0565b60405180910390fd5b5b5b5b5b5b80915050919050565b600061029983836102e0565b905092915050565b60006102ad8284610300565b905092915050565b600080600383116102c957600190506102d7565b6102d4836003610300565b90505b80915050919050565b600060646102ee8484610316565b6102f8919061042c565b905092915050565b6000818361030e919061042c565b905092915050565b60008183610324919061045d565b905092915050565b60008135905061033b81610573565b92915050565b6000602082840312156103575761035661051f565b5b60006103658482850161032c565b91505092915050565b600080604083850312156103855761038461051f565b5b60006103938582860161032c565b92505060206103a48582860161032c565b9150509250929050565b60006103bb602b8361041b565b91506103c682610524565b604082019050919050565b6103da816104b7565b82525050565b600060208201905081810360008301526103f9816103ae565b9050919050565b600060208201905061041560008301846103d1565b92915050565b600082825260208201905092915050565b6000610437826104b7565b9150610442836104b7565b925082610452576104516104f0565b5b828204905092915050565b6000610468826104b7565b9150610473836104b7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104ac576104ab6104c1565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960008201527f7420612072657175657374000000000000000000000000000000000000000000602082015250565b61057c816104b7565b811461058757600080fd5b5056fea2646970667358221220a6a214732688930159a50d4735aec57d360c86a817c230ab8c1f6dc420411d9b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x284 JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x146 JUMPI POP PUSH1 0xA PUSH2 0x111 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x154 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x283 JUMP JUMPDEST PUSH1 0xA PUSH2 0x111 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI POP PUSH1 0x64 PUSH2 0x111 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x18D JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x282 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x111 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1B9 JUMPI POP PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x281 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI POP PUSH2 0x2710 PUSH2 0x111 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x205 JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x280 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x111 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x234 JUMPI POP PUSH3 0x186A0 PUSH2 0x111 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x244 JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299 DUP4 DUP4 PUSH2 0x2E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD DUP3 DUP5 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x2C9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x2D4 DUP4 PUSH1 0x3 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2EE DUP5 DUP5 PUSH2 0x316 JUMP JUMPDEST PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33B DUP2 PUSH2 0x573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP5 DUP3 DUP6 ADD PUSH2 0x32C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x385 JUMPI PUSH2 0x384 PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x393 DUP6 DUP3 DUP7 ADD PUSH2 0x32C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A4 DUP6 DUP3 DUP7 ADD PUSH2 0x32C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB PUSH1 0x2B DUP4 PUSH2 0x41B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C6 DUP3 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F9 DUP2 PUSH2 0x3AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x415 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437 DUP3 PUSH2 0x4B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x442 DUP4 PUSH2 0x4B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x4F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x4B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x473 DUP4 PUSH2 0x4B7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4AC JUMPI PUSH2 0x4AB PUSH2 0x4C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x57C DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 LOG2 EQ PUSH20 0x2688930159A50D4735AEC57D360C86A817C230AB DUP13 0x1F PUSH14 0xC420411D9B64736F6C6343000807 STOP CALLER ",
							"sourceMap": "145:2940:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_486": {
									"entryPoint": 768,
									"id": 486,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDeductMoney_264": {
									"entryPoint": 653,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMatNumber_153": {
									"entryPoint": 693,
									"id": 153,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPercentage_233": {
									"entryPoint": 736,
									"id": 233,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPunish_249": {
									"entryPoint": 673,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_471": {
									"entryPoint": 790,
									"id": 471,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@punishRatio_122": {
									"entryPoint": 273,
									"id": 122,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3979:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "570:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "616:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "618:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "618:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "618:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "591:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "583:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:32:2"
															},
															"nodeType": "YulIf",
															"src": "580:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "709:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "724:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "728:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "753:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "788:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "808:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "753:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "836:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "851:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "855:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "543:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "555:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "563:6:2",
														"type": ""
													}
												],
												"src": "487:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1113:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1123:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1189:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1130:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1295:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																	"nodeType": "YulIdentifier",
																	"src": "1206:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1308:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1319:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1101:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1109:3:2",
														"type": ""
													}
												],
												"src": "967:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1404:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1421:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1444:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1426:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1392:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1399:3:2",
														"type": ""
													}
												],
												"src": "1339:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1691:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1702:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1687:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1687:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1710:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1706:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1706:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1736:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1870:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1744:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1736:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1614:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1629:4:2",
														"type": ""
													}
												],
												"src": "1463:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1986:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1996:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2008:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2004:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1996:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2076:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2100:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2032:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1958:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1970:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1981:4:2",
														"type": ""
													}
												],
												"src": "1888:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2166:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2176:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2149:6:2",
														"type": ""
													}
												],
												"src": "2116:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2293:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2310:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2315:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2303:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2303:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2331:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2350:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2355:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2331:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2265:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2270:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2281:11:2",
														"type": ""
													}
												],
												"src": "2197:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2424:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2447:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2429:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2424:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2481:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2463:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2458:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2507:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2502:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:9:2"
															},
															"nodeType": "YulIf",
															"src": "2492:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2537:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2546:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2549:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2542:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2537:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2403:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2406:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2412:1:2",
														"type": ""
													}
												],
												"src": "2372:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2611:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2621:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2644:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2626:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2621:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2655:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2678:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2660:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2655:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2853:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2855:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2855:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2855:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2765:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2758:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2758:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2751:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2773:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2780:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2848:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2776:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2776:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2770:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2747:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:105:2"
															},
															"nodeType": "YulIf",
															"src": "2744:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2900:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2903:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2885:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2594:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2597:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2603:7:2",
														"type": ""
													}
												],
												"src": "2563:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2962:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2972:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2983:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2972:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2944:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2954:7:2",
														"type": ""
													}
												],
												"src": "2917:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3028:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3048:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3038:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3166:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3159:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3000:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3214:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3224:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3331:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3321:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3186:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3461:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3478:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3481:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3471:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3372:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3584:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3601:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3594:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3495:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3724:124:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3746:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3754:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3742:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3742:14:2"
																	},
																	{
																		"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3758:34:2",
																		"type": "",
																		"value": "Unable to calculate,Please submi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3814:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3822:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:15:2"
																	},
																	{
																		"hexValue": "7420612072657175657374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3827:13:2",
																		"type": "",
																		"value": "t a request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3803:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3803:38:2"
														}
													]
												},
												"name": "store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3716:6:2",
														"type": ""
													}
												],
												"src": "3618:230:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3897:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3954:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3963:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3966:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3956:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3956:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3956:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3920:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3945:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3927:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3927:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3917:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:43:2"
															},
															"nodeType": "YulIf",
															"src": "3907:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3890:5:2",
														"type": ""
													}
												],
												"src": "3854:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unable to calculate,Please submi\")\n\n        mstore(add(memPtr, 32), \"t a request\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634f6ca3ce146100515780638f861ba7146100815780639ce5c4bf146100b1578063f2e60202146100e1575b600080fd5b61006b60048036038101906100669190610341565b610111565b6040516100789190610400565b60405180910390f35b61009b6004803603810190610096919061036e565b61028d565b6040516100a89190610400565b60405180910390f35b6100cb60048036038101906100c6919061036e565b6102a1565b6040516100d89190610400565b60405180910390f35b6100fb60048036038101906100f69190610341565b6102b5565b6040516101089190610400565b60405180910390f35b6000806101118310156101275760019050610284565b61011183101580156101465750600a610111610143919061045d565b83105b1561015457600a9050610283565b600a610111610163919061045d565b831015801561017f5750606461011161017c919061045d565b83105b1561018d5760649050610282565b606461011161019c919061045d565b83101580156101b957506103e86101116101b6919061045d565b83105b156101c8576103e89050610281565b6103e86101116101d8919061045d565b83101580156101f657506127106101116101f2919061045d565b8311155b15610205576127109050610280565b612710610111610215919061045d565b83101580156102345750620186a0610111610230919061045d565b8311155b1561024457620186a0905061027f565b6040517fd1d89b74000000000000000000000000000000000000000000000000000000008152600401610276906103e0565b60405180910390fd5b5b5b5b5b5b80915050919050565b600061029983836102e0565b905092915050565b60006102ad8284610300565b905092915050565b600080600383116102c957600190506102d7565b6102d4836003610300565b90505b80915050919050565b600060646102ee8484610316565b6102f8919061042c565b905092915050565b6000818361030e919061042c565b905092915050565b60008183610324919061045d565b905092915050565b60008135905061033b81610573565b92915050565b6000602082840312156103575761035661051f565b5b60006103658482850161032c565b91505092915050565b600080604083850312156103855761038461051f565b5b60006103938582860161032c565b92505060206103a48582860161032c565b9150509250929050565b60006103bb602b8361041b565b91506103c682610524565b604082019050919050565b6103da816104b7565b82525050565b600060208201905081810360008301526103f9816103ae565b9050919050565b600060208201905061041560008301846103d1565b92915050565b600082825260208201905092915050565b6000610437826104b7565b9150610442836104b7565b925082610452576104516104f0565b5b828204905092915050565b6000610468826104b7565b9150610473836104b7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104ac576104ab6104c1565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960008201527f7420612072657175657374000000000000000000000000000000000000000000602082015250565b61057c816104b7565b811461058757600080fd5b5056fea2646970667358221220a6a214732688930159a50d4735aec57d360c86a817c230ab8c1f6dc420411d9b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x284 JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x146 JUMPI POP PUSH1 0xA PUSH2 0x111 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x154 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x283 JUMP JUMPDEST PUSH1 0xA PUSH2 0x111 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI POP PUSH1 0x64 PUSH2 0x111 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x18D JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x282 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x111 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1B9 JUMPI POP PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x281 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI POP PUSH2 0x2710 PUSH2 0x111 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x205 JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x280 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x111 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x234 JUMPI POP PUSH3 0x186A0 PUSH2 0x111 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x244 JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299 DUP4 DUP4 PUSH2 0x2E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD DUP3 DUP5 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x2C9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x2D4 DUP4 PUSH1 0x3 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2EE DUP5 DUP5 PUSH2 0x316 JUMP JUMPDEST PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33B DUP2 PUSH2 0x573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP5 DUP3 DUP6 ADD PUSH2 0x32C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x385 JUMPI PUSH2 0x384 PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x393 DUP6 DUP3 DUP7 ADD PUSH2 0x32C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A4 DUP6 DUP3 DUP7 ADD PUSH2 0x32C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB PUSH1 0x2B DUP4 PUSH2 0x41B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C6 DUP3 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F9 DUP2 PUSH2 0x3AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x415 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437 DUP3 PUSH2 0x4B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x442 DUP4 PUSH2 0x4B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x4F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x4B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x473 DUP4 PUSH2 0x4B7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4AC JUMPI PUSH2 0x4AB PUSH2 0x4C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x57C DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 LOG2 EQ PUSH20 0x2688930159A50D4735AEC57D360C86A817C230AB DUP13 0x1F PUSH14 0xC420411D9B64736F6C6343000807 STOP CALLER ",
							"sourceMap": "145:2940:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2905:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2699:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1394:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;306:797;365:7;385:13;200:3;413:7;:14;409:664;;;452:1;444:9;;409:664;;;200:3;475:7;:15;;:39;;;;;511:3;200;504:10;;;;:::i;:::-;494:7;:20;475:39;471:602;;;539:3;531:11;;471:602;;;582:3;200;575:10;;;;:::i;:::-;564:7;:21;;:45;;;;;606:3;200;599:10;;;;:::i;:::-;589:7;:20;564:45;560:513;;;634:3;626:11;;560:513;;;677:3;200;670:10;;;;:::i;:::-;659:7;:21;;:45;;;;;701:3;200;694:10;;;;:::i;:::-;684:7;:20;659:45;655:418;;;729:3;721:11;;655:418;;;772:3;200;765:10;;;;:::i;:::-;754:7;:21;;:46;;;;;797:3;200;790:10;;;;:::i;:::-;779:7;:21;;754:46;750:323;;;825:3;817:11;;750:323;;;868:3;200;861:10;;;;:::i;:::-;850:7;:21;;:46;;;;;893:3;200;886:10;;;;:::i;:::-;875:7;:21;;850:46;846:227;;;921:3;913:11;;846:227;;;964:97;;;;;;;;;;:::i;:::-;;;;;;;;846:227;750:323;655:418;560:513;471:602;409:664;1090:5;1083:12;;;306:797;;;:::o;2905:177::-;3011:7;3043:31;3057:7;3066;3043:13;:31::i;:::-;3036:38;;2905:177;;;;:::o;2699:169::-;2799:7;2831:29;2844:7;2853:6;2831:12;:29::i;:::-;2824:36;;2699:169;;;;:::o;1394:308::-;1488:7;1513:13;234:1;1541:12;:20;1537:135;;1586:1;1578:9;;1537:135;;;1628:32;1641:12;234:1;1628:12;:32::i;:::-;1620:40;;1537:135;1689:5;1682:12;;;1394:308;;;:::o;2469:202::-;2575:20;2660:3;2628:29;2641:7;2650:6;2628:12;:29::i;:::-;:35;;;;:::i;:::-;2613:50;;2469:202;;;;:::o;3850:96:1:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:474::-;555:6;563;612:2;600:9;591:7;587:23;583:32;580:119;;;618:79;;:::i;:::-;580:119;738:1;763:53;808:7;799:6;788:9;784:22;763:53;:::i;:::-;753:63;;709:117;865:2;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;836:118;487:474;;;;;:::o;967:366::-;1109:3;1130:67;1194:2;1189:3;1130:67;:::i;:::-;1123:74;;1206:93;1295:3;1206:93;:::i;:::-;1324:2;1319:3;1315:12;1308:19;;967:366;;;:::o;1339:118::-;1426:24;1444:5;1426:24;:::i;:::-;1421:3;1414:37;1339:118;;:::o;1463:419::-;1629:4;1667:2;1656:9;1652:18;1644:26;;1716:9;1710:4;1706:20;1702:1;1691:9;1687:17;1680:47;1744:131;1870:4;1744:131;:::i;:::-;1736:139;;1463:419;;;:::o;1888:222::-;1981:4;2019:2;2008:9;2004:18;1996:26;;2032:71;2100:1;2089:9;2085:17;2076:6;2032:71;:::i;:::-;1888:222;;;;:::o;2197:169::-;2281:11;2315:6;2310:3;2303:19;2355:4;2350:3;2346:14;2331:29;;2197:169;;;;:::o;2372:185::-;2412:1;2429:20;2447:1;2429:20;:::i;:::-;2424:25;;2463:20;2481:1;2463:20;:::i;:::-;2458:25;;2502:1;2492:35;;2507:18;;:::i;:::-;2492:35;2549:1;2546;2542:9;2537:14;;2372:185;;;;:::o;2563:348::-;2603:7;2626:20;2644:1;2626:20;:::i;:::-;2621:25;;2660:20;2678:1;2660:20;:::i;:::-;2655:25;;2848:1;2780:66;2776:74;2773:1;2770:81;2765:1;2758:9;2751:17;2747:105;2744:131;;;2855:18;;:::i;:::-;2744:131;2903:1;2900;2896:9;2885:20;;2563:348;;;;:::o;2917:77::-;2954:7;2983:5;2972:16;;2917:77;;;:::o;3000:180::-;3048:77;3045:1;3038:88;3145:4;3142:1;3135:15;3169:4;3166:1;3159:15;3186:180;3234:77;3231:1;3224:88;3331:4;3328:1;3321:15;3355:4;3352:1;3345:15;3495:117;3604:1;3601;3594:12;3618:230;3758:34;3754:1;3746:6;3742:14;3735:58;3827:13;3822:2;3814:6;3810:15;3803:38;3618:230;:::o;3854:122::-;3927:24;3945:5;3927:24;:::i;:::-;3920:5;3917:35;3907:63;;3966:1;3963;3956:12;3907:63;3854:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "294400",
								"executionCost": "331",
								"totalCost": "294731"
							},
							"external": {
								"getDeductMoney(uint256,uint256)": "infinite",
								"getMatNumber(uint256)": "infinite",
								"getPunish(uint256,uint256)": "infinite",
								"punishRatio(uint256)": "infinite"
							},
							"internal": {
								"getPercentage(uint256,uint256)": "infinite",
								"getTaskTrans(uint256)": "infinite",
								"getTaskTransEnd(uint256)": "infinite",
								"getTaskTransFirst(uint256)": "infinite",
								"getTaskVf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3085,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6a214732688930159a50d4735aec57d360c86a817c230ab8c1f6dc420411d9b64736f6c63430008070033",
									".code": [
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CA3CE"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "8F861BA7"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "9CE5C4BF"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "F2E60202"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 3085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 413,
											"end": 420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 413,
											"end": 427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 444,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 475,
											"end": 482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 490,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 475,
											"end": 490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 475,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 514,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 475,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 475,
											"end": 514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 475,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 494,
											"end": 514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 475,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 475,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 531,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 582,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 564,
											"end": 585,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 564,
											"end": 585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 564,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 564,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 564,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 564,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 589,
											"end": 609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 564,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 564,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 634,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 626,
											"end": 637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 677,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 670,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 670,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 670,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 670,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 670,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 666,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 659,
											"end": 680,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 659,
											"end": 704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 704,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 659,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 659,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 694,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 694,
											"end": 704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 694,
											"end": 704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 694,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 684,
											"end": 691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 684,
											"end": 704,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 729,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 754,
											"end": 775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 754,
											"end": 800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 790,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 790,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 790,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 790,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 790,
											"end": 800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 790,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 790,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 779,
											"end": 800,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 779,
											"end": 800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 754,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 825,
											"end": 828,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 817,
											"end": 828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 861,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 850,
											"end": 857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 850,
											"end": 871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 850,
											"end": 871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 850,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 850,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 200,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 875,
											"end": 882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 875,
											"end": 896,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 875,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 850,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 921,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 913,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "D1D89B7400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 846,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 750,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 655,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 560,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 471,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 409,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 306,
											"end": 1103,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3057,
											"end": 3064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3043,
											"end": 3074,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3043,
											"end": 3074,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3043,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3082,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2844,
											"end": 2851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2831,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2831,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2831,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2868,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 234,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1537,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2628,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 591,
											"end": 598,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 587,
											"end": 610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 615,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 738,
											"end": 739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 788,
											"end": 797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 784,
											"end": 806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 753,
											"end": 816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 753,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 709,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1295,
											"end": 1298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1339,
											"end": 1457,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1339,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1457,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1463,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1463,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1744,
											"end": 1875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1744,
											"end": 1875,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1744,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 2110,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2366,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2483,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2557,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2680,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2846,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2850,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2851,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2852,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2896,
											"end": 2905,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2911,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2917,
											"end": 2994,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2917,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2994,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3000,
											"end": 3180,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3000,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3125,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3149,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3150,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3173,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3174,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3366,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3186,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3311,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3335,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3321,
											"end": 3336,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3360,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3612,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3495,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3594,
											"end": 3606,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3848,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3618,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "PUSH",
											"source": 2,
											"value": "556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69"
										},
										{
											"begin": 3754,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3742,
											"end": 3756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3840,
											"name": "PUSH",
											"source": 2,
											"value": "7420612072657175657374000000000000000000000000000000000000000000"
										},
										{
											"begin": 3822,
											"end": 3824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3848,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3854,
											"end": 3976,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3854,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3927,
											"end": 3951,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3927,
											"end": 3951,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3927,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3952,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3907,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3907,
											"end": 3970,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3907,
											"end": 3970,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3907,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3854,
											"end": 3976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3854,
											"end": 3976,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getDeductMoney(uint256,uint256)": "8f861ba7",
							"getMatNumber(uint256)": "f2e60202",
							"getPunish(uint256,uint256)": "9ce5c4bf",
							"punishRatio(uint256)": "4f6ca3ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ParameterException\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deduct\",\"type\":\"uint256\"}],\"name\":\"getDeductMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transNumber\",\"type\":\"uint256\"}],\"name\":\"getMatNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getPunish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounts\",\"type\":\"uint256\"}],\"name\":\"punishRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CalculateUtils.sol\":\"CalculateUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CalculateUtils.sol\":{\"keccak256\":\"0x62c4ab78807cce1fd3b1350d86769ee506a082b6c8f7eb8a28f8008cdfc7bc32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b90455b4e455854217e09712789101443b2f959b9c0ff2e568adc57439f7aa32\",\"dweb:/ipfs/QmZbLrKFH9SHGREknHZvpQsa96XZ5DPCmcBTwLMq2ZcVzd\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CalculateUtils.sol": {
				"ast": {
					"absolutePath": "CalculateUtils.sol",
					"exportedSymbols": {
						"CalculateUtils": [
							265
						],
						"ParameterException": [
							6
						],
						"SafeMath": [
							577
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "./../contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 578,
							"src": "58:48:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 6,
							"name": "ParameterException",
							"nameLocation": "114:18:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 5,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 4,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 6,
										"src": "133:6:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "133:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "132:8:0"
							},
							"src": "108:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "CalculateUtils",
							"nameLocation": "154:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "RATE",
									"nameLocation": "193:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "176:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "176:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323733",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "200:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_273_by_1",
											"typeString": "int_const 273"
										},
										"value": "273"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "VF_N",
									"nameLocation": "227:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "210:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "234:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "374:729:0",
										"statements": [
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "393:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 121,
														"src": "385:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 19,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"nodeType": "VariableDeclarationStatement",
												"src": "385:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 22,
														"name": "_bounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 23,
														"name": "RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "423:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "413:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 30,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "475:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "486:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "475:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "494:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 34,
																	"name": "RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "504:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316531",
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "511:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "1e1"
																},
																"src": "504:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "494:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "475:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 44,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "564:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 45,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "575:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316531",
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "582:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "575:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "564:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 49,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 50,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "599:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316532",
																		"id": 51,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "606:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "1e2"
																	},
																	"src": "599:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "589:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "564:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 60,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "659:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 61,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "670:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316532",
																			"id": 62,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "677:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "670:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "659:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 65,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "684:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 66,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "694:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316533",
																			"id": 67,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "701:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1e3"
																		},
																		"src": "694:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "684:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "659:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 76,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "754:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 77,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "765:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316533",
																				"id": 78,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "772:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "765:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "754:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 81,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "779:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 82,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "790:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316534",
																				"id": 83,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "797:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "1e4"
																			},
																			"src": "790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "779:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "754:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 96,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 92,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "850:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 95,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 93,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 9,
																					"src": "861:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316534",
																					"id": 94,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "868:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "861:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "850:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 97,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "875:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 98,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 9,
																					"src": "886:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316535",
																					"id": 99,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "893:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"src": "886:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "875:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "850:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 112,
																		"nodeType": "Block",
																		"src": "942:131:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d697420612072657175657374",
																							"id": 109,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1001:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							},
																							"value": "Unable to calculate,Please submit a request"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							}
																						],
																						"id": 108,
																						"name": "ParameterException",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 6,
																						"src": "964:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 110,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "964:97:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 111,
																				"nodeType": "RevertStatement",
																				"src": "957:104:0"
																			}
																		]
																	},
																	"id": 113,
																	"nodeType": "IfStatement",
																	"src": "846:227:0",
																	"trueBody": {
																		"id": 107,
																		"nodeType": "Block",
																		"src": "898:38:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 103,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 20,
																						"src": "913:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "316535",
																						"id": 104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "921:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000_by_1",
																							"typeString": "int_const 100000"
																						},
																						"value": "1e5"
																					},
																					"src": "913:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 106,
																				"nodeType": "ExpressionStatement",
																				"src": "913:11:0"
																			}
																		]
																	}
																},
																"id": 114,
																"nodeType": "IfStatement",
																"src": "750:323:0",
																"trueBody": {
																	"id": 91,
																	"nodeType": "Block",
																	"src": "802:38:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 89,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 87,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 20,
																					"src": "817:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "316534",
																					"id": 88,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "825:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "817:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 90,
																			"nodeType": "ExpressionStatement",
																			"src": "817:11:0"
																		}
																	]
																}
															},
															"id": 115,
															"nodeType": "IfStatement",
															"src": "655:418:0",
															"trueBody": {
																"id": 75,
																"nodeType": "Block",
																"src": "706:38:0",
																"statements": [
																	{
																		"expression": {
																			"id": 73,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 71,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "721:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "316533",
																				"id": 72,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "729:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "721:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 74,
																		"nodeType": "ExpressionStatement",
																		"src": "721:11:0"
																	}
																]
															}
														},
														"id": 116,
														"nodeType": "IfStatement",
														"src": "560:513:0",
														"trueBody": {
															"id": 59,
															"nodeType": "Block",
															"src": "611:38:0",
															"statements": [
																{
																	"expression": {
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 55,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 20,
																			"src": "626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "316532",
																			"id": 56,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "634:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "626:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 58,
																	"nodeType": "ExpressionStatement",
																	"src": "626:11:0"
																}
															]
														}
													},
													"id": 117,
													"nodeType": "IfStatement",
													"src": "471:602:0",
													"trueBody": {
														"id": 43,
														"nodeType": "Block",
														"src": "516:38:0",
														"statements": [
															{
																"expression": {
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 39,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "531:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "316531",
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "539:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "531:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 42,
																"nodeType": "ExpressionStatement",
																"src": "531:11:0"
															}
														]
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "409:664:0",
												"trueBody": {
													"id": 29,
													"nodeType": "Block",
													"src": "429:36:0",
													"statements": [
														{
															"expression": {
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 25,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "452:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "444:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 28,
															"nodeType": "ExpressionStatement",
															"src": "444:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 119,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "1090:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 18,
												"id": 120,
												"nodeType": "Return",
												"src": "1083:12:0"
											}
										]
									},
									"functionSelector": "4f6ca3ce",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "punishRatio",
									"nameLocation": "315:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_bounts",
												"nameLocation": "335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:17:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "365:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:9:0"
									},
									"scope": 265,
									"src": "306:797:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1502:200:0",
										"statements": [
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "_maxV",
														"nameLocation": "1521:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1513:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"nodeType": "VariableDeclarationStatement",
												"src": "1513:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 132,
														"name": "_transNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1541:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 133,
														"name": "VF_N",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1557:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1541:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 148,
													"nodeType": "Block",
													"src": "1605:67:0",
													"statements": [
														{
															"expression": {
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 140,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1620:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 143,
																			"name": "_transNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "1641:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 144,
																			"name": "VF_N",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1655:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 141,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 577,
																			"src": "1628:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$577_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 486,
																		"src": "1628:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1628:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1620:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 147,
															"nodeType": "ExpressionStatement",
															"src": "1620:40:0"
														}
													]
												},
												"id": 149,
												"nodeType": "IfStatement",
												"src": "1537:135:0",
												"trueBody": {
													"id": 139,
													"nodeType": "Block",
													"src": "1563:36:0",
													"statements": [
														{
															"expression": {
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 135,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1578:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1578:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 138,
															"nodeType": "ExpressionStatement",
															"src": "1578:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 150,
													"name": "_maxV",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 151,
												"nodeType": "Return",
												"src": "1682:12:0"
											}
										]
									},
									"functionSelector": "f2e60202",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMatNumber",
									"nameLocation": "1403:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_transNumber",
												"nameLocation": "1424:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1416:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1415:22:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1488:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1487:9:0"
									},
									"scope": 265,
									"src": "1394:308:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1856:54:0",
										"statements": [
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1867:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 162,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "1890:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3534",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1899:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																},
																"value": "54"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																}
															],
															"id": 161,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1876:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1867:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1867:35:0"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTrans",
									"nameLocation": "1755:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1776:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1768:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1767:17:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:16:0"
									},
									"scope": 265,
									"src": "1746:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2031:54:0",
										"statements": [
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 175,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2042:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 177,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "2065:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3234",
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																}
															],
															"id": 176,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2051:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2051:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2042:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2042:35:0"
											}
										]
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransEnd",
									"nameLocation": "1927:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1951:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:17:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:16:0"
									},
									"scope": 265,
									"src": "1918:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2208:54:0",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 190,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2219:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 192,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2242:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3330",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2251:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																}
															],
															"id": 191,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2228:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2228:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2219:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2219:35:0"
											}
										]
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransFirst",
									"nameLocation": "2102:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2120:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:17:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2195:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2187:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2186:16:0"
									},
									"scope": 265,
									"src": "2093:169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "2381:54:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2392:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 207,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2415:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3336",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2424:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																},
																"value": "36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																}
															],
															"id": 206,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2401:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2401:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2392:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "2392:35:0"
											}
										]
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskVf",
									"nameLocation": "2315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:17:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2373:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:16:0"
									},
									"scope": 265,
									"src": "2306:129:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2602:69:0",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "returnNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 225,
																	"name": "_number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 226,
																	"name": "_ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 223,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2628:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$577_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 471,
																"src": "2628:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2628:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2660:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2628:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2613:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2613:50:0"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentage",
									"nameLocation": "2478:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "2500:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2509:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:33:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "returnNumber",
												"nameLocation": "2583:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2575:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:22:0"
									},
									"scope": 265,
									"src": "2469:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2813:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 245,
															"name": "_ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "2853:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 242,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2831:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$577_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 486,
														"src": "2831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 247,
												"nodeType": "Return",
												"src": "2824:36:0"
											}
										]
									},
									"functionSelector": "9ce5c4bf",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPunish",
									"nameLocation": "2708:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2726:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2718:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2742:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2734:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:33:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 265,
									"src": "2699:169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "3025:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 260,
															"name": "_deduct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 258,
														"name": "getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "3043:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 262,
												"nodeType": "Return",
												"src": "3036:38:0"
											}
										]
									},
									"functionSelector": "8f861ba7",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeductMoney",
									"nameLocation": "2914:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_deduct",
												"nameLocation": "2954:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2946:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3010:9:0"
									},
									"scope": 265,
									"src": "2905:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 266,
							"src": "145:2940:0",
							"usedErrors": [
								6
							]
						}
					],
					"src": "33:3054:0"
				},
				"id": 0
			},
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							577
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 268,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 298,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															281
														],
														"declarations": [
															{
																"constant": false,
																"id": 281,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 298,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 280,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 285,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 283,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 286,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 293,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 279,
															"id": 292,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 295,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 296,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 279,
														"id": 297,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 577,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 313,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 319,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 317,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 311,
															"id": 318,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 321,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 322,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 324,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 311,
														"id": 325,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 577,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 368,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 347,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 339,
															"id": 346,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															349
														],
														"declarations": [
															{
																"constant": false,
																"id": 349,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 368,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 353,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 351,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 354,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 355,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 357,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 363,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 339,
															"id": 362,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 365,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 366,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 339,
														"id": 367,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 577,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 396,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 389,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 381,
															"id": 388,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 391,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 392,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 394,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 381,
														"id": 395,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 577,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 424,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 417,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 409,
															"id": 416,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 419,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 420,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 422,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 409,
														"id": 423,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 577,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 436,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 439,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 577,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 452,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 577,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 467,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 465,
												"id": 469,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 577,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 481,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 482,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 480,
												"id": 484,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 577,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 496,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 497,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 495,
												"id": 499,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 577,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 514,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 515,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 517,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 513,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 519,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 521,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 512,
														"id": 523,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 577,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 549,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 539,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 542,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 538,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 544,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 537,
														"id": 548,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 577,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 574,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 564,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 567,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 563,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 569,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 570,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 571,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 562,
														"id": 573,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 577,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			}
		}
	}
}
{
	"id": "92e116615857b88f6fd82727ed4a0bfc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"CalculateUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./contracts/utils/math/SafeMath.sol\";\r\nimport \"./contracts/access/Ownable.sol\";\r\nerror ParameterException(string);\r\n\r\ncontract CalculateUtils is Ownable {\r\n    uint256 private rate = 273;\r\n    uint256 private vf_n = 3;\r\n\r\n    // uint256 private TransRate ;\r\n    //获得罚金比率\r\n    function punishRatio(uint256 _bounts) public view returns (uint256) {\r\n        uint256 ratio;\r\n        if (_bounts < rate) {\r\n            ratio = 1;\r\n        } else if (_bounts >= rate && _bounts < rate * 1e1) {\r\n            ratio = 1e1;\r\n        } else if (_bounts >= rate * 1e1 && _bounts < rate * 1e2) {\r\n            ratio = 1e2;\r\n        } else if (_bounts >= rate * 1e2 && _bounts < rate * 1e3) {\r\n            ratio = 1e3;\r\n        } else if (_bounts >= rate * 1e3 && _bounts <= rate * 1e4) {\r\n            ratio = 1e4;\r\n        } else if (_bounts >= rate * 1e4 && _bounts <= rate * 1e5) {\r\n            ratio = 1e5;\r\n        } else {\r\n            revert ParameterException(\r\n                \"Unable to calculate,Please submit a request\"\r\n            );\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    //修改汇率\r\n    function setRate(uint256 _rate) public onlyOwner {\r\n        rate = _rate;\r\n    }\r\n\r\n    //校对工作量（人） 校对人数= 翻译人数/校对工作量\r\n    function setvfN(uint256 _vfN) public onlyOwner {\r\n        vf_n = _vfN;\r\n    }\r\n\r\n    function getMatNumber(uint256 _transNumber) public view returns (uint256) {\r\n        uint256 _maxV;\r\n        if (_transNumber <= vf_n) {\r\n            _maxV = 1;\r\n        } else {\r\n            _maxV = SafeMath.div(_transNumber, vf_n);\r\n        }\r\n        return _maxV;\r\n    }\r\n\r\n    //计算任务赏金-翻译者\r\n    function getTaskTrans(uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 54);\r\n    }\r\n\r\n    function getTaskTransEnd(uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 24);\r\n    }\r\n\r\n    function getTaskTransFirst(uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 30);\r\n    }\r\n\r\n    //计算任务赏金-校验者\r\n    function getTaskVf(uint256 _bounty) public pure returns (uint256 _money) {\r\n        _money = getPercentage(_bounty, 36);\r\n    }\r\n\r\n    //计算任务赏金\r\n    function getPercentage(uint256 _number, uint256 _ratio)\r\n        public\r\n        pure\r\n        returns (uint256 returnNumber)\r\n    {\r\n        returnNumber = SafeMath.mul(_number, _ratio) / 100;\r\n    }\r\n\r\n    //计算罚金\r\n    function getPunish(uint256 _ratio, uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return SafeMath.div(_bounty, _ratio);\r\n    }\r\n\r\n    //计算扣除的赏金\r\n    function getDeductMoney(uint256 _bounty, uint256 _deduct)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return getPercentage(_bounty, _deduct);\r\n    }\r\n}\r\n"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CalculateUtils.sol": {
				"CalculateUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "ParameterException",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deduct",
									"type": "uint256"
								}
							],
							"name": "getDeductMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_transNumber",
									"type": "uint256"
								}
							],
							"name": "getMatNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_number",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "getPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "returnNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getPunish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getTaskTrans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getTaskTransEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getTaskTransFirst",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getTaskVf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounts",
									"type": "uint256"
								}
							],
							"name": "punishRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vfN",
									"type": "uint256"
								}
							],
							"name": "setvfN",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CalculateUtils.sol\":184:3074  contract CalculateUtils is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"CalculateUtils.sol\":249:252  273 */\n  0x0111\n    /* \"CalculateUtils.sol\":226:252  uint256 private rate = 273 */\n  0x01\n  sstore\n    /* \"CalculateUtils.sol\":282:283  3 */\n  0x03\n    /* \"CalculateUtils.sol\":259:283  uint256 private vf_n = 3 */\n  0x02\n  sstore\n    /* \"CalculateUtils.sol\":184:3074  contract CalculateUtils is Ownable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"CalculateUtils.sol\":184:3074  contract CalculateUtils is Ownable {\r... */\n  jump(tag_8)\n    /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"CalculateUtils.sol\":184:3074  contract CalculateUtils is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CalculateUtils.sol\":184:3074  contract CalculateUtils is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f861ba7\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa730941d\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa730941d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2e60202\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf74f3655\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8f861ba7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9ce5c4bf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3cb7c55\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x5c830098\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x5c830098\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6873e8d2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x31bfb377\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34fcf437\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f6ca3ce\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CalculateUtils.sol\":1342:1419  function setvfN(uint256 _vfN) public onlyOwner {\r... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"CalculateUtils.sol\":1179:1259  function setRate(uint256 _rate) public onlyOwner {\r... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      stop\n        /* \"CalculateUtils.sol\":354:1151  function punishRatio(uint256 _bounts) public view returns (uint256) {\r... */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":2299:2426  function getTaskVf(uint256 _bounty) public pure returns (uint256 _money) {\r... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":1745:1907  function getTaskTrans(uint256 _bounty)\r... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":2894:3071  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":2688:2857  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":1915:2080  function getTaskTransEnd(uint256 _bounty)\r... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":2088:2255  function getTaskTransFirst(uint256 _bounty)\r... */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":1427:1701  function getMatNumber(uint256 _transNumber) public view returns (uint256) {\r... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"CalculateUtils.sol\":2460:2660  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n    tag_16:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":1342:1419  function setvfN(uint256 _vfN) public onlyOwner {\r... */\n    tag_23:\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_76\n        /* \"contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"CalculateUtils.sol\":1407:1411  _vfN */\n      dup1\n        /* \"CalculateUtils.sol\":1400:1404  vf_n */\n      0x02\n        /* \"CalculateUtils.sol\":1400:1411  vf_n = _vfN */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CalculateUtils.sol\":1342:1419  function setvfN(uint256 _vfN) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":1179:1259  function setRate(uint256 _rate) public onlyOwner {\r... */\n    tag_26:\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_80\n        /* \"contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"CalculateUtils.sol\":1246:1251  _rate */\n      dup1\n        /* \"CalculateUtils.sol\":1239:1243  rate */\n      0x01\n        /* \"CalculateUtils.sol\":1239:1251  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CalculateUtils.sol\":1179:1259  function setRate(uint256 _rate) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":354:1151  function punishRatio(uint256 _bounts) public view returns (uint256) {\r... */\n    tag_29:\n        /* \"CalculateUtils.sol\":413:420  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":433:446  uint256 ratio */\n      dup1\n        /* \"CalculateUtils.sol\":471:475  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":461:468  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":461:475  _bounts < rate */\n      lt\n        /* \"CalculateUtils.sol\":457:1121  if (_bounts < rate) {\r... */\n      iszero\n      tag_83\n      jumpi\n        /* \"CalculateUtils.sol\":500:501  1 */\n      0x01\n        /* \"CalculateUtils.sol\":492:501  ratio = 1 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":457:1121  if (_bounts < rate) {\r... */\n      jump(tag_84)\n    tag_83:\n        /* \"CalculateUtils.sol\":534:538  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":523:530  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":523:538  _bounts >= rate */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":523:562  _bounts >= rate && _bounts < rate * 1e1 */\n      dup1\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":559:562  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":552:556  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":552:562  rate * 1e1 */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"CalculateUtils.sol\":542:549  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":542:562  _bounts < rate * 1e1 */\n      lt\n        /* \"CalculateUtils.sol\":523:562  _bounts >= rate && _bounts < rate * 1e1 */\n    tag_85:\n        /* \"CalculateUtils.sol\":519:1121  if (_bounts >= rate && _bounts < rate * 1e1) {\r... */\n      iszero\n      tag_88\n      jumpi\n        /* \"CalculateUtils.sol\":587:590  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":579:590  ratio = 1e1 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":519:1121  if (_bounts >= rate && _bounts < rate * 1e1) {\r... */\n      jump(tag_89)\n    tag_88:\n        /* \"CalculateUtils.sol\":630:633  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":623:627  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":623:633  rate * 1e1 */\n      tag_90\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_90:\n        /* \"CalculateUtils.sol\":612:619  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":612:633  _bounts >= rate * 1e1 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":612:657  _bounts >= rate * 1e1 && _bounts < rate * 1e2 */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":654:657  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":647:651  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":647:657  rate * 1e2 */\n      tag_92\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_92:\n        /* \"CalculateUtils.sol\":637:644  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":637:657  _bounts < rate * 1e2 */\n      lt\n        /* \"CalculateUtils.sol\":612:657  _bounts >= rate * 1e1 && _bounts < rate * 1e2 */\n    tag_91:\n        /* \"CalculateUtils.sol\":608:1121  if (_bounts >= rate * 1e1 && _bounts < rate * 1e2) {\r... */\n      iszero\n      tag_93\n      jumpi\n        /* \"CalculateUtils.sol\":682:685  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":674:685  ratio = 1e2 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":608:1121  if (_bounts >= rate * 1e1 && _bounts < rate * 1e2) {\r... */\n      jump(tag_94)\n    tag_93:\n        /* \"CalculateUtils.sol\":725:728  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":718:722  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":718:728  rate * 1e2 */\n      tag_95\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_95:\n        /* \"CalculateUtils.sol\":707:714  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":707:728  _bounts >= rate * 1e2 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":707:752  _bounts >= rate * 1e2 && _bounts < rate * 1e3 */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":749:752  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":742:746  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":742:752  rate * 1e3 */\n      tag_97\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_97:\n        /* \"CalculateUtils.sol\":732:739  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":732:752  _bounts < rate * 1e3 */\n      lt\n        /* \"CalculateUtils.sol\":707:752  _bounts >= rate * 1e2 && _bounts < rate * 1e3 */\n    tag_96:\n        /* \"CalculateUtils.sol\":703:1121  if (_bounts >= rate * 1e2 && _bounts < rate * 1e3) {\r... */\n      iszero\n      tag_98\n      jumpi\n        /* \"CalculateUtils.sol\":777:780  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":769:780  ratio = 1e3 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":703:1121  if (_bounts >= rate * 1e2 && _bounts < rate * 1e3) {\r... */\n      jump(tag_99)\n    tag_98:\n        /* \"CalculateUtils.sol\":820:823  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":813:817  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":813:823  rate * 1e3 */\n      tag_100\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_100:\n        /* \"CalculateUtils.sol\":802:809  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":802:823  _bounts >= rate * 1e3 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":802:848  _bounts >= rate * 1e3 && _bounts <= rate * 1e4 */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":845:848  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":838:842  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":838:848  rate * 1e4 */\n      tag_102\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_102:\n        /* \"CalculateUtils.sol\":827:834  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":827:848  _bounts <= rate * 1e4 */\n      gt\n      iszero\n        /* \"CalculateUtils.sol\":802:848  _bounts >= rate * 1e3 && _bounts <= rate * 1e4 */\n    tag_101:\n        /* \"CalculateUtils.sol\":798:1121  if (_bounts >= rate * 1e3 && _bounts <= rate * 1e4) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"CalculateUtils.sol\":873:876  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":865:876  ratio = 1e4 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":798:1121  if (_bounts >= rate * 1e3 && _bounts <= rate * 1e4) {\r... */\n      jump(tag_104)\n    tag_103:\n        /* \"CalculateUtils.sol\":916:919  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":909:913  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":909:919  rate * 1e4 */\n      tag_105\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_105:\n        /* \"CalculateUtils.sol\":898:905  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":898:919  _bounts >= rate * 1e4 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":898:944  _bounts >= rate * 1e4 && _bounts <= rate * 1e5 */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":941:944  1e5 */\n      0x0186a0\n        /* \"CalculateUtils.sol\":934:938  rate */\n      sload(0x01)\n        /* \"CalculateUtils.sol\":934:944  rate * 1e5 */\n      tag_107\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_107:\n        /* \"CalculateUtils.sol\":923:930  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":923:944  _bounts <= rate * 1e5 */\n      gt\n      iszero\n        /* \"CalculateUtils.sol\":898:944  _bounts >= rate * 1e4 && _bounts <= rate * 1e5 */\n    tag_106:\n        /* \"CalculateUtils.sol\":894:1121  if (_bounts >= rate * 1e4 && _bounts <= rate * 1e5) {\r... */\n      iszero\n      tag_108\n      jumpi\n        /* \"CalculateUtils.sol\":969:972  1e5 */\n      0x0186a0\n        /* \"CalculateUtils.sol\":961:972  ratio = 1e5 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":894:1121  if (_bounts >= rate * 1e4 && _bounts <= rate * 1e5) {\r... */\n      jump(tag_109)\n    tag_108:\n        /* \"CalculateUtils.sol\":1012:1109  ParameterException(\r... */\n      mload(0x40)\n      0xd1d89b7400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CalculateUtils.sol\":894:1121  if (_bounts >= rate * 1e4 && _bounts <= rate * 1e5) {\r... */\n    tag_109:\n        /* \"CalculateUtils.sol\":798:1121  if (_bounts >= rate * 1e3 && _bounts <= rate * 1e4) {\r... */\n    tag_104:\n        /* \"CalculateUtils.sol\":703:1121  if (_bounts >= rate * 1e2 && _bounts < rate * 1e3) {\r... */\n    tag_99:\n        /* \"CalculateUtils.sol\":608:1121  if (_bounts >= rate * 1e1 && _bounts < rate * 1e2) {\r... */\n    tag_94:\n        /* \"CalculateUtils.sol\":519:1121  if (_bounts >= rate && _bounts < rate * 1e1) {\r... */\n    tag_89:\n        /* \"CalculateUtils.sol\":457:1121  if (_bounts < rate) {\r... */\n    tag_84:\n        /* \"CalculateUtils.sol\":1138:1143  ratio */\n      dup1\n        /* \"CalculateUtils.sol\":1131:1143  return ratio */\n      swap2\n      pop\n      pop\n        /* \"CalculateUtils.sol\":354:1151  function punishRatio(uint256 _bounts) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2299:2426  function getTaskVf(uint256 _bounty) public pure returns (uint256 _money) {\r... */\n    tag_34:\n        /* \"CalculateUtils.sol\":2356:2370  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":2392:2418  getPercentage(_bounty, 36) */\n      tag_113\n        /* \"CalculateUtils.sol\":2406:2413  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2415:2417  36 */\n      0x24\n        /* \"CalculateUtils.sol\":2392:2405  getPercentage */\n      tag_73\n        /* \"CalculateUtils.sol\":2392:2418  getPercentage(_bounty, 36) */\n      jump\t// in\n    tag_113:\n        /* \"CalculateUtils.sol\":2383:2418  _money = getPercentage(_bounty, 36) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2299:2426  function getTaskVf(uint256 _bounty) public pure returns (uint256 _money) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":1745:1907  function getTaskTrans(uint256 _bounty)\r... */\n    tag_38:\n        /* \"CalculateUtils.sol\":1832:1846  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":1873:1899  getPercentage(_bounty, 54) */\n      tag_115\n        /* \"CalculateUtils.sol\":1887:1894  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":1896:1898  54 */\n      0x36\n        /* \"CalculateUtils.sol\":1873:1886  getPercentage */\n      tag_73\n        /* \"CalculateUtils.sol\":1873:1899  getPercentage(_bounty, 54) */\n      jump\t// in\n    tag_115:\n        /* \"CalculateUtils.sol\":1864:1899  _money = getPercentage(_bounty, 54) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":1745:1907  function getTaskTrans(uint256 _bounty)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_117\n        /* \"contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_119\n        /* \"contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_43:\n        /* \"contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"CalculateUtils.sol\":2894:3071  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_49:\n        /* \"CalculateUtils.sol\":3000:3007  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":3032:3063  getPercentage(_bounty, _deduct) */\n      tag_123\n        /* \"CalculateUtils.sol\":3046:3053  _bounty */\n      dup4\n        /* \"CalculateUtils.sol\":3055:3062  _deduct */\n      dup4\n        /* \"CalculateUtils.sol\":3032:3045  getPercentage */\n      tag_73\n        /* \"CalculateUtils.sol\":3032:3063  getPercentage(_bounty, _deduct) */\n      jump\t// in\n    tag_123:\n        /* \"CalculateUtils.sol\":3025:3063  return getPercentage(_bounty, _deduct) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2894:3071  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2688:2857  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_53:\n        /* \"CalculateUtils.sol\":2788:2795  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":2820:2849  SafeMath.div(_bounty, _ratio) */\n      tag_125\n        /* \"CalculateUtils.sol\":2833:2840  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2842:2848  _ratio */\n      dup5\n        /* \"CalculateUtils.sol\":2820:2832  SafeMath.div */\n      tag_126\n        /* \"CalculateUtils.sol\":2820:2849  SafeMath.div(_bounty, _ratio) */\n      jump\t// in\n    tag_125:\n        /* \"CalculateUtils.sol\":2813:2849  return SafeMath.div(_bounty, _ratio) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2688:2857  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":1915:2080  function getTaskTransEnd(uint256 _bounty)\r... */\n    tag_57:\n        /* \"CalculateUtils.sol\":2005:2019  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":2046:2072  getPercentage(_bounty, 24) */\n      tag_128\n        /* \"CalculateUtils.sol\":2060:2067  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2069:2071  24 */\n      0x18\n        /* \"CalculateUtils.sol\":2046:2059  getPercentage */\n      tag_73\n        /* \"CalculateUtils.sol\":2046:2072  getPercentage(_bounty, 24) */\n      jump\t// in\n    tag_128:\n        /* \"CalculateUtils.sol\":2037:2072  _money = getPercentage(_bounty, 24) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":1915:2080  function getTaskTransEnd(uint256 _bounty)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2088:2255  function getTaskTransFirst(uint256 _bounty)\r... */\n    tag_61:\n        /* \"CalculateUtils.sol\":2180:2194  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":2221:2247  getPercentage(_bounty, 30) */\n      tag_130\n        /* \"CalculateUtils.sol\":2235:2242  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2244:2246  30 */\n      0x1e\n        /* \"CalculateUtils.sol\":2221:2234  getPercentage */\n      tag_73\n        /* \"CalculateUtils.sol\":2221:2247  getPercentage(_bounty, 30) */\n      jump\t// in\n    tag_130:\n        /* \"CalculateUtils.sol\":2212:2247  _money = getPercentage(_bounty, 30) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2088:2255  function getTaskTransFirst(uint256 _bounty)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":1427:1701  function getMatNumber(uint256 _transNumber) public view returns (uint256) {\r... */\n    tag_65:\n        /* \"CalculateUtils.sol\":1492:1499  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":1512:1525  uint256 _maxV */\n      dup1\n        /* \"CalculateUtils.sol\":1556:1560  vf_n */\n      sload(0x02)\n        /* \"CalculateUtils.sol\":1540:1552  _transNumber */\n      dup4\n        /* \"CalculateUtils.sol\":1540:1560  _transNumber <= vf_n */\n      gt\n        /* \"CalculateUtils.sol\":1536:1671  if (_transNumber <= vf_n) {\r... */\n      tag_132\n      jumpi\n        /* \"CalculateUtils.sol\":1585:1586  1 */\n      0x01\n        /* \"CalculateUtils.sol\":1577:1586  _maxV = 1 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":1536:1671  if (_transNumber <= vf_n) {\r... */\n      jump(tag_133)\n    tag_132:\n        /* \"CalculateUtils.sol\":1627:1659  SafeMath.div(_transNumber, vf_n) */\n      tag_134\n        /* \"CalculateUtils.sol\":1640:1652  _transNumber */\n      dup4\n        /* \"CalculateUtils.sol\":1654:1658  vf_n */\n      sload(0x02)\n        /* \"CalculateUtils.sol\":1627:1639  SafeMath.div */\n      tag_126\n        /* \"CalculateUtils.sol\":1627:1659  SafeMath.div(_transNumber, vf_n) */\n      jump\t// in\n    tag_134:\n        /* \"CalculateUtils.sol\":1619:1659  _maxV = SafeMath.div(_transNumber, vf_n) */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":1536:1671  if (_transNumber <= vf_n) {\r... */\n    tag_133:\n        /* \"CalculateUtils.sol\":1688:1693  _maxV */\n      dup1\n        /* \"CalculateUtils.sol\":1681:1693  return _maxV */\n      swap2\n      pop\n      pop\n        /* \"CalculateUtils.sol\":1427:1701  function getMatNumber(uint256 _transNumber) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_136\n        /* \"contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_141\n        /* \"contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2460:2660  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n    tag_73:\n        /* \"CalculateUtils.sol\":2564:2584  uint256 returnNumber */\n      0x00\n        /* \"CalculateUtils.sol\":2649:2652  100 */\n      0x64\n        /* \"CalculateUtils.sol\":2617:2646  SafeMath.mul(_number, _ratio) */\n      tag_143\n        /* \"CalculateUtils.sol\":2630:2637  _number */\n      dup5\n        /* \"CalculateUtils.sol\":2639:2645  _ratio */\n      dup5\n        /* \"CalculateUtils.sol\":2617:2629  SafeMath.mul */\n      tag_144\n        /* \"CalculateUtils.sol\":2617:2646  SafeMath.mul(_number, _ratio) */\n      jump\t// in\n    tag_143:\n        /* \"CalculateUtils.sol\":2617:2652  SafeMath.mul(_number, _ratio) / 100 */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"CalculateUtils.sol\":2602:2652  returnNumber = SafeMath.mul(_number, _ratio) / 100 */\n      swap1\n      pop\n        /* \"CalculateUtils.sol\":2460:2660  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_77:\n        /* \"contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_148\n        /* \"contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_149\n        /* \"contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_150\n        /* \"contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_43\n        /* \"contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_120:\n        /* \"contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_156\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_156:\n        /* \"contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_144:\n        /* \"contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_158\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_158:\n        /* \"contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_149:\n        /* \"contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_161:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_163\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_165:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_167\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_69:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":373:492   */\n    tag_170:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_173\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_161\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:961   */\n    tag_22:\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":740:742   */\n      0x20\n        /* \"#utility.yul\":728:737   */\n      dup3\n        /* \"#utility.yul\":719:726   */\n      dup5\n        /* \"#utility.yul\":715:738   */\n      sub\n        /* \"#utility.yul\":711:743   */\n      slt\n        /* \"#utility.yul\":708:827   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":746:825   */\n      tag_176\n      tag_172\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":708:827   */\n    tag_175:\n        /* \"#utility.yul\":866:867   */\n      0x00\n        /* \"#utility.yul\":891:944   */\n      tag_177\n        /* \"#utility.yul\":936:943   */\n      dup5\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup6\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_165\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":837:954   */\n      pop\n        /* \"#utility.yul\":632:961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1441   */\n    tag_48:\n        /* \"#utility.yul\":1035:1041   */\n      0x00\n        /* \"#utility.yul\":1043:1049   */\n      dup1\n        /* \"#utility.yul\":1092:1094   */\n      0x40\n        /* \"#utility.yul\":1080:1089   */\n      dup4\n        /* \"#utility.yul\":1071:1078   */\n      dup6\n        /* \"#utility.yul\":1067:1090   */\n      sub\n        /* \"#utility.yul\":1063:1095   */\n      slt\n        /* \"#utility.yul\":1060:1179   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1098:1177   */\n      tag_180\n      tag_172\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1060:1179   */\n    tag_179:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1243:1296   */\n      tag_181\n        /* \"#utility.yul\":1288:1295   */\n      dup6\n        /* \"#utility.yul\":1279:1285   */\n      dup3\n        /* \"#utility.yul\":1268:1277   */\n      dup7\n        /* \"#utility.yul\":1264:1286   */\n      add\n        /* \"#utility.yul\":1243:1296   */\n      tag_165\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1233:1296   */\n      swap3\n      pop\n        /* \"#utility.yul\":1189:1306   */\n      pop\n        /* \"#utility.yul\":1345:1347   */\n      0x20\n        /* \"#utility.yul\":1371:1424   */\n      tag_182\n        /* \"#utility.yul\":1416:1423   */\n      dup6\n        /* \"#utility.yul\":1407:1413   */\n      dup3\n        /* \"#utility.yul\":1396:1405   */\n      dup7\n        /* \"#utility.yul\":1392:1414   */\n      add\n        /* \"#utility.yul\":1371:1424   */\n      tag_165\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1361:1424   */\n      swap2\n      pop\n        /* \"#utility.yul\":1316:1434   */\n      pop\n        /* \"#utility.yul\":967:1441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1565   */\n    tag_183:\n        /* \"#utility.yul\":1534:1558   */\n      tag_185\n        /* \"#utility.yul\":1552:1557   */\n      dup2\n        /* \"#utility.yul\":1534:1558   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1529:1532   */\n      dup3\n        /* \"#utility.yul\":1522:1559   */\n      mstore\n        /* \"#utility.yul\":1447:1565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1571:1937   */\n    tag_187:\n        /* \"#utility.yul\":1713:1716   */\n      0x00\n        /* \"#utility.yul\":1734:1801   */\n      tag_189\n        /* \"#utility.yul\":1798:1800   */\n      0x26\n        /* \"#utility.yul\":1793:1796   */\n      dup4\n        /* \"#utility.yul\":1734:1801   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1727:1801   */\n      swap2\n      pop\n        /* \"#utility.yul\":1810:1903   */\n      tag_191\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1810:1903   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1928:1930   */\n      0x40\n        /* \"#utility.yul\":1923:1926   */\n      dup3\n        /* \"#utility.yul\":1919:1931   */\n      add\n        /* \"#utility.yul\":1912:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1571:1937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2309   */\n    tag_193:\n        /* \"#utility.yul\":2085:2088   */\n      0x00\n        /* \"#utility.yul\":2106:2173   */\n      tag_195\n        /* \"#utility.yul\":2170:2172   */\n      0x20\n        /* \"#utility.yul\":2165:2168   */\n      dup4\n        /* \"#utility.yul\":2106:2173   */\n      tag_190\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2099:2173   */\n      swap2\n      pop\n        /* \"#utility.yul\":2182:2275   */\n      tag_196\n        /* \"#utility.yul\":2271:2274   */\n      dup3\n        /* \"#utility.yul\":2182:2275   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2300:2302   */\n      0x20\n        /* \"#utility.yul\":2295:2298   */\n      dup3\n        /* \"#utility.yul\":2291:2303   */\n      add\n        /* \"#utility.yul\":2284:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2681   */\n    tag_198:\n        /* \"#utility.yul\":2457:2460   */\n      0x00\n        /* \"#utility.yul\":2478:2545   */\n      tag_200\n        /* \"#utility.yul\":2542:2544   */\n      0x2b\n        /* \"#utility.yul\":2537:2540   */\n      dup4\n        /* \"#utility.yul\":2478:2545   */\n      tag_190\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2471:2545   */\n      swap2\n      pop\n        /* \"#utility.yul\":2554:2647   */\n      tag_201\n        /* \"#utility.yul\":2643:2646   */\n      dup3\n        /* \"#utility.yul\":2554:2647   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2672:2674   */\n      0x40\n        /* \"#utility.yul\":2667:2670   */\n      dup3\n        /* \"#utility.yul\":2663:2675   */\n      add\n        /* \"#utility.yul\":2656:2675   */\n      swap1\n      pop\n        /* \"#utility.yul\":2315:2681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2687:2805   */\n    tag_203:\n        /* \"#utility.yul\":2774:2798   */\n      tag_205\n        /* \"#utility.yul\":2792:2797   */\n      dup2\n        /* \"#utility.yul\":2774:2798   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2769:2772   */\n      dup3\n        /* \"#utility.yul\":2762:2799   */\n      mstore\n        /* \"#utility.yul\":2687:2805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:3033   */\n    tag_45:\n        /* \"#utility.yul\":2904:2908   */\n      0x00\n        /* \"#utility.yul\":2942:2944   */\n      0x20\n        /* \"#utility.yul\":2931:2940   */\n      dup3\n        /* \"#utility.yul\":2927:2945   */\n      add\n        /* \"#utility.yul\":2919:2945   */\n      swap1\n      pop\n        /* \"#utility.yul\":2955:3026   */\n      tag_208\n        /* \"#utility.yul\":3023:3024   */\n      0x00\n        /* \"#utility.yul\":3012:3021   */\n      dup4\n        /* \"#utility.yul\":3008:3025   */\n      add\n        /* \"#utility.yul\":2999:3005   */\n      dup5\n        /* \"#utility.yul\":2955:3026   */\n      tag_183\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2811:3033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3458   */\n    tag_140:\n        /* \"#utility.yul\":3205:3209   */\n      0x00\n        /* \"#utility.yul\":3243:3245   */\n      0x20\n        /* \"#utility.yul\":3232:3241   */\n      dup3\n        /* \"#utility.yul\":3228:3246   */\n      add\n        /* \"#utility.yul\":3220:3246   */\n      swap1\n      pop\n        /* \"#utility.yul\":3292:3301   */\n      dup2\n        /* \"#utility.yul\":3286:3290   */\n      dup2\n        /* \"#utility.yul\":3282:3302   */\n      sub\n        /* \"#utility.yul\":3278:3279   */\n      0x00\n        /* \"#utility.yul\":3267:3276   */\n      dup4\n        /* \"#utility.yul\":3263:3280   */\n      add\n        /* \"#utility.yul\":3256:3303   */\n      mstore\n        /* \"#utility.yul\":3320:3451   */\n      tag_210\n        /* \"#utility.yul\":3446:3450   */\n      dup2\n        /* \"#utility.yul\":3320:3451   */\n      tag_187\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3312:3451   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3464:3883   */\n    tag_153:\n        /* \"#utility.yul\":3630:3634   */\n      0x00\n        /* \"#utility.yul\":3668:3670   */\n      0x20\n        /* \"#utility.yul\":3657:3666   */\n      dup3\n        /* \"#utility.yul\":3653:3671   */\n      add\n        /* \"#utility.yul\":3645:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3717:3726   */\n      dup2\n        /* \"#utility.yul\":3711:3715   */\n      dup2\n        /* \"#utility.yul\":3707:3727   */\n      sub\n        /* \"#utility.yul\":3703:3704   */\n      0x00\n        /* \"#utility.yul\":3692:3701   */\n      dup4\n        /* \"#utility.yul\":3688:3705   */\n      add\n        /* \"#utility.yul\":3681:3728   */\n      mstore\n        /* \"#utility.yul\":3745:3876   */\n      tag_212\n        /* \"#utility.yul\":3871:3875   */\n      dup2\n        /* \"#utility.yul\":3745:3876   */\n      tag_193\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3737:3876   */\n      swap1\n      pop\n        /* \"#utility.yul\":3464:3883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3889:4308   */\n    tag_111:\n        /* \"#utility.yul\":4055:4059   */\n      0x00\n        /* \"#utility.yul\":4093:4095   */\n      0x20\n        /* \"#utility.yul\":4082:4091   */\n      dup3\n        /* \"#utility.yul\":4078:4096   */\n      add\n        /* \"#utility.yul\":4070:4096   */\n      swap1\n      pop\n        /* \"#utility.yul\":4142:4151   */\n      dup2\n        /* \"#utility.yul\":4136:4140   */\n      dup2\n        /* \"#utility.yul\":4132:4152   */\n      sub\n        /* \"#utility.yul\":4128:4129   */\n      0x00\n        /* \"#utility.yul\":4117:4126   */\n      dup4\n        /* \"#utility.yul\":4113:4130   */\n      add\n        /* \"#utility.yul\":4106:4153   */\n      mstore\n        /* \"#utility.yul\":4170:4301   */\n      tag_214\n        /* \"#utility.yul\":4296:4300   */\n      dup2\n        /* \"#utility.yul\":4170:4301   */\n      tag_198\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4162:4301   */\n      swap1\n      pop\n        /* \"#utility.yul\":3889:4308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4536   */\n    tag_31:\n        /* \"#utility.yul\":4407:4411   */\n      0x00\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4434:4443   */\n      dup3\n        /* \"#utility.yul\":4430:4448   */\n      add\n        /* \"#utility.yul\":4422:4448   */\n      swap1\n      pop\n        /* \"#utility.yul\":4458:4529   */\n      tag_216\n        /* \"#utility.yul\":4526:4527   */\n      0x00\n        /* \"#utility.yul\":4515:4524   */\n      dup4\n        /* \"#utility.yul\":4511:4528   */\n      add\n        /* \"#utility.yul\":4502:4508   */\n      dup5\n        /* \"#utility.yul\":4458:4529   */\n      tag_203\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4314:4536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4623:4792   */\n    tag_190:\n        /* \"#utility.yul\":4707:4718   */\n      0x00\n        /* \"#utility.yul\":4741:4747   */\n      dup3\n        /* \"#utility.yul\":4736:4739   */\n      dup3\n        /* \"#utility.yul\":4729:4748   */\n      mstore\n        /* \"#utility.yul\":4781:4785   */\n      0x20\n        /* \"#utility.yul\":4776:4779   */\n      dup3\n        /* \"#utility.yul\":4772:4786   */\n      add\n        /* \"#utility.yul\":4757:4786   */\n      swap1\n      pop\n        /* \"#utility.yul\":4623:4792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4798:4983   */\n    tag_146:\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4855:4875   */\n      tag_221\n        /* \"#utility.yul\":4873:4874   */\n      dup3\n        /* \"#utility.yul\":4855:4875   */\n      tag_206\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4850:4875   */\n      swap2\n      pop\n        /* \"#utility.yul\":4889:4909   */\n      tag_222\n        /* \"#utility.yul\":4907:4908   */\n      dup4\n        /* \"#utility.yul\":4889:4909   */\n      tag_206\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4884:4909   */\n      swap3\n      pop\n        /* \"#utility.yul\":4928:4929   */\n      dup3\n        /* \"#utility.yul\":4918:4953   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":4933:4951   */\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4918:4953   */\n    tag_223:\n        /* \"#utility.yul\":4975:4976   */\n      dup3\n        /* \"#utility.yul\":4972:4973   */\n      dup3\n        /* \"#utility.yul\":4968:4977   */\n      div\n        /* \"#utility.yul\":4963:4977   */\n      swap1\n      pop\n        /* \"#utility.yul\":4798:4983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4989:5337   */\n    tag_87:\n        /* \"#utility.yul\":5029:5036   */\n      0x00\n        /* \"#utility.yul\":5052:5072   */\n      tag_227\n        /* \"#utility.yul\":5070:5071   */\n      dup3\n        /* \"#utility.yul\":5052:5072   */\n      tag_206\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5047:5072   */\n      swap2\n      pop\n        /* \"#utility.yul\":5086:5106   */\n      tag_228\n        /* \"#utility.yul\":5104:5105   */\n      dup4\n        /* \"#utility.yul\":5086:5106   */\n      tag_206\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5081:5106   */\n      swap3\n      pop\n        /* \"#utility.yul\":5274:5275   */\n      dup2\n        /* \"#utility.yul\":5206:5272   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5202:5276   */\n      div\n        /* \"#utility.yul\":5199:5200   */\n      dup4\n        /* \"#utility.yul\":5196:5277   */\n      gt\n        /* \"#utility.yul\":5191:5192   */\n      dup3\n        /* \"#utility.yul\":5184:5193   */\n      iszero\n        /* \"#utility.yul\":5177:5194   */\n      iszero\n        /* \"#utility.yul\":5173:5278   */\n      and\n        /* \"#utility.yul\":5170:5301   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":5281:5299   */\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5170:5301   */\n    tag_229:\n        /* \"#utility.yul\":5329:5330   */\n      dup3\n        /* \"#utility.yul\":5326:5327   */\n      dup3\n        /* \"#utility.yul\":5322:5331   */\n      mul\n        /* \"#utility.yul\":5311:5331   */\n      swap1\n      pop\n        /* \"#utility.yul\":4989:5337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5343:5439   */\n    tag_186:\n        /* \"#utility.yul\":5380:5387   */\n      0x00\n        /* \"#utility.yul\":5409:5433   */\n      tag_233\n        /* \"#utility.yul\":5427:5432   */\n      dup3\n        /* \"#utility.yul\":5409:5433   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5398:5433   */\n      swap1\n      pop\n        /* \"#utility.yul\":5343:5439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5445:5571   */\n    tag_234:\n        /* \"#utility.yul\":5482:5489   */\n      0x00\n        /* \"#utility.yul\":5522:5564   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5515:5520   */\n      dup3\n        /* \"#utility.yul\":5511:5565   */\n      and\n        /* \"#utility.yul\":5500:5565   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5577:5654   */\n    tag_206:\n        /* \"#utility.yul\":5614:5621   */\n      0x00\n        /* \"#utility.yul\":5643:5648   */\n      dup2\n        /* \"#utility.yul\":5632:5648   */\n      swap1\n      pop\n        /* \"#utility.yul\":5577:5654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5660:5840   */\n    tag_231:\n        /* \"#utility.yul\":5708:5785   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5705:5706   */\n      0x00\n        /* \"#utility.yul\":5698:5786   */\n      mstore\n        /* \"#utility.yul\":5805:5809   */\n      0x11\n        /* \"#utility.yul\":5802:5803   */\n      0x04\n        /* \"#utility.yul\":5795:5810   */\n      mstore\n        /* \"#utility.yul\":5829:5833   */\n      0x24\n        /* \"#utility.yul\":5826:5827   */\n      0x00\n        /* \"#utility.yul\":5819:5834   */\n      revert\n        /* \"#utility.yul\":5846:6026   */\n    tag_225:\n        /* \"#utility.yul\":5894:5971   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5891:5892   */\n      0x00\n        /* \"#utility.yul\":5884:5972   */\n      mstore\n        /* \"#utility.yul\":5991:5995   */\n      0x12\n        /* \"#utility.yul\":5988:5989   */\n      0x04\n        /* \"#utility.yul\":5981:5996   */\n      mstore\n        /* \"#utility.yul\":6015:6019   */\n      0x24\n        /* \"#utility.yul\":6012:6013   */\n      0x00\n        /* \"#utility.yul\":6005:6020   */\n      revert\n        /* \"#utility.yul\":6155:6272   */\n    tag_172:\n        /* \"#utility.yul\":6264:6265   */\n      0x00\n        /* \"#utility.yul\":6261:6262   */\n      dup1\n        /* \"#utility.yul\":6254:6266   */\n      revert\n        /* \"#utility.yul\":6278:6503   */\n    tag_192:\n        /* \"#utility.yul\":6418:6452   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6402:6416   */\n      add\n        /* \"#utility.yul\":6395:6453   */\n      mstore\n        /* \"#utility.yul\":6487:6495   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6482:6484   */\n      0x20\n        /* \"#utility.yul\":6474:6480   */\n      dup3\n        /* \"#utility.yul\":6470:6485   */\n      add\n        /* \"#utility.yul\":6463:6496   */\n      mstore\n        /* \"#utility.yul\":6278:6503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6509:6691   */\n    tag_197:\n        /* \"#utility.yul\":6649:6683   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6645:6646   */\n      0x00\n        /* \"#utility.yul\":6637:6643   */\n      dup3\n        /* \"#utility.yul\":6633:6647   */\n      add\n        /* \"#utility.yul\":6626:6684   */\n      mstore\n        /* \"#utility.yul\":6509:6691   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6697:6927   */\n    tag_202:\n        /* \"#utility.yul\":6837:6871   */\n      0x556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69\n        /* \"#utility.yul\":6833:6834   */\n      0x00\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6821:6835   */\n      add\n        /* \"#utility.yul\":6814:6872   */\n      mstore\n        /* \"#utility.yul\":6906:6919   */\n      0x7420612072657175657374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6901:6903   */\n      0x20\n        /* \"#utility.yul\":6893:6899   */\n      dup3\n        /* \"#utility.yul\":6889:6904   */\n      add\n        /* \"#utility.yul\":6882:6920   */\n      mstore\n        /* \"#utility.yul\":6697:6927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7055   */\n    tag_164:\n        /* \"#utility.yul\":7006:7030   */\n      tag_246\n        /* \"#utility.yul\":7024:7029   */\n      dup2\n        /* \"#utility.yul\":7006:7030   */\n      tag_186\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6999:7004   */\n      dup2\n        /* \"#utility.yul\":6996:7031   */\n      eq\n        /* \"#utility.yul\":6986:7049   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":7045:7046   */\n      0x00\n        /* \"#utility.yul\":7042:7043   */\n      dup1\n        /* \"#utility.yul\":7035:7047   */\n      revert\n        /* \"#utility.yul\":6986:7049   */\n    tag_247:\n        /* \"#utility.yul\":6933:7055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7061:7183   */\n    tag_168:\n        /* \"#utility.yul\":7134:7158   */\n      tag_249\n        /* \"#utility.yul\":7152:7157   */\n      dup2\n        /* \"#utility.yul\":7134:7158   */\n      tag_206\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7127:7132   */\n      dup2\n        /* \"#utility.yul\":7124:7159   */\n      eq\n        /* \"#utility.yul\":7114:7177   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":7173:7174   */\n      0x00\n        /* \"#utility.yul\":7170:7171   */\n      dup1\n        /* \"#utility.yul\":7163:7175   */\n      revert\n        /* \"#utility.yul\":7114:7177   */\n    tag_250:\n        /* \"#utility.yul\":7061:7183   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fc6d6b3e677c2afd34acd7f461fb64793e5653dc7752606acc15fce8338c8a6164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_316": {
									"entryPoint": null,
									"id": 316,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_417": {
									"entryPoint": 61,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_404": {
									"entryPoint": 69,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052610111600155600360025534801561001b57600080fd5b5061003861002d61003d60201b60201c565b61004560201b60201c565b610109565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610bfe806101186000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638f861ba71161008c578063a730941d11610066578063a730941d1461026f578063f2e602021461029f578063f2fde38b146102cf578063f74f3655146102eb576100ea565b80638f861ba7146101df5780639ce5c4bf1461020f578063a3cb7c551461023f576100ea565b80635c830098116100c85780635c830098146101575780636873e8d214610187578063715018a6146101b75780638da5cb5b146101c1576100ea565b806331bfb377146100ef57806334fcf4371461010b5780634f6ca3ce14610127575b600080fd5b6101096004803603810190610104919061080e565b61031b565b005b6101256004803603810190610120919061080e565b61032d565b005b610141600480360381019061013c919061080e565b61033f565b60405161014e919061097d565b60405180910390f35b610171600480360381019061016c919061080e565b6104bb565b60405161017e919061097d565b60405180910390f35b6101a1600480360381019061019c919061080e565b6104cf565b6040516101ae919061097d565b60405180910390f35b6101bf6104e3565b005b6101c96104f7565b6040516101d69190610902565b60405180910390f35b6101f960048036038101906101f4919061083b565b610520565b604051610206919061097d565b60405180910390f35b6102296004803603810190610224919061083b565b610534565b604051610236919061097d565b60405180910390f35b6102596004803603810190610254919061080e565b610548565b604051610266919061097d565b60405180910390f35b6102896004803603810190610284919061080e565b61055c565b604051610296919061097d565b60405180910390f35b6102b960048036038101906102b4919061080e565b610570565b6040516102c6919061097d565b60405180910390f35b6102e960048036038101906102e491906107e1565b61059d565b005b6103056004803603810190610300919061083b565b610621565b604051610312919061097d565b60405180910390f35b610323610641565b8060028190555050565b610335610641565b8060018190555050565b60008060015483101561035557600190506104b2565b60015483101580156103745750600a60015461037191906109da565b83105b1561038257600a90506104b1565b600a60015461039191906109da565b83101580156103ad575060646001546103aa91906109da565b83105b156103bb57606490506104b0565b60646001546103ca91906109da565b83101580156103e757506103e86001546103e491906109da565b83105b156103f6576103e890506104af565b6103e860015461040691906109da565b8310158015610424575061271060015461042091906109da565b8311155b156104335761271090506104ae565b61271060015461044391906109da565b83101580156104625750620186a060015461045e91906109da565b8311155b1561047257620186a090506104ad565b6040517fd1d89b740000000000000000000000000000000000000000000000000000000081526004016104a49061095d565b60405180910390fd5b5b5b5b5b5b80915050919050565b60006104c8826024610621565b9050919050565b60006104dc826036610621565b9050919050565b6104eb610641565b6104f560006106bf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061052c8383610621565b905092915050565b60006105408284610783565b905092915050565b6000610555826018610621565b9050919050565b600061056982601e610621565b9050919050565b60008060025483116105855760019050610594565b61059183600254610783565b90505b80915050919050565b6105a5610641565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c9061091d565b60405180910390fd5b61061e816106bf565b50565b6000606461062f8484610799565b61063991906109a9565b905092915050565b6106496107af565b73ffffffffffffffffffffffffffffffffffffffff166106676104f7565b73ffffffffffffffffffffffffffffffffffffffff16146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b49061093d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361079191906109a9565b905092915050565b600081836107a791906109da565b905092915050565b600033905090565b6000813590506107c681610b9a565b92915050565b6000813590506107db81610bb1565b92915050565b6000602082840312156107f7576107f6610ace565b5b6000610805848285016107b7565b91505092915050565b60006020828403121561082457610823610ace565b5b6000610832848285016107cc565b91505092915050565b6000806040838503121561085257610851610ace565b5b6000610860858286016107cc565b9250506020610871858286016107cc565b9150509250929050565b61088481610a34565b82525050565b6000610897602683610998565b91506108a282610ad3565b604082019050919050565b60006108ba602083610998565b91506108c582610b22565b602082019050919050565b60006108dd602b83610998565b91506108e882610b4b565b604082019050919050565b6108fc81610a66565b82525050565b6000602082019050610917600083018461087b565b92915050565b600060208201905081810360008301526109368161088a565b9050919050565b60006020820190508181036000830152610956816108ad565b9050919050565b60006020820190508181036000830152610976816108d0565b9050919050565b600060208201905061099260008301846108f3565b92915050565b600082825260208201905092915050565b60006109b482610a66565b91506109bf83610a66565b9250826109cf576109ce610a9f565b5b828204905092915050565b60006109e582610a66565b91506109f083610a66565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a2957610a28610a70565b5b828202905092915050565b6000610a3f82610a46565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960008201527f7420612072657175657374000000000000000000000000000000000000000000602082015250565b610ba381610a34565b8114610bae57600080fd5b50565b610bba81610a66565b8114610bc557600080fd5b5056fea2646970667358221220fc6d6b3e677c2afd34acd7f461fb64793e5653dc7752606acc15fce8338c8a6164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x111 PUSH1 0x1 SSTORE PUSH1 0x3 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38 PUSH2 0x2D PUSH2 0x3D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x45 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBFE DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F861BA7 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA730941D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA730941D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF74F3655 EQ PUSH2 0x2EB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xA3CB7C55 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5C830098 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C830098 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6873E8D2 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x31BFB377 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x4E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH2 0x641 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x335 PUSH2 0x641 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI POP PUSH1 0xA PUSH1 0x1 SLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x382 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI POP PUSH1 0x64 PUSH1 0x1 SLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x3BB JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x1 SLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI POP PUSH2 0x3E8 PUSH1 0x1 SLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x1 SLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI POP PUSH2 0x2710 PUSH1 0x1 SLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x433 JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 SLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x462 JUMPI POP PUSH3 0x186A0 PUSH1 0x1 SLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x472 JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP3 PUSH1 0x24 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC DUP3 PUSH1 0x36 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x641 JUMP JUMPDEST PUSH2 0x4F5 PUSH1 0x0 PUSH2 0x6BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C DUP4 DUP4 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 DUP3 DUP5 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x555 DUP3 PUSH1 0x18 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 DUP3 PUSH1 0x1E PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP4 GT PUSH2 0x585 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x594 JUMP JUMPDEST PUSH2 0x591 DUP4 PUSH1 0x2 SLOAD PUSH2 0x783 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A5 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x6BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x62F DUP5 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x649 PUSH2 0x7AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x667 PUSH2 0x4F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C6 DUP2 PUSH2 0xB9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DB DUP2 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0xACE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP5 DUP3 DUP6 ADD PUSH2 0x7B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0xACE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x832 DUP5 DUP3 DUP6 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0xACE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x860 DUP6 DUP3 DUP7 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x871 DUP6 DUP3 DUP7 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH1 0x26 DUP4 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A2 DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA PUSH1 0x20 DUP4 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C5 DUP3 PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DD PUSH1 0x2B DUP4 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E8 DUP3 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FC DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x917 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x936 DUP2 PUSH2 0x88A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x956 DUP2 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x976 DUP2 PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x992 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 DUP3 PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BF DUP4 PUSH2 0xA66 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9CF JUMPI PUSH2 0x9CE PUSH2 0xA9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E5 DUP3 PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F0 DUP4 PUSH2 0xA66 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0xA70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP3 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xBA3 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH14 0x6B3E677C2AFD34ACD7F461FB6479 RETURNDATACOPY JUMP MSTORE8 0xDC PUSH24 0x52606ACC15FCE8338C8A6164736F6C634300080700330000 ",
							"sourceMap": "184:2890:0:-:0;;;249:3;226:26;;282:1;259:24;;184:2890;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;184:2890:0;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;184:2890:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_347": {
									"entryPoint": 1601,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_417": {
									"entryPoint": 1967,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_404": {
									"entryPoint": 1727,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_648": {
									"entryPoint": 1923,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDeductMoney_291": {
									"entryPoint": 1312,
									"id": 291,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMatNumber_180": {
									"entryPoint": 1392,
									"id": 180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPercentage_260": {
									"entryPoint": 1569,
									"id": 260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPunish_276": {
									"entryPoint": 1332,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTaskTransEnd_210": {
									"entryPoint": 1352,
									"id": 210,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTaskTransFirst_225": {
									"entryPoint": 1372,
									"id": 225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTaskTrans_195": {
									"entryPoint": 1231,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTaskVf_240": {
									"entryPoint": 1211,
									"id": 240,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_633": {
									"entryPoint": 1945,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_333": {
									"entryPoint": 1271,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@punishRatio_125": {
									"entryPoint": 831,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_361": {
									"entryPoint": 1251,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRate_137": {
									"entryPoint": 813,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setvfN_149": {
									"entryPoint": 795,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_384": {
									"entryPoint": 1437,
									"id": 384,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7186:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "744:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "746:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "746:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "746:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "719:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "728:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:32:4"
															},
															"nodeType": "YulIf",
															"src": "708:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "837:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "852:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "856:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "668:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "679:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "691:6:4",
														"type": ""
													}
												],
												"src": "632:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1050:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1098:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1071:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1080:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1067:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1067:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1063:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:32:4"
															},
															"nodeType": "YulIf",
															"src": "1060:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1189:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1204:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1208:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1233:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1268:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1279:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1264:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1264:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1288:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1243:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1243:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1233:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1316:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1331:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1345:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1335:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1361:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1396:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1407:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1392:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1392:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1371:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1361:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1012:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1023:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1035:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1043:6:4",
														"type": ""
													}
												],
												"src": "967:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1529:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1552:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1534:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1522:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1500:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1507:3:4",
														"type": ""
													}
												],
												"src": "1447:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1717:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1727:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1793:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1734:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1810:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1810:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1912:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1923:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1912:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1705:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1713:3:4",
														"type": ""
													}
												],
												"src": "1571:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2165:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2106:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2271:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2182:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2284:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2295:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2291:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2284:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2085:3:4",
														"type": ""
													}
												],
												"src": "1943:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2461:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2471:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2542:2:4",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2478:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2643:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																	"nodeType": "YulIdentifier",
																	"src": "2554:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2656:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2667:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2449:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2457:3:4",
														"type": ""
													}
												],
												"src": "2315:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2752:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2769:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2792:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2774:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2774:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2740:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2747:3:4",
														"type": ""
													}
												],
												"src": "2687:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2909:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2919:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2931:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2942:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2919:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2999:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3012:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3023:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3008:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2955:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2881:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2893:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2904:4:4",
														"type": ""
													}
												],
												"src": "2811:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3232:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3243:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3220:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3278:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3263:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3286:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3282:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3312:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3446:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3320:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3312:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3190:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3205:4:4",
														"type": ""
													}
												],
												"src": "3039:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3635:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3645:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3657:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3668:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3653:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3645:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3692:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3703:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3688:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3688:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3711:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3707:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3707:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3681:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3737:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3871:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3745:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3745:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3737:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3615:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3630:4:4",
														"type": ""
													}
												],
												"src": "3464:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4070:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4082:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4093:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4078:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4070:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4128:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4113:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4136:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4142:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4132:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4132:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4106:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4162:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4296:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4170:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4162:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4040:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4055:4:4",
														"type": ""
													}
												],
												"src": "3889:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4412:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4422:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4434:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4445:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4430:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4422:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4502:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4515:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4526:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4511:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4458:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4384:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4396:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4407:4:4",
														"type": ""
													}
												],
												"src": "4314:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4582:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4592:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4602:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4592:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4575:6:4",
														"type": ""
													}
												],
												"src": "4542:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4719:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4736:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4741:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4729:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4757:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4776:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4772:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4691:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4696:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4707:11:4",
														"type": ""
													}
												],
												"src": "4623:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4840:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4850:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4873:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4855:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4850:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4884:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4907:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4889:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4884:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4931:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4933:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4933:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4933:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4928:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4921:9:4"
															},
															"nodeType": "YulIf",
															"src": "4918:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4963:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4972:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4975:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4963:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4829:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4832:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4838:1:4",
														"type": ""
													}
												],
												"src": "4798:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5037:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5047:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5070:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5052:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5047:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5081:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5104:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5086:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5081:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5279:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5281:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5191:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5184:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5184:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5177:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5199:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5206:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5274:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5202:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5202:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5196:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5196:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5173:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:105:4"
															},
															"nodeType": "YulIf",
															"src": "5170:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5311:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5326:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5329:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5311:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5020:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5023:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5029:7:4",
														"type": ""
													}
												],
												"src": "4989:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5388:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5398:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5427:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5409:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5398:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5370:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5380:7:4",
														"type": ""
													}
												],
												"src": "5343:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5490:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5500:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5515:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5511:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5500:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5472:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5482:7:4",
														"type": ""
													}
												],
												"src": "5445:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5643:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5632:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5604:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5614:7:4",
														"type": ""
													}
												],
												"src": "5577:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5705:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5708:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5802:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5805:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5795:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5795:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5826:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5829:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5819:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5819:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5660:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5874:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5884:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5884:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5988:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5991:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5981:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6012:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6015:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6005:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6005:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6005:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5846:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6121:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6138:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6141:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6131:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6131:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6131:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6032:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6244:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6261:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6264:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6254:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6254:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6155:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6384:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6406:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6414:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6402:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6402:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6418:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6395:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6395:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6395:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6474:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6482:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6470:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6487:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6463:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6376:6:4",
														"type": ""
													}
												],
												"src": "6278:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6615:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6637:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6645:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6633:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6633:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6649:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6626:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6626:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6607:6:4",
														"type": ""
													}
												],
												"src": "6509:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6803:124:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6825:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6833:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6821:14:4"
																	},
																	{
																		"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6837:34:4",
																		"type": "",
																		"value": "Unable to calculate,Please submi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6814:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6814:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6814:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6893:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6901:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6889:15:4"
																	},
																	{
																		"hexValue": "7420612072657175657374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6906:13:4",
																		"type": "",
																		"value": "t a request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6882:38:4"
														}
													]
												},
												"name": "store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6795:6:4",
														"type": ""
													}
												],
												"src": "6697:230:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6976:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7033:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7042:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7045:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7035:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7035:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7035:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6999:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7024:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7006:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7006:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6996:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6996:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6989:43:4"
															},
															"nodeType": "YulIf",
															"src": "6986:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6969:5:4",
														"type": ""
													}
												],
												"src": "6933:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7161:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7170:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7173:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7163:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7163:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7163:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7127:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7152:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7134:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7134:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7124:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7124:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7117:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:43:4"
															},
															"nodeType": "YulIf",
															"src": "7114:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7097:5:4",
														"type": ""
													}
												],
												"src": "7061:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unable to calculate,Please submi\")\n\n        mstore(add(memPtr, 32), \"t a request\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638f861ba71161008c578063a730941d11610066578063a730941d1461026f578063f2e602021461029f578063f2fde38b146102cf578063f74f3655146102eb576100ea565b80638f861ba7146101df5780639ce5c4bf1461020f578063a3cb7c551461023f576100ea565b80635c830098116100c85780635c830098146101575780636873e8d214610187578063715018a6146101b75780638da5cb5b146101c1576100ea565b806331bfb377146100ef57806334fcf4371461010b5780634f6ca3ce14610127575b600080fd5b6101096004803603810190610104919061080e565b61031b565b005b6101256004803603810190610120919061080e565b61032d565b005b610141600480360381019061013c919061080e565b61033f565b60405161014e919061097d565b60405180910390f35b610171600480360381019061016c919061080e565b6104bb565b60405161017e919061097d565b60405180910390f35b6101a1600480360381019061019c919061080e565b6104cf565b6040516101ae919061097d565b60405180910390f35b6101bf6104e3565b005b6101c96104f7565b6040516101d69190610902565b60405180910390f35b6101f960048036038101906101f4919061083b565b610520565b604051610206919061097d565b60405180910390f35b6102296004803603810190610224919061083b565b610534565b604051610236919061097d565b60405180910390f35b6102596004803603810190610254919061080e565b610548565b604051610266919061097d565b60405180910390f35b6102896004803603810190610284919061080e565b61055c565b604051610296919061097d565b60405180910390f35b6102b960048036038101906102b4919061080e565b610570565b6040516102c6919061097d565b60405180910390f35b6102e960048036038101906102e491906107e1565b61059d565b005b6103056004803603810190610300919061083b565b610621565b604051610312919061097d565b60405180910390f35b610323610641565b8060028190555050565b610335610641565b8060018190555050565b60008060015483101561035557600190506104b2565b60015483101580156103745750600a60015461037191906109da565b83105b1561038257600a90506104b1565b600a60015461039191906109da565b83101580156103ad575060646001546103aa91906109da565b83105b156103bb57606490506104b0565b60646001546103ca91906109da565b83101580156103e757506103e86001546103e491906109da565b83105b156103f6576103e890506104af565b6103e860015461040691906109da565b8310158015610424575061271060015461042091906109da565b8311155b156104335761271090506104ae565b61271060015461044391906109da565b83101580156104625750620186a060015461045e91906109da565b8311155b1561047257620186a090506104ad565b6040517fd1d89b740000000000000000000000000000000000000000000000000000000081526004016104a49061095d565b60405180910390fd5b5b5b5b5b5b80915050919050565b60006104c8826024610621565b9050919050565b60006104dc826036610621565b9050919050565b6104eb610641565b6104f560006106bf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061052c8383610621565b905092915050565b60006105408284610783565b905092915050565b6000610555826018610621565b9050919050565b600061056982601e610621565b9050919050565b60008060025483116105855760019050610594565b61059183600254610783565b90505b80915050919050565b6105a5610641565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c9061091d565b60405180910390fd5b61061e816106bf565b50565b6000606461062f8484610799565b61063991906109a9565b905092915050565b6106496107af565b73ffffffffffffffffffffffffffffffffffffffff166106676104f7565b73ffffffffffffffffffffffffffffffffffffffff16146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b49061093d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361079191906109a9565b905092915050565b600081836107a791906109da565b905092915050565b600033905090565b6000813590506107c681610b9a565b92915050565b6000813590506107db81610bb1565b92915050565b6000602082840312156107f7576107f6610ace565b5b6000610805848285016107b7565b91505092915050565b60006020828403121561082457610823610ace565b5b6000610832848285016107cc565b91505092915050565b6000806040838503121561085257610851610ace565b5b6000610860858286016107cc565b9250506020610871858286016107cc565b9150509250929050565b61088481610a34565b82525050565b6000610897602683610998565b91506108a282610ad3565b604082019050919050565b60006108ba602083610998565b91506108c582610b22565b602082019050919050565b60006108dd602b83610998565b91506108e882610b4b565b604082019050919050565b6108fc81610a66565b82525050565b6000602082019050610917600083018461087b565b92915050565b600060208201905081810360008301526109368161088a565b9050919050565b60006020820190508181036000830152610956816108ad565b9050919050565b60006020820190508181036000830152610976816108d0565b9050919050565b600060208201905061099260008301846108f3565b92915050565b600082825260208201905092915050565b60006109b482610a66565b91506109bf83610a66565b9250826109cf576109ce610a9f565b5b828204905092915050565b60006109e582610a66565b91506109f083610a66565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a2957610a28610a70565b5b828202905092915050565b6000610a3f82610a46565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960008201527f7420612072657175657374000000000000000000000000000000000000000000602082015250565b610ba381610a34565b8114610bae57600080fd5b50565b610bba81610a66565b8114610bc557600080fd5b5056fea2646970667358221220fc6d6b3e677c2afd34acd7f461fb64793e5653dc7752606acc15fce8338c8a6164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F861BA7 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA730941D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA730941D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF74F3655 EQ PUSH2 0x2EB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xA3CB7C55 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5C830098 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C830098 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6873E8D2 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x31BFB377 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x4E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH2 0x641 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x335 PUSH2 0x641 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI POP PUSH1 0xA PUSH1 0x1 SLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x382 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI POP PUSH1 0x64 PUSH1 0x1 SLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x3BB JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x1 SLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI POP PUSH2 0x3E8 PUSH1 0x1 SLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x1 SLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI POP PUSH2 0x2710 PUSH1 0x1 SLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x433 JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 SLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x462 JUMPI POP PUSH3 0x186A0 PUSH1 0x1 SLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x472 JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP3 PUSH1 0x24 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC DUP3 PUSH1 0x36 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x641 JUMP JUMPDEST PUSH2 0x4F5 PUSH1 0x0 PUSH2 0x6BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C DUP4 DUP4 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 DUP3 DUP5 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x555 DUP3 PUSH1 0x18 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 DUP3 PUSH1 0x1E PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP4 GT PUSH2 0x585 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x594 JUMP JUMPDEST PUSH2 0x591 DUP4 PUSH1 0x2 SLOAD PUSH2 0x783 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A5 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x6BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x62F DUP5 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x649 PUSH2 0x7AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x667 PUSH2 0x4F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C6 DUP2 PUSH2 0xB9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DB DUP2 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0xACE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP5 DUP3 DUP6 ADD PUSH2 0x7B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0xACE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x832 DUP5 DUP3 DUP6 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0xACE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x860 DUP6 DUP3 DUP7 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x871 DUP6 DUP3 DUP7 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH1 0x26 DUP4 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A2 DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA PUSH1 0x20 DUP4 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C5 DUP3 PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DD PUSH1 0x2B DUP4 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E8 DUP3 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FC DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x917 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x936 DUP2 PUSH2 0x88A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x956 DUP2 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x976 DUP2 PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x992 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 DUP3 PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BF DUP4 PUSH2 0xA66 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9CF JUMPI PUSH2 0x9CE PUSH2 0xA9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E5 DUP3 PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F0 DUP4 PUSH2 0xA66 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0xA70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP3 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xBA3 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH14 0x6B3E677C2AFD34ACD7F461FB6479 RETURNDATACOPY JUMP MSTORE8 0xDC PUSH24 0x52606ACC15FCE8338C8A6164736F6C634300080700330000 ",
							"sourceMap": "184:2890:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:77;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1179:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;354:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2299:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1745:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2894:177:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1915:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2088:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1427:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2460:200:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1342:77;1094:13:1;:11;:13::i;:::-;1407:4:0::1;1400;:11;;;;1342:77:::0;:::o;1179:80::-;1094:13:1;:11;:13::i;:::-;1246:5:0::1;1239:4;:12;;;;1179:80:::0;:::o;354:797::-;413:7;433:13;471:4;;461:7;:14;457:664;;;500:1;492:9;;457:664;;;534:4;;523:7;:15;;:39;;;;;559:3;552:4;;:10;;;;:::i;:::-;542:7;:20;523:39;519:602;;;587:3;579:11;;519:602;;;630:3;623:4;;:10;;;;:::i;:::-;612:7;:21;;:45;;;;;654:3;647:4;;:10;;;;:::i;:::-;637:7;:20;612:45;608:513;;;682:3;674:11;;608:513;;;725:3;718:4;;:10;;;;:::i;:::-;707:7;:21;;:45;;;;;749:3;742:4;;:10;;;;:::i;:::-;732:7;:20;707:45;703:418;;;777:3;769:11;;703:418;;;820:3;813:4;;:10;;;;:::i;:::-;802:7;:21;;:46;;;;;845:3;838:4;;:10;;;;:::i;:::-;827:7;:21;;802:46;798:323;;;873:3;865:11;;798:323;;;916:3;909:4;;:10;;;;:::i;:::-;898:7;:21;;:46;;;;;941:3;934:4;;:10;;;;:::i;:::-;923:7;:21;;898:46;894:227;;;969:3;961:11;;894:227;;;1012:97;;;;;;;;;;:::i;:::-;;;;;;;;894:227;798:323;703:418;608:513;519:602;457:664;1138:5;1131:12;;;354:797;;;:::o;2299:127::-;2356:14;2392:26;2406:7;2415:2;2392:13;:26::i;:::-;2383:35;;2299:127;;;:::o;1745:162::-;1832:14;1873:26;1887:7;1896:2;1873:13;:26::i;:::-;1864:35;;1745:162;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2894:177:0:-;3000:7;3032:31;3046:7;3055;3032:13;:31::i;:::-;3025:38;;2894:177;;;;:::o;2688:169::-;2788:7;2820:29;2833:7;2842:6;2820:12;:29::i;:::-;2813:36;;2688:169;;;;:::o;1915:165::-;2005:14;2046:26;2060:7;2069:2;2046:13;:26::i;:::-;2037:35;;1915:165;;;:::o;2088:167::-;2180:14;2221:26;2235:7;2244:2;2221:13;:26::i;:::-;2212:35;;2088:167;;;:::o;1427:274::-;1492:7;1512:13;1556:4;;1540:12;:20;1536:135;;1585:1;1577:9;;1536:135;;;1627:32;1640:12;1654:4;;1627:12;:32::i;:::-;1619:40;;1536:135;1688:5;1681:12;;;1427:274;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2460:200:0:-;2564:20;2649:3;2617:29;2630:7;2639:6;2617:12;:29::i;:::-;:35;;;;:::i;:::-;2602:50;;2460:200;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3850:96:3:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;640::2:-;693:7;719:10;712:17;;640:96;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:::-;691:6;740:2;728:9;719:7;715:23;711:32;708:119;;;746:79;;:::i;:::-;708:119;866:1;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;837:117;632:329;;;;:::o;967:474::-;1035:6;1043;1092:2;1080:9;1071:7;1067:23;1063:32;1060:119;;;1098:79;;:::i;:::-;1060:119;1218:1;1243:53;1288:7;1279:6;1268:9;1264:22;1243:53;:::i;:::-;1233:63;;1189:117;1345:2;1371:53;1416:7;1407:6;1396:9;1392:22;1371:53;:::i;:::-;1361:63;;1316:118;967:474;;;;;:::o;1447:118::-;1534:24;1552:5;1534:24;:::i;:::-;1529:3;1522:37;1447:118;;:::o;1571:366::-;1713:3;1734:67;1798:2;1793:3;1734:67;:::i;:::-;1727:74;;1810:93;1899:3;1810:93;:::i;:::-;1928:2;1923:3;1919:12;1912:19;;1571:366;;;:::o;1943:::-;2085:3;2106:67;2170:2;2165:3;2106:67;:::i;:::-;2099:74;;2182:93;2271:3;2182:93;:::i;:::-;2300:2;2295:3;2291:12;2284:19;;1943:366;;;:::o;2315:::-;2457:3;2478:67;2542:2;2537:3;2478:67;:::i;:::-;2471:74;;2554:93;2643:3;2554:93;:::i;:::-;2672:2;2667:3;2663:12;2656:19;;2315:366;;;:::o;2687:118::-;2774:24;2792:5;2774:24;:::i;:::-;2769:3;2762:37;2687:118;;:::o;2811:222::-;2904:4;2942:2;2931:9;2927:18;2919:26;;2955:71;3023:1;3012:9;3008:17;2999:6;2955:71;:::i;:::-;2811:222;;;;:::o;3039:419::-;3205:4;3243:2;3232:9;3228:18;3220:26;;3292:9;3286:4;3282:20;3278:1;3267:9;3263:17;3256:47;3320:131;3446:4;3320:131;:::i;:::-;3312:139;;3039:419;;;:::o;3464:::-;3630:4;3668:2;3657:9;3653:18;3645:26;;3717:9;3711:4;3707:20;3703:1;3692:9;3688:17;3681:47;3745:131;3871:4;3745:131;:::i;:::-;3737:139;;3464:419;;;:::o;3889:::-;4055:4;4093:2;4082:9;4078:18;4070:26;;4142:9;4136:4;4132:20;4128:1;4117:9;4113:17;4106:47;4170:131;4296:4;4170:131;:::i;:::-;4162:139;;3889:419;;;:::o;4314:222::-;4407:4;4445:2;4434:9;4430:18;4422:26;;4458:71;4526:1;4515:9;4511:17;4502:6;4458:71;:::i;:::-;4314:222;;;;:::o;4623:169::-;4707:11;4741:6;4736:3;4729:19;4781:4;4776:3;4772:14;4757:29;;4623:169;;;;:::o;4798:185::-;4838:1;4855:20;4873:1;4855:20;:::i;:::-;4850:25;;4889:20;4907:1;4889:20;:::i;:::-;4884:25;;4928:1;4918:35;;4933:18;;:::i;:::-;4918:35;4975:1;4972;4968:9;4963:14;;4798:185;;;;:::o;4989:348::-;5029:7;5052:20;5070:1;5052:20;:::i;:::-;5047:25;;5086:20;5104:1;5086:20;:::i;:::-;5081:25;;5274:1;5206:66;5202:74;5199:1;5196:81;5191:1;5184:9;5177:17;5173:105;5170:131;;;5281:18;;:::i;:::-;5170:131;5329:1;5326;5322:9;5311:20;;4989:348;;;;:::o;5343:96::-;5380:7;5409:24;5427:5;5409:24;:::i;:::-;5398:35;;5343:96;;;:::o;5445:126::-;5482:7;5522:42;5515:5;5511:54;5500:65;;5445:126;;;:::o;5577:77::-;5614:7;5643:5;5632:16;;5577:77;;;:::o;5660:180::-;5708:77;5705:1;5698:88;5805:4;5802:1;5795:15;5829:4;5826:1;5819:15;5846:180;5894:77;5891:1;5884:88;5991:4;5988:1;5981:15;6015:4;6012:1;6005:15;6155:117;6264:1;6261;6254:12;6278:225;6418:34;6414:1;6406:6;6402:14;6395:58;6487:8;6482:2;6474:6;6470:15;6463:33;6278:225;:::o;6509:182::-;6649:34;6645:1;6637:6;6633:14;6626:58;6509:182;:::o;6697:230::-;6837:34;6833:1;6825:6;6821:14;6814:58;6906:13;6901:2;6893:6;6889:15;6882:38;6697:230;:::o;6933:122::-;7006:24;7024:5;7006:24;:::i;:::-;6999:5;6996:35;6986:63;;7045:1;7042;7035:12;6986:63;6933:122;:::o;7061:::-;7134:24;7152:5;7134:24;:::i;:::-;7127:5;7124:35;7114:63;;7173:1;7170;7163:12;7114:63;7061:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "614000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getDeductMoney(uint256,uint256)": "infinite",
								"getMatNumber(uint256)": "infinite",
								"getPercentage(uint256,uint256)": "infinite",
								"getPunish(uint256,uint256)": "infinite",
								"getTaskTrans(uint256)": "infinite",
								"getTaskTransEnd(uint256)": "infinite",
								"getTaskTransFirst(uint256)": "infinite",
								"getTaskVf(uint256)": "infinite",
								"owner()": "2611",
								"punishRatio(uint256)": "infinite",
								"renounceOwnership()": "30465",
								"setRate(uint256)": "24830",
								"setvfN(uint256)": "24808",
								"transferOwnership(address)": "30813"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 249,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "111"
								},
								{
									"begin": 226,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 226,
									"end": 252,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 259,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 259,
									"end": 283,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 3074,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc6d6b3e677c2afd34acd7f461fb64793e5653dc7752606acc15fce8338c8a6164736f6c63430008070033",
									".code": [
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "8F861BA7"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "A730941D"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "A730941D"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "F2E60202"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "F74F3655"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "8F861BA7"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "9CE5C4BF"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "A3CB7C55"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "5C830098"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "5C830098"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "6873E8D2"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "31BFB377"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "34FCF437"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CA3CE"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 3074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1400,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1411,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1419,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 475,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 471,
											"end": 475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 461,
											"end": 475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 500,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 523,
											"end": 538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 523,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 523,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 523,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 523,
											"end": 562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 523,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 552,
											"end": 556,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 552,
											"end": 556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 552,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 552,
											"end": 562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 552,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 552,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 542,
											"end": 562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 523,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 523,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 587,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 579,
											"end": 590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 633,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 623,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 623,
											"end": 627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 623,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 623,
											"end": 633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 623,
											"end": 633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 623,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 623,
											"end": 633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 623,
											"end": 633,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 623,
											"end": 633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 612,
											"end": 633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 612,
											"end": 633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 612,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 612,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 612,
											"end": 657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 612,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 647,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 647,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 644,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 637,
											"end": 657,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 612,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 612,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 674,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 718,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 718,
											"end": 722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 718,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 718,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 718,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 718,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 707,
											"end": 728,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 707,
											"end": 728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 707,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 707,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 707,
											"end": 752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 707,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 742,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 742,
											"end": 746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 742,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 742,
											"end": 752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 742,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 732,
											"end": 752,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 707,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 707,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 777,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 769,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 769,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 813,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 813,
											"end": 817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 813,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 802,
											"end": 848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 802,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 802,
											"end": 848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 802,
											"end": 848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 838,
											"end": 842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 838,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 838,
											"end": 848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 838,
											"end": 848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 848,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 838,
											"end": 848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 827,
											"end": 848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 827,
											"end": 848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 802,
											"end": 848,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 802,
											"end": 848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 873,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 865,
											"end": 876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 909,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 898,
											"end": 919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 898,
											"end": 919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 944,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 934,
											"end": 938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 934,
											"end": 944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 934,
											"end": 944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 934,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 923,
											"end": 930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 923,
											"end": 944,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 923,
											"end": 944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 969,
											"end": 972,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 961,
											"end": 972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 961,
											"end": 972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "D1D89B7400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 894,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 798,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 703,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 608,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 519,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 457,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 1151,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2406,
											"end": 2413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2392,
											"end": 2418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2418,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2392,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2426,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1887,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1896,
											"end": 1898,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1873,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1907,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3046,
											"end": 3053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3032,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3032,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3032,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 3071,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2833,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2820,
											"end": 2849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2820,
											"end": 2849,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2820,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2857,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2046,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2046,
											"end": 2072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2046,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 2080,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2235,
											"end": 2242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 2221,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2221,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2221,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2221,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2255,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1556,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1556,
											"end": 1560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1560,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1654,
											"end": 1658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1701,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2652,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2617,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2630,
											"end": 2637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2617,
											"end": 2646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2646,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2617,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2660,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 719,
											"end": 726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 715,
											"end": 738,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 711,
											"end": 743,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1089,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1090,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1060,
											"end": 1179,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1098,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1098,
											"end": 1177,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1177,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1098,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1060,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1243,
											"end": 1296,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1296,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1243,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1296,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1441,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1552,
											"end": 1557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1571,
											"end": 1937,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1571,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1798,
											"end": 1800,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1734,
											"end": 1801,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1734,
											"end": 1801,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1734,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1810,
											"end": 1903,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 1903,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1810,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1930,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1937,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2271,
											"end": 2274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2315,
											"end": 2681,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2315,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2542,
											"end": 2544,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2478,
											"end": 2545,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2545,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2478,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2643,
											"end": 2646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2554,
											"end": 2647,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2647,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2554,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2681,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2681,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2687,
											"end": 2805,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2687,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2774,
											"end": 2798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2798,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2774,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2805,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3021,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2955,
											"end": 3026,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 3026,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2955,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 3033,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3458,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3039,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3446,
											"end": 3450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3320,
											"end": 3451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3320,
											"end": 3451,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3320,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3458,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3464,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3464,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3727,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3704,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3871,
											"end": 3875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3745,
											"end": 3876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3876,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3745,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3883,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3889,
											"end": 4308,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3889,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4142,
											"end": 4151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4136,
											"end": 4140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4152,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4153,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4296,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4170,
											"end": 4301,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4170,
											"end": 4301,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4170,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 4308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 4308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 4308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 4308,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4776,
											"end": 4779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4792,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4855,
											"end": 4875,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4855,
											"end": 4875,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4855,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4907,
											"end": 4908,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4889,
											"end": 4909,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4889,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4889,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 4909,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4918,
											"end": 4953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4953,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4918,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 4973,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4983,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5070,
											"end": 5071,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5086,
											"end": 5106,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5086,
											"end": 5106,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5086,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5081,
											"end": 5106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5081,
											"end": 5106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5206,
											"end": 5272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5276,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5277,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5177,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5301,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5170,
											"end": 5301,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5281,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 5281,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5281,
											"end": 5299,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5281,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 5281,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5301,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5170,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5337,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5343,
											"end": 5439,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5343,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5427,
											"end": 5432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5409,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5409,
											"end": 5433,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5409,
											"end": 5433,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5409,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5439,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5445,
											"end": 5571,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5445,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5564,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5565,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5500,
											"end": 5565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5500,
											"end": 5565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5571,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5577,
											"end": 5654,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5577,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5654,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5840,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5660,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5708,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5705,
											"end": 5706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5786,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5826,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5834,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5846,
											"end": 6026,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5846,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 5995,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5988,
											"end": 5989,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5981,
											"end": 5996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6020,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6155,
											"end": 6272,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6155,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6261,
											"end": 6262,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6254,
											"end": 6266,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6503,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6278,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6418,
											"end": 6452,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6495,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6482,
											"end": 6484,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6474,
											"end": 6480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6470,
											"end": 6485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6503,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6509,
											"end": 6691,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6509,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6683,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6645,
											"end": 6646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6626,
											"end": 6684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6509,
											"end": 6691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6509,
											"end": 6691,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6697,
											"end": 6927,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 6697,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6837,
											"end": 6871,
											"name": "PUSH",
											"source": 4,
											"value": "556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69"
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 6835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6814,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 6919,
											"name": "PUSH",
											"source": 4,
											"value": "7420612072657175657374000000000000000000000000000000000000000000"
										},
										{
											"begin": 6901,
											"end": 6903,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6889,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6697,
											"end": 6927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6697,
											"end": 6927,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6933,
											"end": 7055,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6933,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7006,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7024,
											"end": 7029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7006,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7006,
											"end": 7030,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7006,
											"end": 7030,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7006,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6986,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6986,
											"end": 7049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7047,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6986,
											"end": 7049,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6986,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7055,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7061,
											"end": 7183,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7061,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7152,
											"end": 7157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7134,
											"end": 7158,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7134,
											"end": 7158,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7134,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7124,
											"end": 7159,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7114,
											"end": 7177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7175,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7177,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7114,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7183,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getDeductMoney(uint256,uint256)": "8f861ba7",
							"getMatNumber(uint256)": "f2e60202",
							"getPercentage(uint256,uint256)": "f74f3655",
							"getPunish(uint256,uint256)": "9ce5c4bf",
							"getTaskTrans(uint256)": "6873e8d2",
							"getTaskTransEnd(uint256)": "a3cb7c55",
							"getTaskTransFirst(uint256)": "a730941d",
							"getTaskVf(uint256)": "5c830098",
							"owner()": "8da5cb5b",
							"punishRatio(uint256)": "4f6ca3ce",
							"renounceOwnership()": "715018a6",
							"setRate(uint256)": "34fcf437",
							"setvfN(uint256)": "31bfb377",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ParameterException\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deduct\",\"type\":\"uint256\"}],\"name\":\"getDeductMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transNumber\",\"type\":\"uint256\"}],\"name\":\"getMatNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"getPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getPunish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getTaskTrans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getTaskTransEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getTaskTransFirst\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getTaskVf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounts\",\"type\":\"uint256\"}],\"name\":\"punishRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vfN\",\"type\":\"uint256\"}],\"name\":\"setvfN\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CalculateUtils.sol\":\"CalculateUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CalculateUtils.sol\":{\"keccak256\":\"0xc4c196eda9f6265a2a5a277a4cfcad8d58481b671b1d8b6e427fd5b2c3bc19b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8222cf1fb453a898d32dffe7df6c453c55185fcd34408470ede1bcbc3ad66471\",\"dweb:/ipfs/QmNaQJZpWvGTfx8uATVDMDbtwiVPuqWxerqRvarqKHFvnj\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 300,
								"contract": "CalculateUtils.sol:CalculateUtils",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 12,
								"contract": "CalculateUtils.sol:CalculateUtils",
								"label": "rate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "CalculateUtils.sol:CalculateUtils",
								"label": "vf_n",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 300,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CalculateUtils.sol": {
				"ast": {
					"absolutePath": "CalculateUtils.sol",
					"exportedSymbols": {
						"CalculateUtils": [
							292
						],
						"Context": [
							427
						],
						"Ownable": [
							405
						],
						"ParameterException": [
							7
						],
						"SafeMath": [
							739
						]
					},
					"id": 293,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "./contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 293,
							"sourceUnit": 740,
							"src": "58:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 293,
							"sourceUnit": 406,
							"src": "105:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 7,
							"name": "ParameterException",
							"nameLocation": "153:18:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 6,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 5,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 7,
										"src": "172:6:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 4,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "172:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "171:8:0"
							},
							"src": "147:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 405,
										"src": "211:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "211:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 292,
							"linearizedBaseContracts": [
								292,
								405,
								427
							],
							"name": "CalculateUtils",
							"nameLocation": "193:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "242:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 292,
									"src": "226:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "226:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323733",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "249:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_273_by_1",
											"typeString": "int_const 273"
										},
										"value": "273"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "vf_n",
									"nameLocation": "275:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 292,
									"src": "259:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "259:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "282:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "422:729:0",
										"statements": [
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "441:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "433:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 22,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 24,
												"nodeType": "VariableDeclarationStatement",
												"src": "433:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 25,
														"name": "_bounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 26,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "471:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "461:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 34,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "534:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "523:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 36,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "542:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 37,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "552:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316531",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "559:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "1e1"
																},
																"src": "552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "542:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "523:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 47,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 48,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "623:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316531",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "630:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "623:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "612:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "637:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 53,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "647:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316532",
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "654:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "1e2"
																	},
																	"src": "647:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "637:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "612:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 63,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "707:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 64,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "718:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316532",
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "725:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "718:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "707:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 68,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "732:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 69,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "742:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316533",
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "749:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1e3"
																		},
																		"src": "742:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "732:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "707:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "802:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 82,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 80,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 12,
																				"src": "813:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316533",
																				"id": 81,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "820:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "813:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "802:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 84,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "827:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 85,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 12,
																				"src": "838:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316534",
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "845:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "1e4"
																			},
																			"src": "838:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "827:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "802:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 99,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 95,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "898:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 96,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "909:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316534",
																					"id": 97,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "916:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "909:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "898:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 100,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "923:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 101,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "934:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316535",
																					"id": 102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "941:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"src": "934:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "923:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "898:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 115,
																		"nodeType": "Block",
																		"src": "990:131:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d697420612072657175657374",
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1049:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							},
																							"value": "Unable to calculate,Please submit a request"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							}
																						],
																						"id": 111,
																						"name": "ParameterException",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 7,
																						"src": "1012:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1012:97:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 114,
																				"nodeType": "RevertStatement",
																				"src": "1005:104:0"
																			}
																		]
																	},
																	"id": 116,
																	"nodeType": "IfStatement",
																	"src": "894:227:0",
																	"trueBody": {
																		"id": 110,
																		"nodeType": "Block",
																		"src": "946:38:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 108,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 106,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 23,
																						"src": "961:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "316535",
																						"id": 107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "969:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000_by_1",
																							"typeString": "int_const 100000"
																						},
																						"value": "1e5"
																					},
																					"src": "961:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 109,
																				"nodeType": "ExpressionStatement",
																				"src": "961:11:0"
																			}
																		]
																	}
																},
																"id": 117,
																"nodeType": "IfStatement",
																"src": "798:323:0",
																"trueBody": {
																	"id": 94,
																	"nodeType": "Block",
																	"src": "850:38:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 92,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 90,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "865:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "316534",
																					"id": 91,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "873:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "865:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 93,
																			"nodeType": "ExpressionStatement",
																			"src": "865:11:0"
																		}
																	]
																}
															},
															"id": 118,
															"nodeType": "IfStatement",
															"src": "703:418:0",
															"trueBody": {
																"id": 78,
																"nodeType": "Block",
																"src": "754:38:0",
																"statements": [
																	{
																		"expression": {
																			"id": 76,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 74,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "769:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "316533",
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "777:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "769:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 77,
																		"nodeType": "ExpressionStatement",
																		"src": "769:11:0"
																	}
																]
															}
														},
														"id": 119,
														"nodeType": "IfStatement",
														"src": "608:513:0",
														"trueBody": {
															"id": 62,
															"nodeType": "Block",
															"src": "659:38:0",
															"statements": [
																{
																	"expression": {
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 58,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "674:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "316532",
																			"id": 59,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "682:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "674:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 61,
																	"nodeType": "ExpressionStatement",
																	"src": "674:11:0"
																}
															]
														}
													},
													"id": 120,
													"nodeType": "IfStatement",
													"src": "519:602:0",
													"trueBody": {
														"id": 46,
														"nodeType": "Block",
														"src": "564:38:0",
														"statements": [
															{
																"expression": {
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 42,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "579:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "316531",
																		"id": 43,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "587:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "579:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 45,
																"nodeType": "ExpressionStatement",
																"src": "579:11:0"
															}
														]
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "457:664:0",
												"trueBody": {
													"id": 32,
													"nodeType": "Block",
													"src": "477:36:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "492:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "492:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "492:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 122,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "1138:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 21,
												"id": 123,
												"nodeType": "Return",
												"src": "1131:12:0"
											}
										]
									},
									"functionSelector": "4f6ca3ce",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "punishRatio",
									"nameLocation": "363:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_bounts",
												"nameLocation": "383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:17:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "413:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:9:0"
									},
									"scope": 292,
									"src": "354:797:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1228:31:0",
										"statements": [
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1239:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1246:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1239:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1239:12:0"
											}
										]
									},
									"functionSelector": "34fcf437",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 130,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 129,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 324,
												"src": "1218:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1218:9:0"
										}
									],
									"name": "setRate",
									"nameLocation": "1188:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "1204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:15:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1228:0:0"
									},
									"scope": 292,
									"src": "1179:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1389:30:0",
										"statements": [
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "vf_n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1400:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "_vfN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "1407:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1400:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1400:11:0"
											}
										]
									},
									"functionSelector": "31bfb377",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 324,
												"src": "1379:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1379:9:0"
										}
									],
									"name": "setvfN",
									"nameLocation": "1351:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_vfN",
												"nameLocation": "1366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1389:0:0"
									},
									"scope": 292,
									"src": "1342:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "1501:200:0",
										"statements": [
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "_maxV",
														"nameLocation": "1520:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "1512:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 158,
												"nodeType": "VariableDeclarationStatement",
												"src": "1512:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 159,
														"name": "_transNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1540:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 160,
														"name": "vf_n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1556:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 175,
													"nodeType": "Block",
													"src": "1604:67:0",
													"statements": [
														{
															"expression": {
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 167,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1619:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 170,
																			"name": "_transNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "1640:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 171,
																			"name": "vf_n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "1654:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 168,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "1627:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$739_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 648,
																		"src": "1627:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1627:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1619:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "1619:40:0"
														}
													]
												},
												"id": 176,
												"nodeType": "IfStatement",
												"src": "1536:135:0",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "1562:36:0",
													"statements": [
														{
															"expression": {
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 162,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1577:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1585:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1577:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "1577:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 177,
													"name": "_maxV",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 157,
													"src": "1688:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 155,
												"id": 178,
												"nodeType": "Return",
												"src": "1681:12:0"
											}
										]
									},
									"functionSelector": "f2e60202",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMatNumber",
									"nameLocation": "1436:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "_transNumber",
												"nameLocation": "1457:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1449:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:22:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1492:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:9:0"
									},
									"scope": 292,
									"src": "1427:274:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "1853:54:0",
										"statements": [
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1864:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 189,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1887:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3534",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1896:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																},
																"value": "54"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																}
															],
															"id": 188,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "1873:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1873:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1864:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1864:35:0"
											}
										]
									},
									"functionSelector": "6873e8d2",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTrans",
									"nameLocation": "1754:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:17:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1840:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1832:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:16:0"
									},
									"scope": 292,
									"src": "1745:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2026:54:0",
										"statements": [
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2037:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 204,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "2060:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3234",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2069:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																}
															],
															"id": 203,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2046:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2046:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2037:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2037:35:0"
											}
										]
									},
									"functionSelector": "a3cb7c55",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransEnd",
									"nameLocation": "1924:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:17:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2013:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2005:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2004:16:0"
									},
									"scope": 292,
									"src": "1915:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2201:54:0",
										"statements": [
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2212:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 219,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "2235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3330",
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2244:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																}
															],
															"id": 218,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2221:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2221:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2212:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2212:35:0"
											}
										]
									},
									"functionSelector": "a730941d",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransFirst",
									"nameLocation": "2097:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2123:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2115:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:17:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2188:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:16:0"
									},
									"scope": 292,
									"src": "2088:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2372:54:0",
										"statements": [
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "2383:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 234,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "2406:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3336",
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2415:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																},
																"value": "36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																}
															],
															"id": 233,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2392:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2392:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2383:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2383:35:0"
											}
										]
									},
									"functionSelector": "5c830098",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskVf",
									"nameLocation": "2308:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2326:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2318:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:17:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2364:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:16:0"
									},
									"scope": 292,
									"src": "2299:127:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "2591:69:0",
										"statements": [
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "returnNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "2602:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 252,
																	"name": "_number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "2630:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 253,
																	"name": "_ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "2639:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 250,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "2617:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$739_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 633,
																"src": "2617:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2617:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2649:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2617:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2602:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "2602:50:0"
											}
										]
									},
									"functionSelector": "f74f3655",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentage",
									"nameLocation": "2469:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "2491:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2483:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2500:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:33:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "returnNumber",
												"nameLocation": "2572:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2564:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:22:0"
									},
									"scope": 292,
									"src": "2460:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "2802:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 272,
															"name": "_ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2842:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 269,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "2820:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$739_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 648,
														"src": "2820:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 274,
												"nodeType": "Return",
												"src": "2813:36:0"
											}
										]
									},
									"functionSelector": "9ce5c4bf",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPunish",
									"nameLocation": "2697:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2715:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2707:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2723:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:33:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2788:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:9:0"
									},
									"scope": 292,
									"src": "2688:169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "3014:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 287,
															"name": "_deduct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 285,
														"name": "getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3032:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3032:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 289,
												"nodeType": "Return",
												"src": "3025:38:0"
											}
										]
									},
									"functionSelector": "8f861ba7",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeductMoney",
									"nameLocation": "2903:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "_deduct",
												"nameLocation": "2943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2917:34:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "3000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:9:0"
									},
									"scope": 292,
									"src": "2894:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 293,
							"src": "184:2890:0",
							"usedErrors": [
								7
							]
						}
					],
					"src": "33:3043:0"
				},
				"id": 0
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							427
						],
						"Ownable": [
							405
						]
					},
					"id": 406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 406,
							"sourceUnit": 428,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 297,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 427,
										"src": "683:7:1"
									},
									"id": 298,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 296,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405,
								427
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 300,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 299,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 306,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 311,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 310,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 316,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 405,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 319,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 322,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 324,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 330,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 329,
												"id": 331,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 405,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 338,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 405,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1885:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 353,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1895:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:1"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 351,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 324,
												"src": "1875:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:1"
									},
									"scope": 405,
									"src": "1831:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2151:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 370,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2169:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2263:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 379,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2244:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:1"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 366,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 324,
												"src": "2141:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2108:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:1"
									},
									"scope": 405,
									"src": "2081:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2496:124:1",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "2506:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 390,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"id": 392,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:1"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 394,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 395,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2594:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2573:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "2568:45:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2461:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:1"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 405,
									"src": "2433:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 406,
							"src": "654:1968:1",
							"usedErrors": []
						}
					],
					"src": "102:2521:1"
				},
				"id": 1
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							427
						]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 408,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 427,
							"linearizedBaseContracts": [
								427
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 413,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 412,
												"id": 415,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 427,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 422,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 421,
												"id": 424,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 427,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 428,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							739
						]
					},
					"id": 740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 460,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															443
														],
														"declarations": [
															{
																"constant": false,
																"id": 443,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 460,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 442,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 447,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 445,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 449,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 455,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 441,
															"id": 454,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 457,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 458,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 441,
														"id": 459,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 739,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 488,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 475,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 481,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 473,
															"id": 480,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 483,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 484,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 486,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 473,
														"id": 487,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 739,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 530,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 509,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 507,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 501,
															"id": 508,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															511
														],
														"declarations": [
															{
																"constant": false,
																"id": 511,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 530,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 510,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 515,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 513,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 516,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 517,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 519,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 525,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 501,
															"id": 524,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 527,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 528,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 501,
														"id": 529,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 739,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 544,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 551,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 549,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 543,
															"id": 550,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 553,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 554,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 543,
														"id": 557,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 739,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 579,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 571,
															"id": 578,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 581,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 584,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 571,
														"id": 585,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 739,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 599,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 601,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 739,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 614,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 612,
												"id": 616,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 739,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 629,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 627,
												"id": 631,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 739,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 644,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 642,
												"id": 646,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 739,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 658,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 659,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 657,
												"id": 661,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 739,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 686,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 677,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 679,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 675,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 681,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 682,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 683,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 674,
														"id": 685,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 739,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 711,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 704,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 700,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 708,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 699,
														"id": 710,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 739,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 736,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 726,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 729,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 725,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 731,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 732,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 733,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 724,
														"id": 735,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 739,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 740,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			}
		}
	}
}
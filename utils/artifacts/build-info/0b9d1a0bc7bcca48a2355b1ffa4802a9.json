{
	"id": "0b9d1a0bc7bcca48a2355b1ffa4802a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"utils/calculateUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./../contracts/utils/math/SafeMath.sol\";\r\nimport \"./../contracts/access/Ownable.sol\";\r\nlibrary CalculateUtils {\r\n    uint256 constant RATE = 273;\r\n    uint256 constant VF_N = 3;\r\n   // uint256 private TransRate ;\r\n    //获得罚金比率\r\n    function punishRatio(uint256 _bounts) public pure returns(uint256) {\r\n        uint256 ratio;\r\n        if (_bounts <RATE) {\r\n            ratio = 1;\r\n        }else if(_bounts>=RATE&&_bounts<RATE*1e1) {\r\n            ratio = 1e1;\r\n        }else if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){\r\n            ratio = 1e2;\r\n        }else if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {\r\n            ratio = 1e3;\r\n        }else if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {\r\n            ratio = 1e4;\r\n        }else if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {\r\n            ratio = 1e5;\r\n        }else{\r\n            //revert ParameterException(\"Unable to calculate,Please submit a request\");\r\n        }\r\n        return ratio;\r\n    }\r\n    //修改汇率\r\n    // function setRate(uint256 _rate) internal onlyOwner{\r\n    //     rate = _rate;\r\n    // }\r\n    //校对工作量（人） 校对人数= 翻译人数/校对工作量\r\n    // function setvfN(uint256 _vfN) internal onlyOwner {\r\n    //     vfN =_vfN;\r\n    // }\r\n    function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){\r\n        uint256 _maxV;\r\n        if(_transNumber<=VF_N){\r\n                 _maxV = 1;\r\n        }else{\r\n                  _maxV = SafeMath.div(_transNumber, VF_N);\r\n        }\r\n        return _maxV;\r\n    }\r\n    //计算任务赏金-翻译者\r\n    function getTaskTrans(uint256 _bounty) internal pure returns(uint256 _money) {\r\n        uint256 _taskBounty = _getPercentage(_bounty,90);\r\n        _money = _getPercentage(_taskBounty,60);\r\n    }\r\n    //计算任务赏金-校验者\r\n    function getTaskVf(uint256 _bounty) internal pure returns(uint256 _money) {\r\n        uint256 _taskBounty = _getPercentage(_bounty,90);\r\n        _money = _getPercentage(_taskBounty,40);\r\n    }\r\n    //计算任务赏金\r\n    function _getPercentage(uint256 _number, uint256 _ratio) pure internal returns(uint256 returnNumber) {\r\n        returnNumber = SafeMath.mul(_number,_ratio)/100;\r\n    }\r\n    //计算罚金\r\n    function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {\r\n        return SafeMath.div(_bounty,_ratio);\r\n    }\r\n    //计算扣除的赏金\r\n    function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {\r\n        return _getPercentage(_bounty,_deduct);\r\n    }\r\n}"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/calculateUtils.sol": {
				"CalculateUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deduct",
									"type": "uint256"
								}
							],
							"name": "getDeductMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_transNumber",
									"type": "uint256"
								}
							],
							"name": "getMatNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getPunish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounts",
									"type": "uint256"
								}
							],
							"name": "punishRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/calculateUtils.sol\":153:2606  library CalculateUtils {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/calculateUtils.sol\":153:2606  library CalculateUtils {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ca3ce\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8f861ba7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ce5c4bf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2e60202\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"utils/calculateUtils.sol\":310:1029  function punishRatio(uint256 _bounts) public pure returns(uint256) {\r... */\n    tag_2:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":2460:2603  function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":2291:2425  function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":1318:1597  function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){\r... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":310:1029  function punishRatio(uint256 _bounts) public pure returns(uint256) {\r... */\n    tag_9:\n        /* \"utils/calculateUtils.sol\":368:375  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":388:401  uint256 ratio */\n      dup1\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":416:423  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":416:429  _bounts <RATE */\n      lt\n        /* \"utils/calculateUtils.sol\":412:999  if (_bounts <RATE) {\r... */\n      iszero\n      tag_26\n      jumpi\n        /* \"utils/calculateUtils.sol\":454:455  1 */\n      0x01\n        /* \"utils/calculateUtils.sol\":446:455  ratio = 1 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":412:999  if (_bounts <RATE) {\r... */\n      jump(tag_27)\n    tag_26:\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":475:482  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":475:488  _bounts>=RATE */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":475:506  _bounts>=RATE&&_bounts<RATE*1e1 */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":503:506  1e1 */\n      0x0a\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":498:506  RATE*1e1 */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"utils/calculateUtils.sol\":490:497  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":490:506  _bounts<RATE*1e1 */\n      lt\n        /* \"utils/calculateUtils.sol\":475:506  _bounts>=RATE&&_bounts<RATE*1e1 */\n    tag_28:\n        /* \"utils/calculateUtils.sol\":472:999  if(_bounts>=RATE&&_bounts<RATE*1e1) {\r... */\n      iszero\n      tag_31\n      jumpi\n        /* \"utils/calculateUtils.sol\":531:534  1e1 */\n      0x0a\n        /* \"utils/calculateUtils.sol\":523:534  ratio = 1e1 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":472:999  if(_bounts>=RATE&&_bounts<RATE*1e1) {\r... */\n      jump(tag_32)\n    tag_31:\n        /* \"utils/calculateUtils.sol\":569:572  1e1 */\n      0x0a\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":564:572  RATE*1e1 */\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n        /* \"utils/calculateUtils.sol\":554:561  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":554:572  _bounts >=RATE*1e1 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":554:593  _bounts >=RATE*1e1 && _bounts <RATE*1e2 */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":590:593  1e2 */\n      0x64\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":585:593  RATE*1e2 */\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"utils/calculateUtils.sol\":576:583  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":576:593  _bounts <RATE*1e2 */\n      lt\n        /* \"utils/calculateUtils.sol\":554:593  _bounts >=RATE*1e1 && _bounts <RATE*1e2 */\n    tag_34:\n        /* \"utils/calculateUtils.sol\":551:999  if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"utils/calculateUtils.sol\":617:620  1e2 */\n      0x64\n        /* \"utils/calculateUtils.sol\":609:620  ratio = 1e2 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":551:999  if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){\r... */\n      jump(tag_37)\n    tag_36:\n        /* \"utils/calculateUtils.sol\":655:658  1e2 */\n      0x64\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":650:658  RATE*1e2 */\n      tag_38\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n        /* \"utils/calculateUtils.sol\":640:647  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":640:658  _bounts >=RATE*1e2 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":640:680  _bounts >=RATE*1e2 && _bounts < RATE*1e3 */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":677:680  1e3 */\n      0x03e8\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":672:680  RATE*1e3 */\n      tag_40\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"utils/calculateUtils.sol\":662:669  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":662:680  _bounts < RATE*1e3 */\n      lt\n        /* \"utils/calculateUtils.sol\":640:680  _bounts >=RATE*1e2 && _bounts < RATE*1e3 */\n    tag_39:\n        /* \"utils/calculateUtils.sol\":637:999  if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {\r... */\n      iszero\n      tag_41\n      jumpi\n        /* \"utils/calculateUtils.sol\":705:708  1e3 */\n      0x03e8\n        /* \"utils/calculateUtils.sol\":697:708  ratio = 1e3 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":637:999  if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {\r... */\n      jump(tag_42)\n    tag_41:\n        /* \"utils/calculateUtils.sol\":742:745  1e3 */\n      0x03e8\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":737:745  RATE*1e3 */\n      tag_43\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"utils/calculateUtils.sol\":728:735  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":728:745  _bounts>=RATE*1e3 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":728:767  _bounts>=RATE*1e3 && _bounts <=RATE*1e4 */\n      dup1\n      iszero\n      tag_44\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":764:767  1e4 */\n      0x2710\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":759:767  RATE*1e4 */\n      tag_45\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_45:\n        /* \"utils/calculateUtils.sol\":749:756  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":749:767  _bounts <=RATE*1e4 */\n      gt\n      iszero\n        /* \"utils/calculateUtils.sol\":728:767  _bounts>=RATE*1e3 && _bounts <=RATE*1e4 */\n    tag_44:\n        /* \"utils/calculateUtils.sol\":725:999  if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {\r... */\n      iszero\n      tag_46\n      jumpi\n        /* \"utils/calculateUtils.sol\":792:795  1e4 */\n      0x2710\n        /* \"utils/calculateUtils.sol\":784:795  ratio = 1e4 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":725:999  if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {\r... */\n      jump(tag_47)\n    tag_46:\n        /* \"utils/calculateUtils.sol\":829:832  1e4 */\n      0x2710\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":824:832  RATE*1e4 */\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n        /* \"utils/calculateUtils.sol\":815:822  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":815:832  _bounts>=RATE*1e4 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":815:854  _bounts>=RATE*1e4 && _bounts <=RATE*1e5 */\n      dup1\n      iszero\n      tag_49\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":851:854  1e5 */\n      0x0186a0\n        /* \"utils/calculateUtils.sol\":207:210  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":846:854  RATE*1e5 */\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n        /* \"utils/calculateUtils.sol\":836:843  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":836:854  _bounts <=RATE*1e5 */\n      gt\n      iszero\n        /* \"utils/calculateUtils.sol\":815:854  _bounts>=RATE*1e4 && _bounts <=RATE*1e5 */\n    tag_49:\n        /* \"utils/calculateUtils.sol\":812:999  if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {\r... */\n      iszero\n      tag_51\n      jumpi\n        /* \"utils/calculateUtils.sol\":879:882  1e5 */\n      0x0186a0\n        /* \"utils/calculateUtils.sol\":871:882  ratio = 1e5 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":812:999  if(_bounts>=RATE*1e4 && _bounts <=RATE*1e5) {\r... */\n      jump(tag_52)\n    tag_51:\n    tag_52:\n        /* \"utils/calculateUtils.sol\":725:999  if(_bounts>=RATE*1e3 && _bounts <=RATE*1e4) {\r... */\n    tag_47:\n        /* \"utils/calculateUtils.sol\":637:999  if(_bounts >=RATE*1e2 && _bounts < RATE*1e3) {\r... */\n    tag_42:\n        /* \"utils/calculateUtils.sol\":551:999  if(_bounts >=RATE*1e1 && _bounts <RATE*1e2){\r... */\n    tag_37:\n        /* \"utils/calculateUtils.sol\":472:999  if(_bounts>=RATE&&_bounts<RATE*1e1) {\r... */\n    tag_32:\n        /* \"utils/calculateUtils.sol\":412:999  if (_bounts <RATE) {\r... */\n    tag_27:\n        /* \"utils/calculateUtils.sol\":1016:1021  ratio */\n      dup1\n        /* \"utils/calculateUtils.sol\":1009:1021  return ratio */\n      swap2\n      pop\n      pop\n        /* \"utils/calculateUtils.sol\":310:1029  function punishRatio(uint256 _bounts) public pure returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":2460:2603  function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {\r... */\n    tag_15:\n        /* \"utils/calculateUtils.sol\":2537:2544  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":2564:2595  _getPercentage(_bounty,_deduct) */\n      tag_54\n        /* \"utils/calculateUtils.sol\":2579:2586  _bounty */\n      dup4\n        /* \"utils/calculateUtils.sol\":2587:2594  _deduct */\n      dup4\n        /* \"utils/calculateUtils.sol\":2564:2578  _getPercentage */\n      tag_55\n        /* \"utils/calculateUtils.sol\":2564:2595  _getPercentage(_bounty,_deduct) */\n      jump\t// in\n    tag_54:\n        /* \"utils/calculateUtils.sol\":2557:2595  return _getPercentage(_bounty,_deduct) */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":2460:2603  function getDeductMoney(uint256 _bounty,uint256 _deduct) public pure returns(uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":2291:2425  function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {\r... */\n    tag_19:\n        /* \"utils/calculateUtils.sol\":2362:2369  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":2389:2417  SafeMath.div(_bounty,_ratio) */\n      tag_57\n        /* \"utils/calculateUtils.sol\":2402:2409  _bounty */\n      dup3\n        /* \"utils/calculateUtils.sol\":2410:2416  _ratio */\n      dup5\n        /* \"utils/calculateUtils.sol\":2389:2401  SafeMath.div */\n      tag_58\n        /* \"utils/calculateUtils.sol\":2389:2417  SafeMath.div(_bounty,_ratio) */\n      jump\t// in\n    tag_57:\n        /* \"utils/calculateUtils.sol\":2382:2417  return SafeMath.div(_bounty,_ratio) */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":2291:2425  function getPunish(uint256 _ratio,uint256 _bounty) public pure returns(uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":1318:1597  function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){\r... */\n    tag_23:\n        /* \"utils/calculateUtils.sol\":1383:1390  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":1403:1416  uint256 _maxV */\n      dup1\n        /* \"utils/calculateUtils.sol\":241:242  3 */\n      0x03\n        /* \"utils/calculateUtils.sol\":1430:1442  _transNumber */\n      dup4\n        /* \"utils/calculateUtils.sol\":1430:1448  _transNumber<=VF_N */\n      gt\n        /* \"utils/calculateUtils.sol\":1427:1567  if(_transNumber<=VF_N){\r... */\n      tag_60\n      jumpi\n        /* \"utils/calculateUtils.sol\":1477:1478  1 */\n      0x01\n        /* \"utils/calculateUtils.sol\":1469:1478  _maxV = 1 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":1427:1567  if(_transNumber<=VF_N){\r... */\n      jump(tag_61)\n    tag_60:\n        /* \"utils/calculateUtils.sol\":1523:1555  SafeMath.div(_transNumber, VF_N) */\n      tag_62\n        /* \"utils/calculateUtils.sol\":1536:1548  _transNumber */\n      dup4\n        /* \"utils/calculateUtils.sol\":241:242  3 */\n      0x03\n        /* \"utils/calculateUtils.sol\":1523:1535  SafeMath.div */\n      tag_58\n        /* \"utils/calculateUtils.sol\":1523:1555  SafeMath.div(_transNumber, VF_N) */\n      jump\t// in\n    tag_62:\n        /* \"utils/calculateUtils.sol\":1515:1555  _maxV = SafeMath.div(_transNumber, VF_N) */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":1427:1567  if(_transNumber<=VF_N){\r... */\n    tag_61:\n        /* \"utils/calculateUtils.sol\":1584:1589  _maxV */\n      dup1\n        /* \"utils/calculateUtils.sol\":1577:1589  return _maxV */\n      swap2\n      pop\n      pop\n        /* \"utils/calculateUtils.sol\":1318:1597  function getMatNumber(uint256 _transNumber)external pure returns(uint256 ){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":2098:2265  function _getPercentage(uint256 _number, uint256 _ratio) pure internal returns(uint256 returnNumber) {\r... */\n    tag_55:\n        /* \"utils/calculateUtils.sol\":2177:2197  uint256 returnNumber */\n      0x00\n        /* \"utils/calculateUtils.sol\":2254:2257  100 */\n      0x64\n        /* \"utils/calculateUtils.sol\":2225:2253  SafeMath.mul(_number,_ratio) */\n      tag_64\n        /* \"utils/calculateUtils.sol\":2238:2245  _number */\n      dup5\n        /* \"utils/calculateUtils.sol\":2246:2252  _ratio */\n      dup5\n        /* \"utils/calculateUtils.sol\":2225:2237  SafeMath.mul */\n      tag_65\n        /* \"utils/calculateUtils.sol\":2225:2253  SafeMath.mul(_number,_ratio) */\n      jump\t// in\n    tag_64:\n        /* \"utils/calculateUtils.sol\":2225:2257  SafeMath.mul(_number,_ratio)/100 */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"utils/calculateUtils.sol\":2210:2257  returnNumber = SafeMath.mul(_number,_ratio)/100 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":2098:2265  function _getPercentage(uint256 _number, uint256 _ratio) pure internal returns(uint256 returnNumber) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_58:\n        /* \"contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_69\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_69:\n        /* \"contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_65:\n        /* \"contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_71\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_71:\n        /* \"contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_73:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_75\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":228:347   */\n    tag_78:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_81\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_73\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:961   */\n    tag_14:\n        /* \"#utility.yul\":555:561   */\n      0x00\n        /* \"#utility.yul\":563:569   */\n      dup1\n        /* \"#utility.yul\":612:614   */\n      0x40\n        /* \"#utility.yul\":600:609   */\n      dup4\n        /* \"#utility.yul\":591:598   */\n      dup6\n        /* \"#utility.yul\":587:610   */\n      sub\n        /* \"#utility.yul\":583:615   */\n      slt\n        /* \"#utility.yul\":580:699   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":618:697   */\n      tag_84\n      tag_80\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":580:699   */\n    tag_83:\n        /* \"#utility.yul\":738:739   */\n      0x00\n        /* \"#utility.yul\":763:816   */\n      tag_85\n        /* \"#utility.yul\":808:815   */\n      dup6\n        /* \"#utility.yul\":799:805   */\n      dup3\n        /* \"#utility.yul\":788:797   */\n      dup7\n        /* \"#utility.yul\":784:806   */\n      add\n        /* \"#utility.yul\":763:816   */\n      tag_73\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":753:816   */\n      swap3\n      pop\n        /* \"#utility.yul\":709:826   */\n      pop\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":891:944   */\n      tag_86\n        /* \"#utility.yul\":936:943   */\n      dup6\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup7\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_73\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":836:954   */\n      pop\n        /* \"#utility.yul\":487:961   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1093   */\n    tag_87:\n        /* \"#utility.yul\":1062:1086   */\n      tag_89\n        /* \"#utility.yul\":1080:1085   */\n      dup2\n        /* \"#utility.yul\":1062:1086   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1057:1060   */\n      dup3\n        /* \"#utility.yul\":1050:1087   */\n      mstore\n        /* \"#utility.yul\":967:1093   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1099:1337   */\n    tag_11:\n        /* \"#utility.yul\":1200:1204   */\n      0x00\n        /* \"#utility.yul\":1238:1240   */\n      0x20\n        /* \"#utility.yul\":1227:1236   */\n      dup3\n        /* \"#utility.yul\":1223:1241   */\n      add\n        /* \"#utility.yul\":1215:1241   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1330   */\n      tag_92\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1316:1325   */\n      dup4\n        /* \"#utility.yul\":1312:1329   */\n      add\n        /* \"#utility.yul\":1303:1309   */\n      dup5\n        /* \"#utility.yul\":1251:1330   */\n      tag_87\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1099:1337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1424:1609   */\n    tag_67:\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1481:1501   */\n      tag_96\n        /* \"#utility.yul\":1499:1500   */\n      dup3\n        /* \"#utility.yul\":1481:1501   */\n      tag_90\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1476:1501   */\n      swap2\n      pop\n        /* \"#utility.yul\":1515:1535   */\n      tag_97\n        /* \"#utility.yul\":1533:1534   */\n      dup4\n        /* \"#utility.yul\":1515:1535   */\n      tag_90\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1510:1535   */\n      swap3\n      pop\n        /* \"#utility.yul\":1554:1555   */\n      dup3\n        /* \"#utility.yul\":1544:1579   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1559:1577   */\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1544:1579   */\n    tag_98:\n        /* \"#utility.yul\":1601:1602   */\n      dup3\n        /* \"#utility.yul\":1598:1599   */\n      dup3\n        /* \"#utility.yul\":1594:1603   */\n      div\n        /* \"#utility.yul\":1589:1603   */\n      swap1\n      pop\n        /* \"#utility.yul\":1424:1609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1615:1963   */\n    tag_30:\n        /* \"#utility.yul\":1655:1662   */\n      0x00\n        /* \"#utility.yul\":1678:1698   */\n      tag_102\n        /* \"#utility.yul\":1696:1697   */\n      dup3\n        /* \"#utility.yul\":1678:1698   */\n      tag_90\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1673:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1712:1732   */\n      tag_103\n        /* \"#utility.yul\":1730:1731   */\n      dup4\n        /* \"#utility.yul\":1712:1732   */\n      tag_90\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1707:1732   */\n      swap3\n      pop\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1832:1898   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1828:1902   */\n      div\n        /* \"#utility.yul\":1825:1826   */\n      dup4\n        /* \"#utility.yul\":1822:1903   */\n      gt\n        /* \"#utility.yul\":1817:1818   */\n      dup3\n        /* \"#utility.yul\":1810:1819   */\n      iszero\n        /* \"#utility.yul\":1803:1820   */\n      iszero\n        /* \"#utility.yul\":1799:1904   */\n      and\n        /* \"#utility.yul\":1796:1927   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1907:1925   */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1796:1927   */\n    tag_104:\n        /* \"#utility.yul\":1955:1956   */\n      dup3\n        /* \"#utility.yul\":1952:1953   */\n      dup3\n        /* \"#utility.yul\":1948:1957   */\n      mul\n        /* \"#utility.yul\":1937:1957   */\n      swap1\n      pop\n        /* \"#utility.yul\":1615:1963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1969:2046   */\n    tag_90:\n        /* \"#utility.yul\":2006:2013   */\n      0x00\n        /* \"#utility.yul\":2035:2040   */\n      dup2\n        /* \"#utility.yul\":2024:2040   */\n      swap1\n      pop\n        /* \"#utility.yul\":1969:2046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2232   */\n    tag_106:\n        /* \"#utility.yul\":2100:2177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2097:2098   */\n      0x00\n        /* \"#utility.yul\":2090:2178   */\n      mstore\n        /* \"#utility.yul\":2197:2201   */\n      0x11\n        /* \"#utility.yul\":2194:2195   */\n      0x04\n        /* \"#utility.yul\":2187:2202   */\n      mstore\n        /* \"#utility.yul\":2221:2225   */\n      0x24\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2211:2226   */\n      revert\n        /* \"#utility.yul\":2238:2418   */\n    tag_100:\n        /* \"#utility.yul\":2286:2363   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2283:2284   */\n      0x00\n        /* \"#utility.yul\":2276:2364   */\n      mstore\n        /* \"#utility.yul\":2383:2387   */\n      0x12\n        /* \"#utility.yul\":2380:2381   */\n      0x04\n        /* \"#utility.yul\":2373:2388   */\n      mstore\n        /* \"#utility.yul\":2407:2411   */\n      0x24\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2397:2412   */\n      revert\n        /* \"#utility.yul\":2547:2664   */\n    tag_80:\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2653:2654   */\n      dup1\n        /* \"#utility.yul\":2646:2658   */\n      revert\n        /* \"#utility.yul\":2670:2792   */\n    tag_76:\n        /* \"#utility.yul\":2743:2767   */\n      tag_114\n        /* \"#utility.yul\":2761:2766   */\n      dup2\n        /* \"#utility.yul\":2743:2767   */\n      tag_90\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2736:2741   */\n      dup2\n        /* \"#utility.yul\":2733:2768   */\n      eq\n        /* \"#utility.yul\":2723:2786   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2782:2783   */\n      0x00\n        /* \"#utility.yul\":2779:2780   */\n      dup1\n        /* \"#utility.yul\":2772:2784   */\n      revert\n        /* \"#utility.yul\":2723:2786   */\n    tag_115:\n        /* \"#utility.yul\":2670:2792   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122057bc34e4d62ad6607f5f896eaa700cf8765b5d577645c03664bd7a0e3d62852764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6104ed610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6ca3ce1461005b5780638f861ba71461008b5780639ce5c4bf146100bb578063f2e60202146100eb575b600080fd5b61007560048036038101906100709190610311565b61011b565b604051610082919061038d565b60405180910390f35b6100a560048036038101906100a0919061033e565b61025d565b6040516100b2919061038d565b60405180910390f35b6100d560048036038101906100d0919061033e565b610271565b6040516100e2919061038d565b60405180910390f35b61010560048036038101906101009190610311565b610285565b604051610112919061038d565b60405180910390f35b6000806101118310156101315760019050610254565b61011183101580156101505750600a61011161014d91906103d9565b83105b1561015e57600a9050610253565b600a61011161016d91906103d9565b83101580156101895750606461011161018691906103d9565b83105b156101975760649050610252565b60646101116101a691906103d9565b83101580156101c357506103e86101116101c091906103d9565b83105b156101d2576103e89050610251565b6103e86101116101e291906103d9565b831015801561020057506127106101116101fc91906103d9565b8311155b1561020f576127109050610250565b61271061011161021f91906103d9565b831015801561023e5750620186a061011161023a91906103d9565b8311155b1561024e57620186a0905061024f565b5b5b5b5b5b5b80915050919050565b600061026983836102b0565b905092915050565b600061027d82846102d0565b905092915050565b6000806003831161029957600190506102a7565b6102a48360036102d0565b90505b80915050919050565b600060646102be84846102e6565b6102c891906103a8565b905092915050565b600081836102de91906103a8565b905092915050565b600081836102f491906103d9565b905092915050565b60008135905061030b816104a0565b92915050565b6000602082840312156103275761032661049b565b5b6000610335848285016102fc565b91505092915050565b600080604083850312156103555761035461049b565b5b6000610363858286016102fc565b9250506020610374858286016102fc565b9150509250929050565b61038781610433565b82525050565b60006020820190506103a2600083018461037e565b92915050565b60006103b382610433565b91506103be83610433565b9250826103ce576103cd61046c565b5b828204905092915050565b60006103e482610433565b91506103ef83610433565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104285761042761043d565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6104a981610433565b81146104b457600080fd5b5056fea264697066735822122057bc34e4d62ad6607f5f896eaa700cf8765b5d577645c03664bd7a0e3d62852764736f6c63430008070033",
							"opcodes": "PUSH2 0x4ED PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x254 JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI POP PUSH1 0xA PUSH2 0x111 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x15E JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x253 JUMP JUMPDEST PUSH1 0xA PUSH2 0x111 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI POP PUSH1 0x64 PUSH2 0x111 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x197 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x252 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x111 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI POP PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1D2 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x251 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH2 0x2710 PUSH2 0x111 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x20F JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x250 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x111 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI POP PUSH3 0x186A0 PUSH2 0x111 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x24F JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269 DUP4 DUP4 PUSH2 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D DUP3 DUP5 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x299 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x2A4 DUP4 PUSH1 0x3 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2BE DUP5 DUP5 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x4A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x49B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x335 DUP5 DUP3 DUP6 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355 JUMPI PUSH2 0x354 PUSH2 0x49B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x363 DUP6 DUP3 DUP7 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x374 DUP6 DUP3 DUP7 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x387 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3CE JUMPI PUSH2 0x3CD PUSH2 0x46C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4 DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x428 JUMPI PUSH2 0x427 PUSH2 0x43D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A9 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xBC CALLVALUE 0xE4 0xD6 0x2A 0xD6 PUSH1 0x7F 0x5F DUP10 PUSH15 0xAA700CF8765B5D577645C03664BD7A 0xE RETURNDATASIZE PUSH3 0x852764 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "153:2453:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getPercentage_657": {
									"entryPoint": 688,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_355": {
									"entryPoint": 720,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDeductMoney_688": {
									"entryPoint": 605,
									"id": 688,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMatNumber_593": {
									"entryPoint": 645,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPunish_673": {
									"entryPoint": 625,
									"id": 673,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_340": {
									"entryPoint": 742,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@punishRatio_562": {
									"entryPoint": 283,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2795:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:4"
															},
															"nodeType": "YulIf",
															"src": "228:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:4",
														"type": ""
													}
												],
												"src": "152:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "570:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "616:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "618:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "618:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "618:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "591:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "583:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:32:4"
															},
															"nodeType": "YulIf",
															"src": "580:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "709:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "724:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "728:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "753:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "788:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "808:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "753:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "836:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "851:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "855:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "543:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "555:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "563:6:4",
														"type": ""
													}
												],
												"src": "487:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1057:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1080:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1062:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1028:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1035:3:4",
														"type": ""
													}
												],
												"src": "967:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1205:132:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1215:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1227:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1223:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1215:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1303:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1316:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1327:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1312:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1312:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1251:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:79:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1200:4:4",
														"type": ""
													}
												],
												"src": "1099:238:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1383:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1393:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1403:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1376:6:4",
														"type": ""
													}
												],
												"src": "1343:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1466:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1476:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1499:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1481:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1476:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1510:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1533:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1515:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1510:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1557:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1559:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1554:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:9:4"
															},
															"nodeType": "YulIf",
															"src": "1544:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1589:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1598:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1601:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1589:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1455:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1458:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1464:1:4",
														"type": ""
													}
												],
												"src": "1424:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1663:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1673:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1696:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1678:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1673:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1730:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1712:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1707:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1907:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1817:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1810:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1810:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1803:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1825:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1832:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1900:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1822:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:105:4"
															},
															"nodeType": "YulIf",
															"src": "1796:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1937:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1952:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1955:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1948:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1937:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1646:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1649:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1655:7:4",
														"type": ""
													}
												],
												"src": "1615:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2024:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2035:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2024:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2006:7:4",
														"type": ""
													}
												],
												"src": "1969:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2100:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2194:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2187:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2221:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2211:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2052:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2266:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2283:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2380:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2383:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2373:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2407:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2397:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2238:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2513:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2530:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2523:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2424:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2636:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2653:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2646:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2646:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2547:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2713:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2770:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2779:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2782:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2772:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2772:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2772:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2736:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2761:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2743:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2743:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2733:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:43:4"
															},
															"nodeType": "YulIf",
															"src": "2723:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2706:5:4",
														"type": ""
													}
												],
												"src": "2670:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6ca3ce1461005b5780638f861ba71461008b5780639ce5c4bf146100bb578063f2e60202146100eb575b600080fd5b61007560048036038101906100709190610311565b61011b565b604051610082919061038d565b60405180910390f35b6100a560048036038101906100a0919061033e565b61025d565b6040516100b2919061038d565b60405180910390f35b6100d560048036038101906100d0919061033e565b610271565b6040516100e2919061038d565b60405180910390f35b61010560048036038101906101009190610311565b610285565b604051610112919061038d565b60405180910390f35b6000806101118310156101315760019050610254565b61011183101580156101505750600a61011161014d91906103d9565b83105b1561015e57600a9050610253565b600a61011161016d91906103d9565b83101580156101895750606461011161018691906103d9565b83105b156101975760649050610252565b60646101116101a691906103d9565b83101580156101c357506103e86101116101c091906103d9565b83105b156101d2576103e89050610251565b6103e86101116101e291906103d9565b831015801561020057506127106101116101fc91906103d9565b8311155b1561020f576127109050610250565b61271061011161021f91906103d9565b831015801561023e5750620186a061011161023a91906103d9565b8311155b1561024e57620186a0905061024f565b5b5b5b5b5b5b80915050919050565b600061026983836102b0565b905092915050565b600061027d82846102d0565b905092915050565b6000806003831161029957600190506102a7565b6102a48360036102d0565b90505b80915050919050565b600060646102be84846102e6565b6102c891906103a8565b905092915050565b600081836102de91906103a8565b905092915050565b600081836102f491906103d9565b905092915050565b60008135905061030b816104a0565b92915050565b6000602082840312156103275761032661049b565b5b6000610335848285016102fc565b91505092915050565b600080604083850312156103555761035461049b565b5b6000610363858286016102fc565b9250506020610374858286016102fc565b9150509250929050565b61038781610433565b82525050565b60006020820190506103a2600083018461037e565b92915050565b60006103b382610433565b91506103be83610433565b9250826103ce576103cd61046c565b5b828204905092915050565b60006103e482610433565b91506103ef83610433565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104285761042761043d565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6104a981610433565b81146104b457600080fd5b5056fea264697066735822122057bc34e4d62ad6607f5f896eaa700cf8765b5d577645c03664bd7a0e3d62852764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x254 JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI POP PUSH1 0xA PUSH2 0x111 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x15E JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x253 JUMP JUMPDEST PUSH1 0xA PUSH2 0x111 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI POP PUSH1 0x64 PUSH2 0x111 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x197 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x252 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x111 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI POP PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1D2 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x251 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH2 0x2710 PUSH2 0x111 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x20F JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x250 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x111 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI POP PUSH3 0x186A0 PUSH2 0x111 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x24F JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269 DUP4 DUP4 PUSH2 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D DUP3 DUP5 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x299 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x2A4 DUP4 PUSH1 0x3 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2BE DUP5 DUP5 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x4A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x49B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x335 DUP5 DUP3 DUP6 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355 JUMPI PUSH2 0x354 PUSH2 0x49B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x363 DUP6 DUP3 DUP7 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x374 DUP6 DUP3 DUP7 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x387 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3CE JUMPI PUSH2 0x3CD PUSH2 0x46C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4 DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x428 JUMPI PUSH2 0x427 PUSH2 0x43D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A9 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xBC CALLVALUE 0xE4 0xD6 0x2A 0xD6 PUSH1 0x7F 0x5F DUP10 PUSH15 0xAA700CF8765B5D577645C03664BD7A 0xE RETURNDATASIZE PUSH3 0x852764 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "153:2453:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:719;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2460:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2291:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;310:719;368:7;388:13;207:3;416:7;:13;412:587;;;454:1;446:9;;412:587;;;207:3;475:7;:13;;:31;;;;;503:3;207;498:8;;;;:::i;:::-;490:7;:16;475:31;472:527;;;531:3;523:11;;472:527;;;569:3;207;564:8;;;;:::i;:::-;554:7;:18;;:39;;;;;590:3;207;585:8;;;;:::i;:::-;576:7;:17;554:39;551:448;;;617:3;609:11;;551:448;;;655:3;207;650:8;;;;:::i;:::-;640:7;:18;;:40;;;;;677:3;207;672:8;;;;:::i;:::-;662:7;:18;640:40;637:362;;;705:3;697:11;;637:362;;;742:3;207;737:8;;;;:::i;:::-;728:7;:17;;:39;;;;;764:3;207;759:8;;;;:::i;:::-;749:7;:18;;728:39;725:274;;;792:3;784:11;;725:274;;;829:3;207;824:8;;;;:::i;:::-;815:7;:17;;:39;;;;;851:3;207;846:8;;;;:::i;:::-;836:7;:18;;815:39;812:187;;;879:3;871:11;;812:187;;;;725:274;637:362;551:448;472:527;412:587;1016:5;1009:12;;;310:719;;;:::o;2460:143::-;2537:7;2564:31;2579:7;2587;2564:14;:31::i;:::-;2557:38;;2460:143;;;;:::o;2291:134::-;2362:7;2389:28;2402:7;2410:6;2389:12;:28::i;:::-;2382:35;;2291:134;;;;:::o;1318:279::-;1383:7;1403:13;241:1;1430:12;:18;1427:140;;1477:1;1469:9;;1427:140;;;1523:32;1536:12;241:1;1523:12;:32::i;:::-;1515:40;;1427:140;1584:5;1577:12;;;1318:279;;;:::o;2098:167::-;2177:20;2254:3;2225:28;2238:7;2246:6;2225:12;:28::i;:::-;:32;;;;:::i;:::-;2210:47;;2098:167;;;;:::o;3850:96:2:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:474::-;555:6;563;612:2;600:9;591:7;587:23;583:32;580:119;;;618:79;;:::i;:::-;580:119;738:1;763:53;808:7;799:6;788:9;784:22;763:53;:::i;:::-;753:63;;709:117;865:2;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;836:118;487:474;;;;;:::o;967:126::-;1062:24;1080:5;1062:24;:::i;:::-;1057:3;1050:37;967:126;;:::o;1099:238::-;1200:4;1238:2;1227:9;1223:18;1215:26;;1251:79;1327:1;1316:9;1312:17;1303:6;1251:79;:::i;:::-;1099:238;;;;:::o;1424:185::-;1464:1;1481:20;1499:1;1481:20;:::i;:::-;1476:25;;1515:20;1533:1;1515:20;:::i;:::-;1510:25;;1554:1;1544:35;;1559:18;;:::i;:::-;1544:35;1601:1;1598;1594:9;1589:14;;1424:185;;;;:::o;1615:348::-;1655:7;1678:20;1696:1;1678:20;:::i;:::-;1673:25;;1712:20;1730:1;1712:20;:::i;:::-;1707:25;;1900:1;1832:66;1828:74;1825:1;1822:81;1817:1;1810:9;1803:17;1799:105;1796:131;;;1907:18;;:::i;:::-;1796:131;1955:1;1952;1948:9;1937:20;;1615:348;;;;:::o;1969:77::-;2006:7;2035:5;2024:16;;1969:77;;;:::o;2052:180::-;2100:77;2097:1;2090:88;2197:4;2194:1;2187:15;2221:4;2218:1;2211:15;2238:180;2286:77;2283:1;2276:88;2383:4;2380:1;2373:15;2407:4;2404:1;2397:15;2547:117;2656:1;2653;2646:12;2670:122;2743:24;2761:5;2743:24;:::i;:::-;2736:5;2733:35;2723:63;;2782:1;2779;2772:12;2723:63;2670:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "252200",
								"executionCost": "319",
								"totalCost": "252519"
							},
							"external": {
								"getDeductMoney(uint256,uint256)": "infinite",
								"getMatNumber(uint256)": "infinite",
								"getPunish(uint256,uint256)": "infinite",
								"punishRatio(uint256)": "infinite"
							},
							"internal": {
								"_getPercentage(uint256,uint256)": "infinite",
								"getTaskTrans(uint256)": "infinite",
								"getTaskVf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 153,
									"end": 2606,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057bc34e4d62ad6607f5f896eaa700cf8765b5d577645c03664bd7a0e3d62852764736f6c63430008070033",
									".code": [
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "4F6CA3CE"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "8F861BA7"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "9CE5C4BF"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "F2E60202"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 153,
											"end": 2606,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 416,
											"end": 423,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 416,
											"end": 429,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 412,
											"end": 999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 412,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 412,
											"end": 999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 446,
											"end": 455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 412,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 412,
											"end": 999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 412,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 412,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 475,
											"end": 482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 475,
											"end": 488,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 475,
											"end": 488,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 475,
											"end": 506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 475,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 475,
											"end": 506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 503,
											"end": 506,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 498,
											"end": 506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 498,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 497,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 490,
											"end": 506,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 475,
											"end": 506,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 475,
											"end": 506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 472,
											"end": 999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 472,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 472,
											"end": 999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 523,
											"end": 534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 472,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 472,
											"end": 999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 472,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 472,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 572,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 564,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 564,
											"end": 572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 564,
											"end": 572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 564,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 564,
											"end": 572,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 564,
											"end": 572,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 564,
											"end": 572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 554,
											"end": 572,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 554,
											"end": 572,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 554,
											"end": 593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 554,
											"end": 593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 554,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 554,
											"end": 593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 585,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 585,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 585,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 585,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 585,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 585,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 576,
											"end": 583,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 576,
											"end": 593,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 554,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 551,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 551,
											"end": 999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 617,
											"end": 620,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 609,
											"end": 620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 609,
											"end": 620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 551,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 551,
											"end": 999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 551,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 551,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 655,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 650,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 650,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 650,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 650,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 640,
											"end": 647,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 640,
											"end": 658,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 640,
											"end": 658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 640,
											"end": 680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 680,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 640,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 640,
											"end": 680,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 640,
											"end": 680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 677,
											"end": 680,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 672,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 672,
											"end": 680,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 680,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 669,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 662,
											"end": 680,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 640,
											"end": 680,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 640,
											"end": 680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 637,
											"end": 999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 637,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 637,
											"end": 999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 705,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 697,
											"end": 708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 697,
											"end": 708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 637,
											"end": 999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 637,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 745,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 737,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 737,
											"end": 745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 737,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 737,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 737,
											"end": 745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 745,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 737,
											"end": 745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 728,
											"end": 735,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 728,
											"end": 767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 767,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 728,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 728,
											"end": 767,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 728,
											"end": 767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 764,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 759,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 759,
											"end": 767,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 759,
											"end": 767,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 767,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 759,
											"end": 767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 756,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 749,
											"end": 767,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 749,
											"end": 767,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 728,
											"end": 767,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 728,
											"end": 767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 725,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 725,
											"end": 999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 792,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 784,
											"end": 795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 725,
											"end": 999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 725,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 824,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 824,
											"end": 832,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 824,
											"end": 832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 832,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 832,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 824,
											"end": 832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 815,
											"end": 832,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 815,
											"end": 832,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 815,
											"end": 854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 815,
											"end": 854,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 815,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 815,
											"end": 854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 815,
											"end": 854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 851,
											"end": 854,
											"name": "PUSH",
											"source": 3,
											"value": "186A0"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "PUSH",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 846,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 846,
											"end": 854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 846,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 846,
											"end": 854,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 854,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 836,
											"end": 843,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 836,
											"end": 854,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 836,
											"end": 854,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 815,
											"end": 854,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 815,
											"end": 854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 812,
											"end": 999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 812,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 812,
											"end": 999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 879,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "186A0"
										},
										{
											"begin": 871,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 871,
											"end": 882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 812,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 812,
											"end": 999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 812,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 812,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 812,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 812,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 725,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 637,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 637,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 551,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 472,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 472,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 412,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 412,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 1029,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2579,
											"end": 2586,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2603,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2402,
											"end": 2409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2425,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1536,
											"end": 1548,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1523,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1515,
											"end": 1555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1515,
											"end": 1555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1427,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2252,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 555,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 612,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 591,
											"end": 598,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 587,
											"end": 610,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 583,
											"end": 615,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 580,
											"end": 699,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 580,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 580,
											"end": 699,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 738,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 788,
											"end": 797,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 784,
											"end": 806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 753,
											"end": 816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 753,
											"end": 816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 709,
											"end": 826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 836,
											"end": 954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 967,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1080,
											"end": 1085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1062,
											"end": 1086,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1086,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1062,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1093,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1240,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1337,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1535,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1559,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1559,
											"end": 1577,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1559,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1603,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1609,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1730,
											"end": 1731,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1732,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1902,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 1903,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1904,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1927,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1796,
											"end": 1927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1927,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1796,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1963,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2232,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2052,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2178,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2225,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2418,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2412,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2664,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2547,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2670,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2761,
											"end": 2766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 2768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2723,
											"end": 2786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2784,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2786,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2723,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2792,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getDeductMoney(uint256,uint256)": "8f861ba7",
							"getMatNumber(uint256)": "f2e60202",
							"getPunish(uint256,uint256)": "9ce5c4bf",
							"punishRatio(uint256)": "4f6ca3ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deduct\",\"type\":\"uint256\"}],\"name\":\"getDeductMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transNumber\",\"type\":\"uint256\"}],\"name\":\"getMatNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getPunish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounts\",\"type\":\"uint256\"}],\"name\":\"punishRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/calculateUtils.sol\":\"CalculateUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"utils/calculateUtils.sol\":{\"keccak256\":\"0x1b5a2ca16c768e3c6cf924cb72b7cfbf981d4d71f8b334fb50895482ac8db832\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f20ebaad6d624ad49715d0b37432e2b7fd02214d1f6f6ed9c146a72424977c\",\"dweb:/ipfs/Qmbf8RayEorkvCqeGfHufXFsAFkTgNRQTghNSRdwffMikz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"utils/calculateUtils.sol": {
				"ast": {
					"absolutePath": "utils/calculateUtils.sol",
					"exportedSymbols": {
						"CalculateUtils": [
							689
						],
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							446
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "./../contracts/utils/math/SafeMath.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 447,
							"src": "58:48:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./../contracts/access/Ownable.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 113,
							"src": "108:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689
							],
							"name": "CalculateUtils",
							"nameLocation": "161:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 453,
									"mutability": "constant",
									"name": "RATE",
									"nameLocation": "200:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "183:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323733",
										"id": 452,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "207:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_273_by_1",
											"typeString": "int_const 273"
										},
										"value": "273"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 456,
									"mutability": "constant",
									"name": "VF_N",
									"nameLocation": "234:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "217:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "377:652:3",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "396:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "388:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"nodeType": "VariableDeclarationStatement",
												"src": "388:13:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "_bounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "416:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 467,
														"name": "RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "425:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "416:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "475:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 475,
																"name": "RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "484:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "475:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "490:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 478,
																	"name": "RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "498:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316531",
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "503:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "1e1"
																},
																"src": "498:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "490:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "475:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 488,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "554:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 489,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "564:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316531",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "569:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "564:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "554:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 493,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "576:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 494,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "585:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316532",
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "590:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "1e2"
																	},
																	"src": "585:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "576:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "554:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 504,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "640:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 505,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "650:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316532",
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "655:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "650:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "640:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "662:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 510,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "672:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316533",
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "677:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1e3"
																		},
																		"src": "672:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "662:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "640:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 520,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "728:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "737:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316533",
																				"id": 522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "742:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "737:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "728:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 525,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "749:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 526,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "759:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316534",
																				"id": 527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "764:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "1e4"
																			},
																			"src": "759:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "749:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "728:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 536,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 458,
																				"src": "815:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 537,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 453,
																					"src": "824:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316534",
																					"id": 538,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "829:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "824:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "815:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 541,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 458,
																				"src": "836:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 542,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 453,
																					"src": "846:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316535",
																					"id": 543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "851:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"src": "846:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "836:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "815:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 552,
																		"nodeType": "Block",
																		"src": "898:101:3",
																		"statements": []
																	},
																	"id": 553,
																	"nodeType": "IfStatement",
																	"src": "812:187:3",
																	"trueBody": {
																		"id": 551,
																		"nodeType": "Block",
																		"src": "856:38:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 547,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 464,
																						"src": "871:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "316535",
																						"id": 548,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "879:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000_by_1",
																							"typeString": "int_const 100000"
																						},
																						"value": "1e5"
																					},
																					"src": "871:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 550,
																				"nodeType": "ExpressionStatement",
																				"src": "871:11:3"
																			}
																		]
																	}
																},
																"id": 554,
																"nodeType": "IfStatement",
																"src": "725:274:3",
																"trueBody": {
																	"id": 535,
																	"nodeType": "Block",
																	"src": "769:38:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 531,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 464,
																					"src": "784:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "316534",
																					"id": 532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "792:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "784:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 534,
																			"nodeType": "ExpressionStatement",
																			"src": "784:11:3"
																		}
																	]
																}
															},
															"id": 555,
															"nodeType": "IfStatement",
															"src": "637:362:3",
															"trueBody": {
																"id": 519,
																"nodeType": "Block",
																"src": "682:38:3",
																"statements": [
																	{
																		"expression": {
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 515,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 464,
																				"src": "697:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "316533",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "705:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "697:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 518,
																		"nodeType": "ExpressionStatement",
																		"src": "697:11:3"
																	}
																]
															}
														},
														"id": 556,
														"nodeType": "IfStatement",
														"src": "551:448:3",
														"trueBody": {
															"id": 503,
															"nodeType": "Block",
															"src": "594:38:3",
															"statements": [
																{
																	"expression": {
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 499,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "609:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "316532",
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "617:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "609:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 502,
																	"nodeType": "ExpressionStatement",
																	"src": "609:11:3"
																}
															]
														}
													},
													"id": 557,
													"nodeType": "IfStatement",
													"src": "472:527:3",
													"trueBody": {
														"id": 487,
														"nodeType": "Block",
														"src": "508:38:3",
														"statements": [
															{
																"expression": {
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 483,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "523:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "316531",
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "531:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "523:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 486,
																"nodeType": "ExpressionStatement",
																"src": "523:11:3"
															}
														]
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "412:587:3",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "431:36:3",
													"statements": [
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 469,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "446:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "454:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "446:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "446:9:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 559,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "1016:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 462,
												"id": 560,
												"nodeType": "Return",
												"src": "1009:12:3"
											}
										]
									},
									"functionSelector": "4f6ca3ce",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "punishRatio",
									"nameLocation": "319:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "_bounts",
												"nameLocation": "339:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "331:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:17:3"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "368:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:9:3"
									},
									"scope": 689,
									"src": "310:719:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "1392:205:3",
										"statements": [
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "_maxV",
														"nameLocation": "1411:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "1403:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1403:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"nodeType": "VariableDeclarationStatement",
												"src": "1403:13:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "_transNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1430:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 573,
														"name": "VF_N",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "1444:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 588,
													"nodeType": "Block",
													"src": "1494:73:3",
													"statements": [
														{
															"expression": {
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 580,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "1515:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 583,
																			"name": "_transNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "1536:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 584,
																			"name": "VF_N",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "1550:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 581,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "1523:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$446_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "1523:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1523:32:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1515:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 587,
															"nodeType": "ExpressionStatement",
															"src": "1515:40:3"
														}
													]
												},
												"id": 589,
												"nodeType": "IfStatement",
												"src": "1427:140:3",
												"trueBody": {
													"id": 579,
													"nodeType": "Block",
													"src": "1449:41:3",
													"statements": [
														{
															"expression": {
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 575,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "1469:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1477:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1469:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 578,
															"nodeType": "ExpressionStatement",
															"src": "1469:9:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"name": "_maxV",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 570,
													"src": "1584:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 568,
												"id": 591,
												"nodeType": "Return",
												"src": "1577:12:3"
											}
										]
									},
									"functionSelector": "f2e60202",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMatNumber",
									"nameLocation": "1327:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "_transNumber",
												"nameLocation": "1348:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1340:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:22:3"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1383:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:10:3"
									},
									"scope": 689,
									"src": "1318:279:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "1716:117:3",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "_taskBounty",
														"nameLocation": "1735:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "1727:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 600,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1727:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "1764:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3930",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															},
															"value": "90"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															}
														],
														"id": 602,
														"name": "_getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1749:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1727:48:3"
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1786:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 609,
																"name": "_taskBounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "1810:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3630",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1822:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"id": 608,
															"name": "_getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "1795:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1795:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1786:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "1786:39:3"
											}
										]
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTrans",
									"nameLocation": "1648:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1669:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1661:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:17:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1708:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1700:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:16:3"
									},
									"scope": 689,
									"src": "1639:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "1949:117:3",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "_taskBounty",
														"nameLocation": "1968:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "1960:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1960:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [
														{
															"id": 625,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1997:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3930",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2005:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															},
															"value": "90"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															}
														],
														"id": 624,
														"name": "_getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1982:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1960:48:3"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 629,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "2019:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 631,
																"name": "_taskBounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "2043:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3430",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2055:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																},
																"value": "40"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																}
															],
															"id": 630,
															"name": "_getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2028:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2028:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2019:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2019:39:3"
											}
										]
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskVf",
									"nameLocation": "1884:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1902:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1894:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:17:3"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1941:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1933:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:16:3"
									},
									"scope": 689,
									"src": "1875:191:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2199:66:3",
										"statements": [
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "returnNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2210:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 649,
																	"name": "_number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "2238:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 650,
																	"name": "_ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "2246:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "2225:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$446_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "2225:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2225:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2254:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2225:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2210:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "2210:47:3"
											}
										]
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPercentage",
									"nameLocation": "2107:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "2130:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2122:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2147:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:33:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "returnNumber",
												"nameLocation": "2185:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2177:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:22:3"
									},
									"scope": 689,
									"src": "2098:167:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "2371:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "2402:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 669,
															"name": "_ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "2410:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 666,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2389:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$446_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "2389:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 665,
												"id": 671,
												"nodeType": "Return",
												"src": "2382:35:3"
											}
										]
									},
									"functionSelector": "9ce5c4bf",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPunish",
									"nameLocation": "2300:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2318:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2310:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:32:3"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2362:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:9:3"
									},
									"scope": 689,
									"src": "2291:134:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "2546:57:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2579:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 684,
															"name": "_deduct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2587:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "2564:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 681,
												"id": 686,
												"nodeType": "Return",
												"src": "2557:38:3"
											}
										]
									},
									"functionSelector": "8f861ba7",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeductMoney",
									"nameLocation": "2469:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2492:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "2484:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "_deduct",
												"nameLocation": "2508:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "2500:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:3"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "2537:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:9:3"
									},
									"scope": 689,
									"src": "2460:143:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 690,
							"src": "153:2453:3",
							"usedErrors": []
						}
					],
					"src": "33:2573:3"
				},
				"id": 3
			}
		}
	}
}
{
	"id": "b8f9f21289fa471ef931d5d9244b150d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"utils/calculateUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./../contracts/utils/math/SafeMath.sol\";\r\nerror ParameterException(string);\r\n\r\nlibrary CalculateUtils {\r\n    uint256 constant RATE = 273;\r\n    uint256 constant VF_N = 3;\r\n\r\n    // uint256 private TransRate ;\r\n    //获得罚金比率\r\n    function punishRatio(uint256 _bounts) public pure returns (uint256) {\r\n        uint256 ratio;\r\n        if (_bounts < RATE) {\r\n            ratio = 1;\r\n        } else if (_bounts >= RATE && _bounts < RATE * 1e1) {\r\n            ratio = 1e1;\r\n        } else if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r\n            ratio = 1e2;\r\n        } else if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r\n            ratio = 1e3;\r\n        } else if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r\n            ratio = 1e4;\r\n        } else if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r\n            ratio = 1e5;\r\n        } else {\r\n            revert ParameterException(\r\n                \"Unable to calculate,Please submit a request\"\r\n            );\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    //修改汇率\r\n    // function setRate(uint256 _rate) internal onlyOwner{\r\n    //     rate = _rate;\r\n    // }\r\n    //校对工作量（人） 校对人数= 翻译人数/校对工作量\r\n    // function setvfN(uint256 _vfN) internal onlyOwner {\r\n    //     vfN =_vfN;\r\n    // }\r\n    function getMatNumber(uint256 _transNumber)\r\n        external\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        uint256 _maxV;\r\n        if (_transNumber <= VF_N) {\r\n            _maxV = 1;\r\n        } else {\r\n            _maxV = SafeMath.div(_transNumber, VF_N);\r\n        }\r\n        return _maxV;\r\n    }\r\n\r\n    //计算任务赏金-翻译者\r\n    function getTaskTrans(uint256 _bounty)\r\n        internal\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 54);\r\n    }\r\n\r\n    function getTaskTransEnd(uint256 _bounty)\r\n        internal\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 24);\r\n    }\r\n\r\n    function getTaskTransFirst(uint256 _bounty)\r\n        internal\r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 30);\r\n    }\r\n\r\n    //计算任务赏金-校验者\r\n    function getTaskVf(uint256 _bounty) internal pure returns (uint256 _money) {\r\n        _money = getPercentage(_bounty, 36);\r\n    }\r\n\r\n    //计算任务赏金\r\n    function getPercentage(uint256 _number, uint256 _ratio)\r\n        internal\r\n        pure\r\n        returns (uint256 returnNumber)\r\n    {\r\n        returnNumber = SafeMath.mul(_number, _ratio) / 100;\r\n    }\r\n\r\n    //计算罚金\r\n    function getPunish(uint256 _ratio, uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return SafeMath.div(_bounty, _ratio);\r\n    }\r\n\r\n    //计算扣除的赏金\r\n    function getDeductMoney(uint256 _bounty, uint256 _deduct)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return getPercentage(_bounty, _deduct);\r\n    }\r\n}\r\n"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xE2 SWAP7 0x2F BYTE BALANCE OR SWAP14 SWAP3 0xE2 LOG2 SWAP14 SWAP10 0x29 0x25 0x4D 0xF8 0x5F 0x21 KECCAK256 SSTORE 0xBE 0xB3 LT CALLDATALOAD SLOAD 0x22 0xE6 SWAP11 0xED 0xFC AND PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6e2962f1a31179d92e2a29d9929254df85f212055beb310355422e69aedfc1664736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/calculateUtils.sol": {
				"CalculateUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "ParameterException",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deduct",
									"type": "uint256"
								}
							],
							"name": "getDeductMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_transNumber",
									"type": "uint256"
								}
							],
							"name": "getMatNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getPunish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounts",
									"type": "uint256"
								}
							],
							"name": "punishRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/calculateUtils.sol\":145:3084  library CalculateUtils {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/calculateUtils.sol\":145:3084  library CalculateUtils {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ca3ce\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8f861ba7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ce5c4bf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2e60202\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"utils/calculateUtils.sol\":305:1102  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n    tag_2:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":2904:3081  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":2698:2867  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":1393:1701  function getMatNumber(uint256 _transNumber)\r... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"utils/calculateUtils.sol\":305:1102  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n    tag_9:\n        /* \"utils/calculateUtils.sol\":364:371  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":384:397  uint256 ratio */\n      dup1\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":412:419  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":412:426  _bounts < RATE */\n      lt\n        /* \"utils/calculateUtils.sol\":408:1072  if (_bounts < RATE) {\r... */\n      iszero\n      tag_26\n      jumpi\n        /* \"utils/calculateUtils.sol\":451:452  1 */\n      0x01\n        /* \"utils/calculateUtils.sol\":443:452  ratio = 1 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":408:1072  if (_bounts < RATE) {\r... */\n      jump(tag_27)\n    tag_26:\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":474:481  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":474:489  _bounts >= RATE */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":474:513  _bounts >= RATE && _bounts < RATE * 1e1 */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":510:513  1e1 */\n      0x0a\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":503:513  RATE * 1e1 */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"utils/calculateUtils.sol\":493:500  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":493:513  _bounts < RATE * 1e1 */\n      lt\n        /* \"utils/calculateUtils.sol\":474:513  _bounts >= RATE && _bounts < RATE * 1e1 */\n    tag_28:\n        /* \"utils/calculateUtils.sol\":470:1072  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n      iszero\n      tag_31\n      jumpi\n        /* \"utils/calculateUtils.sol\":538:541  1e1 */\n      0x0a\n        /* \"utils/calculateUtils.sol\":530:541  ratio = 1e1 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":470:1072  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n      jump(tag_32)\n    tag_31:\n        /* \"utils/calculateUtils.sol\":581:584  1e1 */\n      0x0a\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":574:584  RATE * 1e1 */\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n        /* \"utils/calculateUtils.sol\":563:570  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":563:584  _bounts >= RATE * 1e1 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":563:608  _bounts >= RATE * 1e1 && _bounts < RATE * 1e2 */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":605:608  1e2 */\n      0x64\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":598:608  RATE * 1e2 */\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"utils/calculateUtils.sol\":588:595  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":588:608  _bounts < RATE * 1e2 */\n      lt\n        /* \"utils/calculateUtils.sol\":563:608  _bounts >= RATE * 1e1 && _bounts < RATE * 1e2 */\n    tag_34:\n        /* \"utils/calculateUtils.sol\":559:1072  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"utils/calculateUtils.sol\":633:636  1e2 */\n      0x64\n        /* \"utils/calculateUtils.sol\":625:636  ratio = 1e2 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":559:1072  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n      jump(tag_37)\n    tag_36:\n        /* \"utils/calculateUtils.sol\":676:679  1e2 */\n      0x64\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":669:679  RATE * 1e2 */\n      tag_38\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n        /* \"utils/calculateUtils.sol\":658:665  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":658:679  _bounts >= RATE * 1e2 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":658:703  _bounts >= RATE * 1e2 && _bounts < RATE * 1e3 */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":700:703  1e3 */\n      0x03e8\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":693:703  RATE * 1e3 */\n      tag_40\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"utils/calculateUtils.sol\":683:690  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":683:703  _bounts < RATE * 1e3 */\n      lt\n        /* \"utils/calculateUtils.sol\":658:703  _bounts >= RATE * 1e2 && _bounts < RATE * 1e3 */\n    tag_39:\n        /* \"utils/calculateUtils.sol\":654:1072  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n      iszero\n      tag_41\n      jumpi\n        /* \"utils/calculateUtils.sol\":728:731  1e3 */\n      0x03e8\n        /* \"utils/calculateUtils.sol\":720:731  ratio = 1e3 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":654:1072  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n      jump(tag_42)\n    tag_41:\n        /* \"utils/calculateUtils.sol\":771:774  1e3 */\n      0x03e8\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":764:774  RATE * 1e3 */\n      tag_43\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"utils/calculateUtils.sol\":753:760  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":753:774  _bounts >= RATE * 1e3 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":753:799  _bounts >= RATE * 1e3 && _bounts <= RATE * 1e4 */\n      dup1\n      iszero\n      tag_44\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":796:799  1e4 */\n      0x2710\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":789:799  RATE * 1e4 */\n      tag_45\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_45:\n        /* \"utils/calculateUtils.sol\":778:785  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":778:799  _bounts <= RATE * 1e4 */\n      gt\n      iszero\n        /* \"utils/calculateUtils.sol\":753:799  _bounts >= RATE * 1e3 && _bounts <= RATE * 1e4 */\n    tag_44:\n        /* \"utils/calculateUtils.sol\":749:1072  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n      iszero\n      tag_46\n      jumpi\n        /* \"utils/calculateUtils.sol\":824:827  1e4 */\n      0x2710\n        /* \"utils/calculateUtils.sol\":816:827  ratio = 1e4 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":749:1072  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n      jump(tag_47)\n    tag_46:\n        /* \"utils/calculateUtils.sol\":867:870  1e4 */\n      0x2710\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":860:870  RATE * 1e4 */\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n        /* \"utils/calculateUtils.sol\":849:856  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":849:870  _bounts >= RATE * 1e4 */\n      lt\n      iszero\n        /* \"utils/calculateUtils.sol\":849:895  _bounts >= RATE * 1e4 && _bounts <= RATE * 1e5 */\n      dup1\n      iszero\n      tag_49\n      jumpi\n      pop\n        /* \"utils/calculateUtils.sol\":892:895  1e5 */\n      0x0186a0\n        /* \"utils/calculateUtils.sol\":199:202  273 */\n      0x0111\n        /* \"utils/calculateUtils.sol\":885:895  RATE * 1e5 */\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n        /* \"utils/calculateUtils.sol\":874:881  _bounts */\n      dup4\n        /* \"utils/calculateUtils.sol\":874:895  _bounts <= RATE * 1e5 */\n      gt\n      iszero\n        /* \"utils/calculateUtils.sol\":849:895  _bounts >= RATE * 1e4 && _bounts <= RATE * 1e5 */\n    tag_49:\n        /* \"utils/calculateUtils.sol\":845:1072  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n      iszero\n      tag_51\n      jumpi\n        /* \"utils/calculateUtils.sol\":920:923  1e5 */\n      0x0186a0\n        /* \"utils/calculateUtils.sol\":912:923  ratio = 1e5 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":845:1072  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n      jump(tag_52)\n    tag_51:\n        /* \"utils/calculateUtils.sol\":963:1060  ParameterException(\r... */\n      mload(0x40)\n      0xd1d89b7400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/calculateUtils.sol\":845:1072  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n    tag_52:\n        /* \"utils/calculateUtils.sol\":749:1072  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n    tag_47:\n        /* \"utils/calculateUtils.sol\":654:1072  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n    tag_42:\n        /* \"utils/calculateUtils.sol\":559:1072  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n    tag_37:\n        /* \"utils/calculateUtils.sol\":470:1072  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n    tag_32:\n        /* \"utils/calculateUtils.sol\":408:1072  if (_bounts < RATE) {\r... */\n    tag_27:\n        /* \"utils/calculateUtils.sol\":1089:1094  ratio */\n      dup1\n        /* \"utils/calculateUtils.sol\":1082:1094  return ratio */\n      swap2\n      pop\n      pop\n        /* \"utils/calculateUtils.sol\":305:1102  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":2904:3081  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_15:\n        /* \"utils/calculateUtils.sol\":3010:3017  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":3042:3073  getPercentage(_bounty, _deduct) */\n      tag_56\n        /* \"utils/calculateUtils.sol\":3056:3063  _bounty */\n      dup4\n        /* \"utils/calculateUtils.sol\":3065:3072  _deduct */\n      dup4\n        /* \"utils/calculateUtils.sol\":3042:3055  getPercentage */\n      tag_57\n        /* \"utils/calculateUtils.sol\":3042:3073  getPercentage(_bounty, _deduct) */\n      jump\t// in\n    tag_56:\n        /* \"utils/calculateUtils.sol\":3035:3073  return getPercentage(_bounty, _deduct) */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":2904:3081  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":2698:2867  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_19:\n        /* \"utils/calculateUtils.sol\":2798:2805  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":2830:2859  SafeMath.div(_bounty, _ratio) */\n      tag_59\n        /* \"utils/calculateUtils.sol\":2843:2850  _bounty */\n      dup3\n        /* \"utils/calculateUtils.sol\":2852:2858  _ratio */\n      dup5\n        /* \"utils/calculateUtils.sol\":2830:2842  SafeMath.div */\n      tag_60\n        /* \"utils/calculateUtils.sol\":2830:2859  SafeMath.div(_bounty, _ratio) */\n      jump\t// in\n    tag_59:\n        /* \"utils/calculateUtils.sol\":2823:2859  return SafeMath.div(_bounty, _ratio) */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":2698:2867  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":1393:1701  function getMatNumber(uint256 _transNumber)\r... */\n    tag_23:\n        /* \"utils/calculateUtils.sol\":1487:1494  uint256 */\n      0x00\n        /* \"utils/calculateUtils.sol\":1512:1525  uint256 _maxV */\n      dup1\n        /* \"utils/calculateUtils.sol\":233:234  3 */\n      0x03\n        /* \"utils/calculateUtils.sol\":1540:1552  _transNumber */\n      dup4\n        /* \"utils/calculateUtils.sol\":1540:1560  _transNumber <= VF_N */\n      gt\n        /* \"utils/calculateUtils.sol\":1536:1671  if (_transNumber <= VF_N) {\r... */\n      tag_62\n      jumpi\n        /* \"utils/calculateUtils.sol\":1585:1586  1 */\n      0x01\n        /* \"utils/calculateUtils.sol\":1577:1586  _maxV = 1 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":1536:1671  if (_transNumber <= VF_N) {\r... */\n      jump(tag_63)\n    tag_62:\n        /* \"utils/calculateUtils.sol\":1627:1659  SafeMath.div(_transNumber, VF_N) */\n      tag_64\n        /* \"utils/calculateUtils.sol\":1640:1652  _transNumber */\n      dup4\n        /* \"utils/calculateUtils.sol\":233:234  3 */\n      0x03\n        /* \"utils/calculateUtils.sol\":1627:1639  SafeMath.div */\n      tag_60\n        /* \"utils/calculateUtils.sol\":1627:1659  SafeMath.div(_transNumber, VF_N) */\n      jump\t// in\n    tag_64:\n        /* \"utils/calculateUtils.sol\":1619:1659  _maxV = SafeMath.div(_transNumber, VF_N) */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":1536:1671  if (_transNumber <= VF_N) {\r... */\n    tag_63:\n        /* \"utils/calculateUtils.sol\":1688:1693  _maxV */\n      dup1\n        /* \"utils/calculateUtils.sol\":1681:1693  return _maxV */\n      swap2\n      pop\n      pop\n        /* \"utils/calculateUtils.sol\":1393:1701  function getMatNumber(uint256 _transNumber)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/calculateUtils.sol\":2468:2670  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n    tag_57:\n        /* \"utils/calculateUtils.sol\":2574:2594  uint256 returnNumber */\n      0x00\n        /* \"utils/calculateUtils.sol\":2659:2662  100 */\n      0x64\n        /* \"utils/calculateUtils.sol\":2627:2656  SafeMath.mul(_number, _ratio) */\n      tag_66\n        /* \"utils/calculateUtils.sol\":2640:2647  _number */\n      dup5\n        /* \"utils/calculateUtils.sol\":2649:2655  _ratio */\n      dup5\n        /* \"utils/calculateUtils.sol\":2627:2639  SafeMath.mul */\n      tag_67\n        /* \"utils/calculateUtils.sol\":2627:2656  SafeMath.mul(_number, _ratio) */\n      jump\t// in\n    tag_66:\n        /* \"utils/calculateUtils.sol\":2627:2662  SafeMath.mul(_number, _ratio) / 100 */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"utils/calculateUtils.sol\":2612:2662  returnNumber = SafeMath.mul(_number, _ratio) / 100 */\n      swap1\n      pop\n        /* \"utils/calculateUtils.sol\":2468:2670  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_60:\n        /* \"contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_71\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_71:\n        /* \"contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_67:\n        /* \"contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_73\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_73:\n        /* \"contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_75:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_77\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":228:347   */\n    tag_80:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_83\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_75\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:961   */\n    tag_14:\n        /* \"#utility.yul\":555:561   */\n      0x00\n        /* \"#utility.yul\":563:569   */\n      dup1\n        /* \"#utility.yul\":612:614   */\n      0x40\n        /* \"#utility.yul\":600:609   */\n      dup4\n        /* \"#utility.yul\":591:598   */\n      dup6\n        /* \"#utility.yul\":587:610   */\n      sub\n        /* \"#utility.yul\":583:615   */\n      slt\n        /* \"#utility.yul\":580:699   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":618:697   */\n      tag_86\n      tag_82\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":580:699   */\n    tag_85:\n        /* \"#utility.yul\":738:739   */\n      0x00\n        /* \"#utility.yul\":763:816   */\n      tag_87\n        /* \"#utility.yul\":808:815   */\n      dup6\n        /* \"#utility.yul\":799:805   */\n      dup3\n        /* \"#utility.yul\":788:797   */\n      dup7\n        /* \"#utility.yul\":784:806   */\n      add\n        /* \"#utility.yul\":763:816   */\n      tag_75\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":753:816   */\n      swap3\n      pop\n        /* \"#utility.yul\":709:826   */\n      pop\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":891:944   */\n      tag_88\n        /* \"#utility.yul\":936:943   */\n      dup6\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup7\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_75\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":836:954   */\n      pop\n        /* \"#utility.yul\":487:961   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1333   */\n    tag_89:\n        /* \"#utility.yul\":1109:1112   */\n      0x00\n        /* \"#utility.yul\":1130:1197   */\n      tag_91\n        /* \"#utility.yul\":1194:1196   */\n      0x2b\n        /* \"#utility.yul\":1189:1192   */\n      dup4\n        /* \"#utility.yul\":1130:1197   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1123:1197   */\n      swap2\n      pop\n        /* \"#utility.yul\":1206:1299   */\n      tag_93\n        /* \"#utility.yul\":1295:1298   */\n      dup3\n        /* \"#utility.yul\":1206:1299   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1324:1326   */\n      0x40\n        /* \"#utility.yul\":1319:1322   */\n      dup3\n        /* \"#utility.yul\":1315:1327   */\n      add\n        /* \"#utility.yul\":1308:1327   */\n      swap1\n      pop\n        /* \"#utility.yul\":967:1333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1339:1465   */\n    tag_95:\n        /* \"#utility.yul\":1434:1458   */\n      tag_97\n        /* \"#utility.yul\":1452:1457   */\n      dup2\n        /* \"#utility.yul\":1434:1458   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1429:1432   */\n      dup3\n        /* \"#utility.yul\":1422:1459   */\n      mstore\n        /* \"#utility.yul\":1339:1465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1471:1890   */\n    tag_54:\n        /* \"#utility.yul\":1637:1641   */\n      0x00\n        /* \"#utility.yul\":1675:1677   */\n      0x20\n        /* \"#utility.yul\":1664:1673   */\n      dup3\n        /* \"#utility.yul\":1660:1678   */\n      add\n        /* \"#utility.yul\":1652:1678   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1733   */\n      dup2\n        /* \"#utility.yul\":1718:1722   */\n      dup2\n        /* \"#utility.yul\":1714:1734   */\n      sub\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1699:1708   */\n      dup4\n        /* \"#utility.yul\":1695:1712   */\n      add\n        /* \"#utility.yul\":1688:1735   */\n      mstore\n        /* \"#utility.yul\":1752:1883   */\n      tag_100\n        /* \"#utility.yul\":1878:1882   */\n      dup2\n        /* \"#utility.yul\":1752:1883   */\n      tag_89\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1744:1883   */\n      swap1\n      pop\n        /* \"#utility.yul\":1471:1890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1896:2134   */\n    tag_11:\n        /* \"#utility.yul\":1997:2001   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x20\n        /* \"#utility.yul\":2024:2033   */\n      dup3\n        /* \"#utility.yul\":2020:2038   */\n      add\n        /* \"#utility.yul\":2012:2038   */\n      swap1\n      pop\n        /* \"#utility.yul\":2048:2127   */\n      tag_102\n        /* \"#utility.yul\":2124:2125   */\n      0x00\n        /* \"#utility.yul\":2113:2122   */\n      dup4\n        /* \"#utility.yul\":2109:2126   */\n      add\n        /* \"#utility.yul\":2100:2106   */\n      dup5\n        /* \"#utility.yul\":2048:2127   */\n      tag_95\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1896:2134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2221:2390   */\n    tag_92:\n        /* \"#utility.yul\":2305:2316   */\n      0x00\n        /* \"#utility.yul\":2339:2345   */\n      dup3\n        /* \"#utility.yul\":2334:2337   */\n      dup3\n        /* \"#utility.yul\":2327:2346   */\n      mstore\n        /* \"#utility.yul\":2379:2383   */\n      0x20\n        /* \"#utility.yul\":2374:2377   */\n      dup3\n        /* \"#utility.yul\":2370:2384   */\n      add\n        /* \"#utility.yul\":2355:2384   */\n      swap1\n      pop\n        /* \"#utility.yul\":2221:2390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2581   */\n    tag_69:\n        /* \"#utility.yul\":2436:2437   */\n      0x00\n        /* \"#utility.yul\":2453:2473   */\n      tag_107\n        /* \"#utility.yul\":2471:2472   */\n      dup3\n        /* \"#utility.yul\":2453:2473   */\n      tag_98\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2448:2473   */\n      swap2\n      pop\n        /* \"#utility.yul\":2487:2507   */\n      tag_108\n        /* \"#utility.yul\":2505:2506   */\n      dup4\n        /* \"#utility.yul\":2487:2507   */\n      tag_98\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2482:2507   */\n      swap3\n      pop\n        /* \"#utility.yul\":2526:2527   */\n      dup3\n        /* \"#utility.yul\":2516:2551   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2531:2549   */\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2516:2551   */\n    tag_109:\n        /* \"#utility.yul\":2573:2574   */\n      dup3\n        /* \"#utility.yul\":2570:2571   */\n      dup3\n        /* \"#utility.yul\":2566:2575   */\n      div\n        /* \"#utility.yul\":2561:2575   */\n      swap1\n      pop\n        /* \"#utility.yul\":2396:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:2935   */\n    tag_30:\n        /* \"#utility.yul\":2627:2634   */\n      0x00\n        /* \"#utility.yul\":2650:2670   */\n      tag_113\n        /* \"#utility.yul\":2668:2669   */\n      dup3\n        /* \"#utility.yul\":2650:2670   */\n      tag_98\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2645:2670   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2704   */\n      tag_114\n        /* \"#utility.yul\":2702:2703   */\n      dup4\n        /* \"#utility.yul\":2684:2704   */\n      tag_98\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2679:2704   */\n      swap3\n      pop\n        /* \"#utility.yul\":2872:2873   */\n      dup2\n        /* \"#utility.yul\":2804:2870   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2800:2874   */\n      div\n        /* \"#utility.yul\":2797:2798   */\n      dup4\n        /* \"#utility.yul\":2794:2875   */\n      gt\n        /* \"#utility.yul\":2789:2790   */\n      dup3\n        /* \"#utility.yul\":2782:2791   */\n      iszero\n        /* \"#utility.yul\":2775:2792   */\n      iszero\n        /* \"#utility.yul\":2771:2876   */\n      and\n        /* \"#utility.yul\":2768:2899   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2879:2897   */\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2768:2899   */\n    tag_115:\n        /* \"#utility.yul\":2927:2928   */\n      dup3\n        /* \"#utility.yul\":2924:2925   */\n      dup3\n        /* \"#utility.yul\":2920:2929   */\n      mul\n        /* \"#utility.yul\":2909:2929   */\n      swap1\n      pop\n        /* \"#utility.yul\":2587:2935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2941:3018   */\n    tag_98:\n        /* \"#utility.yul\":2978:2985   */\n      0x00\n        /* \"#utility.yul\":3007:3012   */\n      dup2\n        /* \"#utility.yul\":2996:3012   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:3018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3204   */\n    tag_117:\n        /* \"#utility.yul\":3072:3149   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3069:3070   */\n      0x00\n        /* \"#utility.yul\":3062:3150   */\n      mstore\n        /* \"#utility.yul\":3169:3173   */\n      0x11\n        /* \"#utility.yul\":3166:3167   */\n      0x04\n        /* \"#utility.yul\":3159:3174   */\n      mstore\n        /* \"#utility.yul\":3193:3197   */\n      0x24\n        /* \"#utility.yul\":3190:3191   */\n      0x00\n        /* \"#utility.yul\":3183:3198   */\n      revert\n        /* \"#utility.yul\":3210:3390   */\n    tag_111:\n        /* \"#utility.yul\":3258:3335   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3255:3256   */\n      0x00\n        /* \"#utility.yul\":3248:3336   */\n      mstore\n        /* \"#utility.yul\":3355:3359   */\n      0x12\n        /* \"#utility.yul\":3352:3353   */\n      0x04\n        /* \"#utility.yul\":3345:3360   */\n      mstore\n        /* \"#utility.yul\":3379:3383   */\n      0x24\n        /* \"#utility.yul\":3376:3377   */\n      0x00\n        /* \"#utility.yul\":3369:3384   */\n      revert\n        /* \"#utility.yul\":3519:3636   */\n    tag_82:\n        /* \"#utility.yul\":3628:3629   */\n      0x00\n        /* \"#utility.yul\":3625:3626   */\n      dup1\n        /* \"#utility.yul\":3618:3630   */\n      revert\n        /* \"#utility.yul\":3642:3872   */\n    tag_94:\n        /* \"#utility.yul\":3782:3816   */\n      0x556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3770:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3780   */\n      add\n        /* \"#utility.yul\":3759:3817   */\n      mstore\n        /* \"#utility.yul\":3851:3864   */\n      0x7420612072657175657374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3846:3848   */\n      0x20\n        /* \"#utility.yul\":3838:3844   */\n      dup3\n        /* \"#utility.yul\":3834:3849   */\n      add\n        /* \"#utility.yul\":3827:3865   */\n      mstore\n        /* \"#utility.yul\":3642:3872   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3878:4000   */\n    tag_78:\n        /* \"#utility.yul\":3951:3975   */\n      tag_126\n        /* \"#utility.yul\":3969:3974   */\n      dup2\n        /* \"#utility.yul\":3951:3975   */\n      tag_98\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3944:3949   */\n      dup2\n        /* \"#utility.yul\":3941:3976   */\n      eq\n        /* \"#utility.yul\":3931:3994   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":3990:3991   */\n      0x00\n        /* \"#utility.yul\":3987:3988   */\n      dup1\n        /* \"#utility.yul\":3980:3992   */\n      revert\n        /* \"#utility.yul\":3931:3994   */\n    tag_127:\n        /* \"#utility.yul\":3878:4000   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c6222b98d48139de030e5286729d6257b34dc2fcd6222db12880d46617a83be564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6105ca610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6ca3ce1461005b5780638f861ba71461008b5780639ce5c4bf146100bb578063f2e60202146100eb575b600080fd5b6100756004803603810190610070919061034b565b61011b565b604051610082919061040a565b60405180910390f35b6100a560048036038101906100a09190610378565b610297565b6040516100b2919061040a565b60405180910390f35b6100d560048036038101906100d09190610378565b6102ab565b6040516100e2919061040a565b60405180910390f35b6101056004803603810190610100919061034b565b6102bf565b604051610112919061040a565b60405180910390f35b600080610111831015610131576001905061028e565b61011183101580156101505750600a61011161014d9190610467565b83105b1561015e57600a905061028d565b600a61011161016d9190610467565b8310158015610189575060646101116101869190610467565b83105b15610197576064905061028c565b60646101116101a69190610467565b83101580156101c357506103e86101116101c09190610467565b83105b156101d2576103e8905061028b565b6103e86101116101e29190610467565b831015801561020057506127106101116101fc9190610467565b8311155b1561020f57612710905061028a565b61271061011161021f9190610467565b831015801561023e5750620186a061011161023a9190610467565b8311155b1561024e57620186a09050610289565b6040517fd1d89b74000000000000000000000000000000000000000000000000000000008152600401610280906103ea565b60405180910390fd5b5b5b5b5b5b80915050919050565b60006102a383836102ea565b905092915050565b60006102b7828461030a565b905092915050565b600080600383116102d357600190506102e1565b6102de83600361030a565b90505b80915050919050565b600060646102f88484610320565b6103029190610436565b905092915050565b600081836103189190610436565b905092915050565b6000818361032e9190610467565b905092915050565b6000813590506103458161057d565b92915050565b60006020828403121561036157610360610529565b5b600061036f84828501610336565b91505092915050565b6000806040838503121561038f5761038e610529565b5b600061039d85828601610336565b92505060206103ae85828601610336565b9150509250929050565b60006103c5602b83610425565b91506103d08261052e565b604082019050919050565b6103e4816104c1565b82525050565b60006020820190508181036000830152610403816103b8565b9050919050565b600060208201905061041f60008301846103db565b92915050565b600082825260208201905092915050565b6000610441826104c1565b915061044c836104c1565b92508261045c5761045b6104fa565b5b828204905092915050565b6000610472826104c1565b915061047d836104c1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104b6576104b56104cb565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960008201527f7420612072657175657374000000000000000000000000000000000000000000602082015250565b610586816104c1565b811461059157600080fd5b5056fea2646970667358221220c6222b98d48139de030e5286729d6257b34dc2fcd6222db12880d46617a83be564736f6c63430008070033",
							"opcodes": "PUSH2 0x5CA PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x28E JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI POP PUSH1 0xA PUSH2 0x111 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x15E JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x28D JUMP JUMPDEST PUSH1 0xA PUSH2 0x111 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI POP PUSH1 0x64 PUSH2 0x111 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x197 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x28C JUMP JUMPDEST PUSH1 0x64 PUSH2 0x111 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI POP PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1D2 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x28B JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH2 0x2710 PUSH2 0x111 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x20F JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x28A JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x111 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI POP PUSH3 0x186A0 PUSH2 0x111 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x2EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B7 DUP3 DUP5 PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x2D3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x2DE DUP4 PUSH1 0x3 PUSH2 0x30A JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2F8 DUP5 DUP5 PUSH2 0x320 JUMP JUMPDEST PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x345 DUP2 PUSH2 0x57D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361 JUMPI PUSH2 0x360 PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36F DUP5 DUP3 DUP6 ADD PUSH2 0x336 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38F JUMPI PUSH2 0x38E PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39D DUP6 DUP3 DUP7 ADD PUSH2 0x336 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3AE DUP6 DUP3 DUP7 ADD PUSH2 0x336 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 PUSH1 0x2B DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D0 DUP3 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x403 DUP2 PUSH2 0x3B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441 DUP3 PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x44C DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x45C JUMPI PUSH2 0x45B PUSH2 0x4FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 DUP3 PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x47D DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4B6 JUMPI PUSH2 0x4B5 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x586 DUP2 PUSH2 0x4C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0x22 0x2B SWAP9 0xD4 DUP2 CODECOPY 0xDE SUB 0xE MSTORE DUP7 PUSH19 0x9D6257B34DC2FCD6222DB12880D46617A83BE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "145:2939:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_220": {
									"entryPoint": 778,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDeductMoney_576": {
									"entryPoint": 663,
									"id": 576,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMatNumber_465": {
									"entryPoint": 703,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPercentage_545": {
									"entryPoint": 746,
									"id": 545,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPunish_561": {
									"entryPoint": 683,
									"id": 561,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 800,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@punishRatio_434": {
									"entryPoint": 283,
									"id": 434,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4003:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "570:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "616:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "618:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "618:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "618:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "591:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "583:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:32:2"
															},
															"nodeType": "YulIf",
															"src": "580:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "709:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "724:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "728:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "753:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "788:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "808:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "753:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "836:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "851:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "855:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "543:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "555:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "563:6:2",
														"type": ""
													}
												],
												"src": "487:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1113:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1123:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1189:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1130:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1295:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																	"nodeType": "YulIdentifier",
																	"src": "1206:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1308:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1319:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1101:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1109:3:2",
														"type": ""
													}
												],
												"src": "967:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1412:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1429:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1434:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1422:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1407:3:2",
														"type": ""
													}
												],
												"src": "1339:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1652:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1664:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1675:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1660:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1652:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1699:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1710:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1718:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1714:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1744:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1878:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1752:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1744:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1622:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1637:4:2",
														"type": ""
													}
												],
												"src": "1471:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2002:132:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2012:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2024:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2035:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2012:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2100:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2113:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2124:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2109:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2109:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "2048:51:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2048:79:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1974:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1986:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1997:4:2",
														"type": ""
													}
												],
												"src": "1896:238:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2180:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2190:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2206:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2200:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2173:6:2",
														"type": ""
													}
												],
												"src": "2140:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2334:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2339:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2327:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2355:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2374:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2379:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2355:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2289:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2294:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2305:11:2",
														"type": ""
													}
												],
												"src": "2221:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2438:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2448:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2471:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2453:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2453:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2448:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2482:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2505:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2487:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2482:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2531:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2531:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2526:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2519:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:9:2"
															},
															"nodeType": "YulIf",
															"src": "2516:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2561:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2570:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2573:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2561:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2427:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2430:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2436:1:2",
														"type": ""
													}
												],
												"src": "2396:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2645:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2668:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2650:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2645:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2679:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2702:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2684:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2679:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2877:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2879:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2879:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2879:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2789:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2782:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2782:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2775:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2797:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2804:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2872:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2800:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2800:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2794:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2794:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:105:2"
															},
															"nodeType": "YulIf",
															"src": "2768:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2909:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2924:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2927:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2909:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2618:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2621:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2627:7:2",
														"type": ""
													}
												],
												"src": "2587:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2996:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3007:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2996:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2968:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2978:7:2",
														"type": ""
													}
												],
												"src": "2941:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3052:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3062:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3166:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3159:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3190:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3193:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3183:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3024:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3238:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3258:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3248:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3376:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3379:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3369:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3210:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3502:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3505:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3396:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3608:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3625:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3618:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3519:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3748:124:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3770:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3778:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3766:14:2"
																	},
																	{
																		"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3782:34:2",
																		"type": "",
																		"value": "Unable to calculate,Please submi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3846:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3834:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3834:15:2"
																	},
																	{
																		"hexValue": "7420612072657175657374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3851:13:2",
																		"type": "",
																		"value": "t a request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3827:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3827:38:2"
														}
													]
												},
												"name": "store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3740:6:2",
														"type": ""
													}
												],
												"src": "3642:230:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3978:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3987:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3990:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3980:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3980:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3980:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3944:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3969:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3951:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3951:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3941:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3934:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:43:2"
															},
															"nodeType": "YulIf",
															"src": "3931:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3914:5:2",
														"type": ""
													}
												],
												"src": "3878:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unable to calculate,Please submi\")\n\n        mstore(add(memPtr, 32), \"t a request\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6ca3ce1461005b5780638f861ba71461008b5780639ce5c4bf146100bb578063f2e60202146100eb575b600080fd5b6100756004803603810190610070919061034b565b61011b565b604051610082919061040a565b60405180910390f35b6100a560048036038101906100a09190610378565b610297565b6040516100b2919061040a565b60405180910390f35b6100d560048036038101906100d09190610378565b6102ab565b6040516100e2919061040a565b60405180910390f35b6101056004803603810190610100919061034b565b6102bf565b604051610112919061040a565b60405180910390f35b600080610111831015610131576001905061028e565b61011183101580156101505750600a61011161014d9190610467565b83105b1561015e57600a905061028d565b600a61011161016d9190610467565b8310158015610189575060646101116101869190610467565b83105b15610197576064905061028c565b60646101116101a69190610467565b83101580156101c357506103e86101116101c09190610467565b83105b156101d2576103e8905061028b565b6103e86101116101e29190610467565b831015801561020057506127106101116101fc9190610467565b8311155b1561020f57612710905061028a565b61271061011161021f9190610467565b831015801561023e5750620186a061011161023a9190610467565b8311155b1561024e57620186a09050610289565b6040517fd1d89b74000000000000000000000000000000000000000000000000000000008152600401610280906103ea565b60405180910390fd5b5b5b5b5b5b80915050919050565b60006102a383836102ea565b905092915050565b60006102b7828461030a565b905092915050565b600080600383116102d357600190506102e1565b6102de83600361030a565b90505b80915050919050565b600060646102f88484610320565b6103029190610436565b905092915050565b600081836103189190610436565b905092915050565b6000818361032e9190610467565b905092915050565b6000813590506103458161057d565b92915050565b60006020828403121561036157610360610529565b5b600061036f84828501610336565b91505092915050565b6000806040838503121561038f5761038e610529565b5b600061039d85828601610336565b92505060206103ae85828601610336565b9150509250929050565b60006103c5602b83610425565b91506103d08261052e565b604082019050919050565b6103e4816104c1565b82525050565b60006020820190508181036000830152610403816103b8565b9050919050565b600060208201905061041f60008301846103db565b92915050565b600082825260208201905092915050565b6000610441826104c1565b915061044c836104c1565b92508261045c5761045b6104fa565b5b828204905092915050565b6000610472826104c1565b915061047d836104c1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104b6576104b56104cb565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960008201527f7420612072657175657374000000000000000000000000000000000000000000602082015250565b610586816104c1565b811461059157600080fd5b5056fea2646970667358221220c6222b98d48139de030e5286729d6257b34dc2fcd6222db12880d46617a83be564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111 DUP4 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x28E JUMP JUMPDEST PUSH2 0x111 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI POP PUSH1 0xA PUSH2 0x111 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x15E JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x28D JUMP JUMPDEST PUSH1 0xA PUSH2 0x111 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI POP PUSH1 0x64 PUSH2 0x111 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x197 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x28C JUMP JUMPDEST PUSH1 0x64 PUSH2 0x111 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI POP PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1D2 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x28B JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x111 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH2 0x2710 PUSH2 0x111 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x20F JUMPI PUSH2 0x2710 SWAP1 POP PUSH2 0x28A JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x111 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI POP PUSH3 0x186A0 PUSH2 0x111 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH3 0x186A0 SWAP1 POP PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD1D89B7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x2EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B7 DUP3 DUP5 PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x2D3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x2DE DUP4 PUSH1 0x3 PUSH2 0x30A JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2F8 DUP5 DUP5 PUSH2 0x320 JUMP JUMPDEST PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x345 DUP2 PUSH2 0x57D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361 JUMPI PUSH2 0x360 PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36F DUP5 DUP3 DUP6 ADD PUSH2 0x336 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38F JUMPI PUSH2 0x38E PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39D DUP6 DUP3 DUP7 ADD PUSH2 0x336 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3AE DUP6 DUP3 DUP7 ADD PUSH2 0x336 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 PUSH1 0x2B DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D0 DUP3 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x403 DUP2 PUSH2 0x3B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441 DUP3 PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x44C DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x45C JUMPI PUSH2 0x45B PUSH2 0x4FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 DUP3 PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x47D DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4B6 JUMPI PUSH2 0x4B5 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420612072657175657374000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x586 DUP2 PUSH2 0x4C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0x22 0x2B SWAP9 0xD4 DUP2 CODECOPY 0xDE SUB 0xE MSTORE DUP7 PUSH19 0x9D6257B34DC2FCD6222DB12880D46617A83BE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "145:2939:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2904:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2698:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1393:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;305:797;364:7;384:13;199:3;412:7;:14;408:664;;;451:1;443:9;;408:664;;;199:3;474:7;:15;;:39;;;;;510:3;199;503:10;;;;:::i;:::-;493:7;:20;474:39;470:602;;;538:3;530:11;;470:602;;;581:3;199;574:10;;;;:::i;:::-;563:7;:21;;:45;;;;;605:3;199;598:10;;;;:::i;:::-;588:7;:20;563:45;559:513;;;633:3;625:11;;559:513;;;676:3;199;669:10;;;;:::i;:::-;658:7;:21;;:45;;;;;700:3;199;693:10;;;;:::i;:::-;683:7;:20;658:45;654:418;;;728:3;720:11;;654:418;;;771:3;199;764:10;;;;:::i;:::-;753:7;:21;;:46;;;;;796:3;199;789:10;;;;:::i;:::-;778:7;:21;;753:46;749:323;;;824:3;816:11;;749:323;;;867:3;199;860:10;;;;:::i;:::-;849:7;:21;;:46;;;;;892:3;199;885:10;;;;:::i;:::-;874:7;:21;;849:46;845:227;;;920:3;912:11;;845:227;;;963:97;;;;;;;;;;:::i;:::-;;;;;;;;845:227;749:323;654:418;559:513;470:602;408:664;1089:5;1082:12;;;305:797;;;:::o;2904:177::-;3010:7;3042:31;3056:7;3065;3042:13;:31::i;:::-;3035:38;;2904:177;;;;:::o;2698:169::-;2798:7;2830:29;2843:7;2852:6;2830:12;:29::i;:::-;2823:36;;2698:169;;;;:::o;1393:308::-;1487:7;1512:13;233:1;1540:12;:20;1536:135;;1585:1;1577:9;;1536:135;;;1627:32;1640:12;233:1;1627:12;:32::i;:::-;1619:40;;1536:135;1688:5;1681:12;;;1393:308;;;:::o;2468:202::-;2574:20;2659:3;2627:29;2640:7;2649:6;2627:12;:29::i;:::-;:35;;;;:::i;:::-;2612:50;;2468:202;;;;:::o;3850:96:0:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:474::-;555:6;563;612:2;600:9;591:7;587:23;583:32;580:119;;;618:79;;:::i;:::-;580:119;738:1;763:53;808:7;799:6;788:9;784:22;763:53;:::i;:::-;753:63;;709:117;865:2;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;836:118;487:474;;;;;:::o;967:366::-;1109:3;1130:67;1194:2;1189:3;1130:67;:::i;:::-;1123:74;;1206:93;1295:3;1206:93;:::i;:::-;1324:2;1319:3;1315:12;1308:19;;967:366;;;:::o;1339:126::-;1434:24;1452:5;1434:24;:::i;:::-;1429:3;1422:37;1339:126;;:::o;1471:419::-;1637:4;1675:2;1664:9;1660:18;1652:26;;1724:9;1718:4;1714:20;1710:1;1699:9;1695:17;1688:47;1752:131;1878:4;1752:131;:::i;:::-;1744:139;;1471:419;;;:::o;1896:238::-;1997:4;2035:2;2024:9;2020:18;2012:26;;2048:79;2124:1;2113:9;2109:17;2100:6;2048:79;:::i;:::-;1896:238;;;;:::o;2221:169::-;2305:11;2339:6;2334:3;2327:19;2379:4;2374:3;2370:14;2355:29;;2221:169;;;;:::o;2396:185::-;2436:1;2453:20;2471:1;2453:20;:::i;:::-;2448:25;;2487:20;2505:1;2487:20;:::i;:::-;2482:25;;2526:1;2516:35;;2531:18;;:::i;:::-;2516:35;2573:1;2570;2566:9;2561:14;;2396:185;;;;:::o;2587:348::-;2627:7;2650:20;2668:1;2650:20;:::i;:::-;2645:25;;2684:20;2702:1;2684:20;:::i;:::-;2679:25;;2872:1;2804:66;2800:74;2797:1;2794:81;2789:1;2782:9;2775:17;2771:105;2768:131;;;2879:18;;:::i;:::-;2768:131;2927:1;2924;2920:9;2909:20;;2587:348;;;;:::o;2941:77::-;2978:7;3007:5;2996:16;;2941:77;;;:::o;3024:180::-;3072:77;3069:1;3062:88;3169:4;3166:1;3159:15;3193:4;3190:1;3183:15;3210:180;3258:77;3255:1;3248:88;3355:4;3352:1;3345:15;3379:4;3376:1;3369:15;3519:117;3628:1;3625;3618:12;3642:230;3782:34;3778:1;3770:6;3766:14;3759:58;3851:13;3846:2;3838:6;3834:15;3827:38;3642:230;:::o;3878:122::-;3951:24;3969:5;3951:24;:::i;:::-;3944:5;3941:35;3931:63;;3990:1;3987;3980:12;3931:63;3878:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "296400",
								"executionCost": "362",
								"totalCost": "296762"
							},
							"external": {
								"getDeductMoney(uint256,uint256)": "infinite",
								"getMatNumber(uint256)": "infinite",
								"getPunish(uint256,uint256)": "infinite",
								"punishRatio(uint256)": "infinite"
							},
							"internal": {
								"getPercentage(uint256,uint256)": "infinite",
								"getTaskTrans(uint256)": "infinite",
								"getTaskTransEnd(uint256)": "infinite",
								"getTaskTransFirst(uint256)": "infinite",
								"getTaskVf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 145,
									"end": 3084,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6222b98d48139de030e5286729d6257b34dc2fcd6222db12880d46617a83be564736f6c63430008070033",
									".code": [
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "4F6CA3CE"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "8F861BA7"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "9CE5C4BF"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "F2E60202"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 3084,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 412,
											"end": 426,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 443,
											"end": 452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 474,
											"end": 481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 474,
											"end": 489,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 474,
											"end": 489,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 474,
											"end": 513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 474,
											"end": 513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 474,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 474,
											"end": 513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 474,
											"end": 513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 510,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 503,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 503,
											"end": 513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 503,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 493,
											"end": 513,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 474,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 474,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 538,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 581,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 563,
											"end": 584,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 563,
											"end": 584,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 563,
											"end": 608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 598,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 598,
											"end": 608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 598,
											"end": 608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 608,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 598,
											"end": 608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 588,
											"end": 608,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 563,
											"end": 608,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 633,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 625,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 669,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 669,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 669,
											"end": 679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 669,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 669,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 658,
											"end": 679,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 679,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 658,
											"end": 703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 703,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 658,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 658,
											"end": 703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 693,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 690,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 683,
											"end": 703,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 658,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 720,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 764,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 764,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 753,
											"end": 774,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 753,
											"end": 774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 753,
											"end": 799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 753,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 753,
											"end": 799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 753,
											"end": 799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 789,
											"end": 799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 789,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 778,
											"end": 799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 778,
											"end": 799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 753,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 753,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 824,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 816,
											"end": 827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 816,
											"end": 827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 867,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 860,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 860,
											"end": 870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 860,
											"end": 870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 860,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 860,
											"end": 870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 860,
											"end": 870,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 860,
											"end": 870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 849,
											"end": 856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 849,
											"end": 870,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 849,
											"end": 870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 849,
											"end": 895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 849,
											"end": 895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 849,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 849,
											"end": 895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 849,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "186A0"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 885,
											"end": 895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 874,
											"end": 881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 874,
											"end": 895,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 874,
											"end": 895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 849,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 849,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 920,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "186A0"
										},
										{
											"begin": 912,
											"end": 923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 912,
											"end": 923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "D1D89B7400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 845,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 749,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 654,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 559,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 470,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 408,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 305,
											"end": 1102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3042,
											"end": 3073,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3073,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3042,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3081,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2843,
											"end": 2850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2859,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2830,
											"end": 2859,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2830,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 234,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1560,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 233,
											"end": 234,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1536,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2627,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 591,
											"end": 598,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 587,
											"end": 610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 615,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 738,
											"end": 739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 788,
											"end": 797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 784,
											"end": 806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 753,
											"end": 816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 753,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 709,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1130,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1295,
											"end": 1298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1206,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1339,
											"end": 1465,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1339,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1465,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1471,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1471,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1734,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1878,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1752,
											"end": 1883,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1752,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1890,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2122,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2048,
											"end": 2127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2048,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2390,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2471,
											"end": 2472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2453,
											"end": 2473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2473,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2453,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2487,
											"end": 2507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2487,
											"end": 2507,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2487,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2507,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2527,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2581,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2668,
											"end": 2669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2650,
											"end": 2670,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2650,
											"end": 2670,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2650,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2800,
											"end": 2874,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2876,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2768,
											"end": 2899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2768,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3024,
											"end": 3204,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3024,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3072,
											"end": 3149,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3150,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3173,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3159,
											"end": 3174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3197,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3390,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3210,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3335,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3336,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3345,
											"end": 3360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3636,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3519,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3872,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3642,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "PUSH",
											"source": 2,
											"value": "556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69"
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3766,
											"end": 3780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3759,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "PUSH",
											"source": 2,
											"value": "7420612072657175657374000000000000000000000000000000000000000000"
										},
										{
											"begin": 3846,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3872,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3878,
											"end": 4000,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3878,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 3949,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3931,
											"end": 3994,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3990,
											"end": 3991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 3992,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3994,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3931,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 4000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getDeductMoney(uint256,uint256)": "8f861ba7",
							"getMatNumber(uint256)": "f2e60202",
							"getPunish(uint256,uint256)": "9ce5c4bf",
							"punishRatio(uint256)": "4f6ca3ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ParameterException\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deduct\",\"type\":\"uint256\"}],\"name\":\"getDeductMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transNumber\",\"type\":\"uint256\"}],\"name\":\"getMatNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getPunish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounts\",\"type\":\"uint256\"}],\"name\":\"punishRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/calculateUtils.sol\":\"CalculateUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"utils/calculateUtils.sol\":{\"keccak256\":\"0x4f1a545b765764252892d24aadd001b2ba68d8af9a096e18a7471d7dae66637b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd29b3f3525a913ea957029e679dffb6dc49d613fbd4a964ace75827fbbde278\",\"dweb:/ipfs/QmegiVGp1WsKbxnUz68UVPnfW25SPm5iHaD451LJNtFatG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"utils/calculateUtils.sol": {
				"ast": {
					"absolutePath": "utils/calculateUtils.sol",
					"exportedSymbols": {
						"CalculateUtils": [
							577
						],
						"ParameterException": [
							318
						],
						"SafeMath": [
							311
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "./../contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 312,
							"src": "58:48:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 318,
							"name": "ParameterException",
							"nameLocation": "114:18:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 317,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 316,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 318,
										"src": "133:6:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 315,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "133:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "132:8:1"
							},
							"src": "108:33:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "CalculateUtils",
							"nameLocation": "153:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 321,
									"mutability": "constant",
									"name": "RATE",
									"nameLocation": "192:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "175:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323733",
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "199:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_273_by_1",
											"typeString": "int_const 273"
										},
										"value": "273"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 324,
									"mutability": "constant",
									"name": "VF_N",
									"nameLocation": "226:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "209:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "209:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "233:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "373:729:1",
										"statements": [
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "392:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "384:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "384:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"nodeType": "VariableDeclarationStatement",
												"src": "384:13:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 334,
														"name": "_bounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 335,
														"name": "RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "422:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "412:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "474:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 343,
																"name": "RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "485:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "474:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 345,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "493:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 346,
																	"name": "RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "503:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316531",
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "510:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "1e1"
																},
																"src": "503:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "493:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "474:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 356,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "563:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 357,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "574:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316531",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "581:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "574:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "563:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 361,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "588:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 362,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "598:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316532",
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "605:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "1e2"
																	},
																	"src": "598:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "588:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "563:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 372,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "658:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 373,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "669:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316532",
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "676:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "669:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "658:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 377,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "683:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 378,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "693:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316533",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "700:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1e3"
																		},
																		"src": "693:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "683:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "658:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 388,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "753:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 389,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "764:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316533",
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "771:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "764:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "753:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 393,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "778:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 394,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "789:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316534",
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "796:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "1e4"
																			},
																			"src": "789:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "778:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "753:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 404,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "849:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 405,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "860:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316534",
																					"id": 406,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "867:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "860:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "849:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 409,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "874:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 410,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "885:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316535",
																					"id": 411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "892:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"src": "885:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "874:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "849:46:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 424,
																		"nodeType": "Block",
																		"src": "941:131:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d697420612072657175657374",
																							"id": 421,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1000:45:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							},
																							"value": "Unable to calculate,Please submit a request"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							}
																						],
																						"id": 420,
																						"name": "ParameterException",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "963:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "963:97:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 423,
																				"nodeType": "RevertStatement",
																				"src": "956:104:1"
																			}
																		]
																	},
																	"id": 425,
																	"nodeType": "IfStatement",
																	"src": "845:227:1",
																	"trueBody": {
																		"id": 419,
																		"nodeType": "Block",
																		"src": "897:38:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 415,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 332,
																						"src": "912:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "316535",
																						"id": 416,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "920:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000_by_1",
																							"typeString": "int_const 100000"
																						},
																						"value": "1e5"
																					},
																					"src": "912:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 418,
																				"nodeType": "ExpressionStatement",
																				"src": "912:11:1"
																			}
																		]
																	}
																},
																"id": 426,
																"nodeType": "IfStatement",
																"src": "749:323:1",
																"trueBody": {
																	"id": 403,
																	"nodeType": "Block",
																	"src": "801:38:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 399,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "816:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "316534",
																					"id": 400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "824:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "816:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 402,
																			"nodeType": "ExpressionStatement",
																			"src": "816:11:1"
																		}
																	]
																}
															},
															"id": 427,
															"nodeType": "IfStatement",
															"src": "654:418:1",
															"trueBody": {
																"id": 387,
																"nodeType": "Block",
																"src": "705:38:1",
																"statements": [
																	{
																		"expression": {
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 383,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "720:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "316533",
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "728:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "720:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 386,
																		"nodeType": "ExpressionStatement",
																		"src": "720:11:1"
																	}
																]
															}
														},
														"id": 428,
														"nodeType": "IfStatement",
														"src": "559:513:1",
														"trueBody": {
															"id": 371,
															"nodeType": "Block",
															"src": "610:38:1",
															"statements": [
																{
																	"expression": {
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 367,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "625:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "316532",
																			"id": 368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "633:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "625:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 370,
																	"nodeType": "ExpressionStatement",
																	"src": "625:11:1"
																}
															]
														}
													},
													"id": 429,
													"nodeType": "IfStatement",
													"src": "470:602:1",
													"trueBody": {
														"id": 355,
														"nodeType": "Block",
														"src": "515:38:1",
														"statements": [
															{
																"expression": {
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 351,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "530:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "316531",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "538:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "530:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 354,
																"nodeType": "ExpressionStatement",
																"src": "530:11:1"
															}
														]
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "408:664:1",
												"trueBody": {
													"id": 341,
													"nodeType": "Block",
													"src": "428:36:1",
													"statements": [
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 337,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "443:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "451:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "443:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "443:9:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 431,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "1089:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 330,
												"id": 432,
												"nodeType": "Return",
												"src": "1082:12:1"
											}
										]
									},
									"functionSelector": "4f6ca3ce",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "punishRatio",
									"nameLocation": "314:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "_bounts",
												"nameLocation": "334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:17:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:9:1"
									},
									"scope": 577,
									"src": "305:797:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1501:200:1",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "_maxV",
														"nameLocation": "1520:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "1512:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1512:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"nodeType": "VariableDeclarationStatement",
												"src": "1512:13:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 444,
														"name": "_transNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "1540:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 445,
														"name": "VF_N",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1556:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "1604:67:1",
													"statements": [
														{
															"expression": {
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 452,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "1619:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 455,
																			"name": "_transNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "1640:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 456,
																			"name": "VF_N",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "1654:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 453,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "1627:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "1627:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1627:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1619:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "1619:40:1"
														}
													]
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "1536:135:1",
												"trueBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "1562:36:1",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 447,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "1577:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1585:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1577:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "1577:9:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 462,
													"name": "_maxV",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 442,
													"src": "1688:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 463,
												"nodeType": "Return",
												"src": "1681:12:1"
											}
										]
									},
									"functionSelector": "f2e60202",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMatNumber",
									"nameLocation": "1402:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_transNumber",
												"nameLocation": "1423:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1415:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:22:1"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:1"
									},
									"scope": 577,
									"src": "1393:308:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1855:54:1",
										"statements": [
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "1866:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 474,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1889:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3534",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1898:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																},
																"value": "54"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_54_by_1",
																	"typeString": "int_const 54"
																}
															],
															"id": 473,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "1875:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1875:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1866:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1866:35:1"
											}
										]
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTrans",
									"nameLocation": "1754:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1775:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1767:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:17:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1842:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1834:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:16:1"
									},
									"scope": 577,
									"src": "1745:164:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "2030:54:1",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 487,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2041:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 489,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "2064:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3234",
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2073:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																}
															],
															"id": 488,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2050:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2050:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2041:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2041:35:1"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransEnd",
									"nameLocation": "1926:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1950:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1942:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:17:1"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2017:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "2009:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:16:1"
									},
									"scope": 577,
									"src": "1917:167:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2207:54:1",
										"statements": [
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2218:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 504,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2241:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3330",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2250:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																}
															],
															"id": 503,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2227:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2227:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2218:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "2218:35:1"
											}
										]
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskTransFirst",
									"nameLocation": "2101:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2127:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2119:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:17:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2194:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2186:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:16:1"
									},
									"scope": 577,
									"src": "2092:169:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2380:54:1",
										"statements": [
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 517,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2391:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 519,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2414:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3336",
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2423:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																},
																"value": "36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_36_by_1",
																	"typeString": "int_const 36"
																}
															],
															"id": 518,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2400:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2400:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2391:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "2391:35:1"
											}
										]
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaskVf",
									"nameLocation": "2314:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2332:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2324:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:17:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2372:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2364:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:16:1"
									},
									"scope": 577,
									"src": "2305:129:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2601:69:1",
										"statements": [
											{
												"expression": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "returnNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2612:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 537,
																	"name": "_number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "2640:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 538,
																	"name": "_ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "2649:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 535,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2627:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "2627:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2627:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2659:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2627:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2612:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2612:50:1"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentage",
									"nameLocation": "2477:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "2499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2516:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2508:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:33:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "returnNumber",
												"nameLocation": "2582:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2574:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2573:22:1"
									},
									"scope": 577,
									"src": "2468:202:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "2812:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2843:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 557,
															"name": "_ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "2852:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 554,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "2830:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "2830:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2830:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 553,
												"id": 559,
												"nodeType": "Return",
												"src": "2823:36:1"
											}
										]
									},
									"functionSelector": "9ce5c4bf",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPunish",
									"nameLocation": "2707:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2725:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2717:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2741:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2733:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:33:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2798:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:9:1"
									},
									"scope": 577,
									"src": "2698:169:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "3024:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3056:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 572,
															"name": "_deduct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "3065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "3042:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 574,
												"nodeType": "Return",
												"src": "3035:38:1"
											}
										]
									},
									"functionSelector": "8f861ba7",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeductMoney",
									"nameLocation": "2913:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2936:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2928:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2928:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_deduct",
												"nameLocation": "2953:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2945:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2927:34:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3010:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:9:1"
									},
									"scope": 577,
									"src": "2904:177:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 578,
							"src": "145:2939:1",
							"usedErrors": [
								318
							]
						}
					],
					"src": "33:3053:1"
				},
				"id": 1
			}
		}
	}
}